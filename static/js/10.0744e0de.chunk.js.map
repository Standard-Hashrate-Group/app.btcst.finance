{"version":3,"sources":["utils/format.ts","service/index.ts","utils/index.ts","utils/price.ts","utils/contract.ts","hooks/useActiveWeb3React.ts","components/LoadingBox.tsx","utils/analytics.ts","components/Footer.tsx","components/Page.tsx","hooks/useFetchTokenPrice.ts","components/Header.tsx","components/LoadingButton.tsx","hooks/useDailyPool.ts","../node_modules/use-async-effect/index.js","../node_modules/lodash/isEmpty.js","views/airdrop/Airdrops/ClaimButton.tsx","constants/navIcon/MarketMakeIcon.tsx","components/MarketMake/index.tsx","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/icons/MoreVert.js","views/mine/rewardList.tsx","views/mine/list.tsx","constants/mine.ts","hooks/useMineState.ts","components/GetBTCSTCard/index.tsx","components/GetWrappedAssetCard/index.tsx","views/mine/index.tsx"],"names":["formatBalance","value","decimals","maxFraction","formatted","utils","formatUnits","split","length","substr","parseBalance","parseUnits","formatApy","price","apr","Number","mulUnsafe","FixedNumber","from","divUnsafe","toString","apy","Math","min","pow","formatPercentage","String","getRemainTime","now","Date","totalSeconds","floor","remainSeconds","hours","padStart","minutes","seconds","progress","formatMoney","num","replace","RAMOUNT_DIVIDER","BigNumber","getTVL","a","axios","get","response","data","getTXInfo","getTokenPrice","BTCB","max_supply","name","BTC","symbol","total_supply","TBTC","getMineStatus","totalSupply","contract","undefined","getTotalPendingReward","address","account","claimAllReward","TARGET_INITIAL_SUPPLY","getPoolInfo","index","poolInfo","alreadyMinedReward","merkleTotalAlreadyClaimed","viewFarmBasicInfo","Promise","all","map","field","callStatic","e","console","log","started","stakePeriod","desc","getDailyRecords","FarmContract","farmInfo","tokenAddress","arr","go","k","getTimeKey","push","viewRoundSlot","Object","assign","timeKey","_roundSlotsReward","rewardInfo","rAmount","rAccum","rAccumulateAmount","div","rewardLastSubmiter","rewardAmount","rewardAccumulateAmount","totalStaked","stakedLowestWaterMark","totalStakedInSlot","stakedAddresses","isEmptyValue","text","isBigNumber","isZero","time","baseTime","toNumber","Error","passed","round","end","calculateDailyReward","hashrate","dailyBtcPerHash","btcPrice","dailyEstimated","powerPrice","powerPerHashUnitDay","dailyBTCNetreward","subUnsafe","dailyEstimatedUSD","btc","usd","WEEEK_REWARD_MAP","START_TIME","getDailyRewardsByBlock","pair","getTime","getPriceBySymbol","list","item","values","find","p","toLowerCase","getContract","ABI","library","getAddress","isAddress","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getERC20Contract","IBEP20","abi","getFarmBTCSTContract","FARMBTCST","getTBTCChefContract","TBTCChef","getTBTCESTPolicyContract","TBTCESTPolicy","getMCContract","MasterCollector","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","NetworkContextName","active","useStyles","makeStyles","theme","colorSecondary","color","LoadingBox","children","loading","showNoData","showNoDataContent","size","classes","textAlign","track","window","gtag","props","process","REACT_APP_GA_MEASUREMENT_ID","footer","position","bottom","left","right","backgroundColor","palette","background","paper","boxShadow","paddingTop","paddingBottom","Footer","className","useWeb3React","actionRef","useRef","setWalletModalStatus","useSetRecoilState","walletModalStatusAtom","setAccountModalStatus","accountModalStatusAtom","connectWallet","useCallback","openAccountModal","React","useState","anchorEl","setAnchorEl","Hidden","lgUp","Container","maxWidth","Box","display","alignItems","justifyContent","flexGrow","ml","Button","variant","onClick","slice","ref","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","i18n","changeLanguage","selected","language","Page","forwardRef","title","rest","location","useLocation","setTokenPriceList","tokenPriceListAtom","setTokenPriceLoading","tokenPriceLoadingAtom","useEffect","then","finally","useFetchTokenPrice","sendPageViewEvent","page_path","pathname","Helmet","root","padding","width","toolbar","minHeight","Header","setMobileNavOpen","mobileNavOpenAtom","showNav","clsx","pt","pb","fontSize","mdDown","pending","pendingIndicator","visibility","pendingIndicatorCenter","transform","pendingIndicatorStart","pendingIndicatorEnd","endIconPendingEnd","startIconPendingStart","labelPendingCenter","PendingIndicator","LoadingButton","disabled","pendingPosition","other","startIcon","capitalize","endIcon","label","useDailyPool","sourceToken","targetToken","txHappend","tokenPrice","useRecoilValue","tokenPriceLoading","setLoading","sourceStakeAmount","setSourceStakeAmount","tokenRewardPerStake","setTokenRewardPerStake","usdRewardPerStake","setUsdTokenRewardPerStake","farmingInfo","useMemo","FarmingInfoMap","sourceTokenERC20Contract","useAsyncEffect","contractConfig","TBTC_CHEF","FarmingPidMap","totalDepositAmount","stakedTokenShrinkFactor","mul","tokenReward","tps","ups","balanceOf","FARM","BTCBStakeAmount","FARM_BTCST","BTCSTStakeAmount","totalAmount","add","sourceSupplyAmount","isNegative","fromString","mineBTCBStatus","dayList","eachHaveCoin","error","require","effect","destroy","inputs","hasDestroy","result","mounted","maybePromise","resolve","module","exports","baseKeys","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","prototype","splice","tag","key","call","height","breakpoints","down","borderRadius","memo","t","useTranslation","MarketMakeIcon","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","d","id","tokenPairs","to","bullet","margin","pos","marginBottom","currentTokenPairIndex","setCurrentTokenPairIndex","handleSelectChange","target","Card","CardContent","Typography","component","gutterBottom","Select","onChange","tokenPair","CardActions","Grid","container","spacing","MARKETS","market","xl","md","href","CardHeader","action","avatar","_props$component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutProperties","type","_extends","content","withStyles","flex","marginRight","alignSelf","marginTop","tablelvl2","TableHead","Tablelvl2Context","Provider","role","_props$disableSpacing","disableSpacing","marginLeft","_interopRequireDefault","_interopRequireWildcard","defineProperty","default","_default","createElement","table","claim","tableRow","borderBottom","tableCell","wordBreak","cardContent","cardAction","RewardList","asyncClaimClick","canClaim","reduce","current","next","gt","Table","TableRow","TableCell","TableBody","hover","token","logoURI","Avatar","src","isEmpty","CircularProgress","currency","precision","format","ClaimButton","execute","cursor","MineList","history","useHistory","btcstToBtcbApy","BTCST","btcstToBtcstApy","btcstToTbtctApy","BTCBToTbtctApy","TBTCToTbtctApy","handleRowClick","stakeToken","smDown","rewardCycle","RewardCycle","Day","Block","wrappedTokens","rewardTokens","useMineState","setTxHappend","mcContract","MASTER_COLLECTOR","pendingRewards","useAsync","getTotalPendingRewardList","rewardList","filter","useAsyncCallback","tx","wait","tokens","currentTokenSymbol","setCurrentTokenSymbol","dark","MineView","mt","sm","xs","MarketMake"],"mappings":"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","file":"static/js/10.0744e0de.chunk.js","sourcesContent":["import { BigNumberish, utils, FixedNumber } from 'ethers';\n\nconst baseTime = 1616760000000;\n\nexport const formatBalance = (\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) => {\n  const formatted = utils.formatUnits(value, decimals);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function formatFixedBalance(\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) {}\n\nexport function commonFormatBalance(value: BigNumberish, decimals = 18) {\n  return formatBalance(value, decimals, 8);\n}\n\nexport const parseBalance = (value: string = '0', decimals = 18) => {\n  return utils.parseUnits(value, decimals);\n};\n\n\nexport function formatApy(\n  value: FixedNumber,\n  price: FixedNumber\n) {\n  const apr = Number(\n    value\n      .mulUnsafe(FixedNumber.from(365))\n      .divUnsafe(price)\n      .toString()\n  );\n  // const apy = (1+apr/365)^365-1;\n  const apy = Math.min(9999.999999, Math.pow(1 + apr / 365, 365) - 1);\n  return formatPercentage(apy, 4);\n}\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n  const formatted = String(value * 100);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function getRemainTime() {\n  const now = Date.now();\n  const secondsPerDay = 24 * 60 * 60;\n  const totalSeconds =  Math.floor(((now - baseTime) / 1000) % secondsPerDay);\n  const remainSeconds = secondsPerDay - totalSeconds; \n\n  const hours = String(Math.floor((remainSeconds / ( 60 * 60)) % 24)).padStart(2, '0');\n  const minutes = String(Math.floor((remainSeconds / 60) % 60)).padStart(2, '0');\n  const seconds = String(Math.floor(remainSeconds % 60)).padStart(2, '0');\n  const progress = Math.floor(totalSeconds * 100 / secondsPerDay);\n\n  return {\n    hours,\n    minutes,\n    seconds,\n    progress\n  }\n}\n\nexport function formatMoney(num: Number) {\n  return num.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport axios from 'axios';\nimport { contractConfig } from 'src/config';\nimport { parseBalance } from 'src/utils/format';\nimport { AirdropInfo } from 'src/utils/airdrop';\nimport { getTimeKey } from 'src/utils';\nimport { PriceItem } from 'src/types/token';\n\nconst BATCH_LOAD_RECORD_LIMIT = 5;\nconst RAMOUNT_DIVIDER = BigNumber.from(1e8).pow(BigNumber.from(4));\nconst TBTC_RATE = 1.00;\n\ntype Response<T> = {\n  code: number;\n  data: T;\n  msg?: any;\n};\n\nexport type TokenPriceList = {\n  [key: string]: PriceItem;\n};\n\nexport async function getTVL() {\n  const response = await axios.get('https://api.1-b.tc/api/tvl/');\n\n  return response.data;\n}\n\nexport async function getTXInfo() {\n  const response = await axios.get('https://api.1-b.tc/api/getTXInfo/');\n\n  return response.data;\n}\n\nexport async function getTokenPrice() {\n  try {\n    const response = await axios.get<Response<TokenPriceList>>(\n      'https://api.1-b.tc/api/token/price'\n    );\n    const data = response.data.data;\n\n    data.BTCB = {\n      max_supply: null,\n      name: 'BTCB',\n      price: data.BTC.price,\n      symbol: 'BTCB',\n      total_supply: null\n    };\n\n    data.TBTC = {\n      max_supply: 2100,\n      name: '𝜏Bitcoin',\n      price: data.BTC.price * TBTC_RATE,\n      symbol: 'TBTC',\n      total_supply: null\n    };\n\n    return data;\n  } catch (e) {\n    return {};\n  }\n}\n\nexport async function getMineStatus() {\n  const response = await axios.get(\n    'https://584xqc7ik2.execute-api.us-east-2.amazonaws.com/beta/bp-relay'\n  );\n\n  return response.data.data;\n}\n\nexport async function getTotalStakedBTCST(contract: any, account: any) {\n  if (contract && account) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getTotalMinedRTokenInpool(contract: any) {\n  if (contract) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getBTCInPool(contract: any) {\n  if (contract) {\n    return contract.balanceOf(contractConfig.FARM);\n  }\n\n  return undefined;\n}\n\nexport async function totalSupply(contract: any) {\n  if (contract) {\n    return contract.totalSupply();\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseDate(estPolicyContract: any) {\n  if (estPolicyContract) {\n    let nextTime = await getNextRebaseTimeInSeconds(estPolicyContract);\n    let ms = nextTime.mul(1000).toNumber();\n    if (ms < Date.now()) {\n      return undefined;\n    }\n    console.log('nextTime', ms);\n    return new Date(ms);\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseTimeInSeconds(estPolicyContract: any) {\n  if (estPolicyContract) {\n    const lastRebaseTime = await estPolicyContract.lastRebaseTimestampSec();\n    const interval = await estPolicyContract.minRebaseTimeIntervalSec();\n    return lastRebaseTime.add(interval);\n  }\n}\n\nexport async function getTotalRemainingSupplyLocked(contract: any) {\n  if (contract) {\n    return contract.getTotalRemainingSupplyLocked();\n  }\n  return undefined;\n}\n\nexport async function getTimeWeightedPrice(contract: any) {\n  if (contract) {\n    const data = await contract.getSwapData();\n    if (BigNumber.from(0).eq(data)) {\n      //0 indicates that swap didn't inited, we make it default 1e18/1e18 means one\n      return BigNumber.from(10 ** 18 + '');\n    }\n    return data;\n  }\n  return undefined;\n}\n\nexport async function startBlock(contract: any) {\n  if (contract) {\n    return contract.startBlock();\n  }\n  return undefined;\n}\nexport async function getTokenAllowance(\n  contract: any,\n  account: string,\n  spender: string\n) {\n  if (contract && account) {\n    return contract.allowance(account, spender);\n  }\n  return undefined;\n}\n\nexport async function viewUserInfo(contract: any, account: string) {\n  if (contract && account) {\n    return contract.viewUserInfo(account);\n  }\n}\n\n// TODO: remove mock here\nexport async function getBalance(contract: any, account: string) {\n  if (contract && account) {\n    return contract.balanceOf(account);\n  }\n\n  return undefined;\n}\n\nexport async function getTotalPendingReward(\n  contract: any,\n  address: string,\n  account: string\n) {\n  if (contract && account && address) {\n    return contract.getTotalPendingReward(address, account);\n  }\n\n  return undefined;\n}\n\nexport async function claimAllReward(contract: any, account: string) {\n  if (contract && account) {\n    return contract.claimAllReward(account);\n  }\n\n  return undefined;\n}\n\nexport async function TARGET_INITIAL_SUPPLY(contract: any) {\n  if (contract) {\n    return contract.TARGET_INITIAL_SUPPLY();\n  }\n  return undefined;\n}\n\nexport async function getPoolInfo(contract: any,index: number){\n  if (contract ) {\n    return contract.poolInfo(index);\n  }\n  return undefined;\n}\nexport async function alreadyMinedReward(contract: any) {\n  if (contract) {\n    return contract.alreadyMinedReward();\n  }\n  return undefined;\n}\n\nexport async function merkleTotalAlreadyClaimed(contract: any) {\n  if (contract) {\n    return contract.merkleTotalAlreadyClaimed();\n  }\n  return undefined;\n}\n\nexport async function viewFarmBasicInfo(contract: any) {\n  const data = await Promise.all(\n    ['_farmStartedTime', '_miniStakePeriodInSeconds', '_farmDescription'].map(\n      field => {\n        try {\n          return contract.callStatic[field]();\n        } catch (e) {\n          console.log(e);\n          return '';\n        }\n      }\n    )\n  );\n  return {\n    started: data[0],\n    stakePeriod: data[1],\n    desc: data[2]\n  };\n}\n\nexport async function getDailyRecords(\n  FarmContract: any,\n  farmInfo: any,\n  tokenAddress: string\n) {\n  let arr: number[] = [];\n  let now = Date.now() / 1000;\n\n  if (!farmInfo) {\n    return undefined;\n  }\n\n  for (let index = 0; index < BATCH_LOAD_RECORD_LIMIT; index++) {\n    let go = now - index * farmInfo.stakePeriod;\n    if (go <= farmInfo.started) {\n      break;\n    }\n    let k = getTimeKey(go, farmInfo.started, farmInfo.stakePeriod);\n    arr.push(k);\n  }\n  let data = await Promise.all(\n    arr.map(field => {\n      try {\n        return FarmContract.viewRoundSlot(field);\n      } catch (e) {\n        return '';\n      }\n    })\n  );\n  for (let index = 0; index < arr.length; index++) {\n    data[index] = Object.assign({}, data[index], {\n      timeKey: arr[index]\n    });\n    let rewardInfo = await FarmContract._roundSlotsReward(\n      arr[index],\n      tokenAddress\n    );\n\n    let rAmount = rewardInfo.rAmount;\n    let rAccum = rewardInfo.rAccumulateAmount;\n    if (rewardInfo.rAmount) {\n      rAmount = rewardInfo.rAmount.div(RAMOUNT_DIVIDER);\n    }\n    if (rewardInfo.rAccumulateAmount) {\n      rAccum = rewardInfo.rAccumulateAmount.div(RAMOUNT_DIVIDER);\n    }\n    data[index] = {\n      rewardLastSubmiter: data[index]['rewardLastSubmiter'],\n      rewardAmount: rAmount,\n      rewardAccumulateAmount: rAccum,\n      totalStaked: data[index]['totalStaked'],\n      stakedLowestWaterMark: data[index]['stakedLowestWaterMark'],\n      totalStakedInSlot: data[index]['totalStakedInSlot'],\n      stakedAddresses: data[index]['stakedAddresses'],\n      timeKey: arr[index]\n    };\n  }\n\n  return data;\n}\n","import { BigNumber, FixedNumber } from 'ethers';\nimport { JSBI, Percent } from '@pancakeswap-libs/sdk';\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value\n    .mul(BigNumber.from(10000).add(BigNumber.from(1000)))\n    .div(BigNumber.from(10000));\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000));\n}\n\nexport const isEmptyValue = (text: string) =>\n  BigNumber.isBigNumber(text)\n    ? BigNumber.from(text).isZero()\n    : text === '' || text.replace(/0/g, '').replace(/\\./, '') === '';\n\nexport const formatTimeKey2 = (value: number) => {\n  const date = new Date(value * 1000);\n  return date.toLocaleDateString('zh-cn');\n};\n\nexport function getTimeKey(time, baseTime, stakePeriod) {\n  baseTime = baseTime.toNumber();\n  stakePeriod = stakePeriod.toNumber();\n  if (time < baseTime) {\n    throw new Error('time < farm started time');\n  }\n  let passed = Math.round(time - baseTime);\n  let round = Math.round(passed / stakePeriod);\n  let end = baseTime + round * stakePeriod;\n  if (end < time) {\n    return end + stakePeriod;\n  }\n  return end;\n}\n\nexport const calculateDailyReward = (\n  hashrate: FixedNumber,\n  dailyBtcPerHash: FixedNumber,\n  btcPrice: FixedNumber\n) => {\n  const dailyEstimated = hashrate.mulUnsafe(dailyBtcPerHash);\n  const powerPrice = FixedNumber.from(5846)\n    .divUnsafe(FixedNumber.from(1000 * 1000 * 100))\n    .mulUnsafe(FixedNumber.from(103))\n    .divUnsafe(FixedNumber.from(100));\n  const powerPerHashUnitDay = FixedNumber.from(60).mulUnsafe(\n    FixedNumber.from(24)\n  );\n  let dailyBTCNetreward = dailyEstimated.subUnsafe(\n    powerPerHashUnitDay\n      .mulUnsafe(powerPrice)\n      .mulUnsafe(hashrate)\n      .divUnsafe(btcPrice)\n  );\n  let dailyEstimatedUSD = dailyBTCNetreward.mulUnsafe(btcPrice).round(6);\n  dailyBTCNetreward = dailyBTCNetreward.round(6);\n  return { btc: dailyBTCNetreward, usd: dailyEstimatedUSD };\n};\nconst WEEEK_REWARD_MAP =[\n  82.823529216,\n  41.411764608,\n  20.705882304,\n  10.352941152,\n  5.176470576,\n  2.588235288,\n  1.294117644,\n  0.647058822,0];\nconst START_TIME = new Date('2021-04-02 20:00 GMT+0800');\n\nexport function getDailyRewardsByBlock(pair: string) {\n  console.log(`get ${pair} rewards`);\n  let now = Date.now();\n  if (now<START_TIME.getTime()){\n    now = START_TIME.getTime()+1000;\n  }\n  let index = Math.floor((now-START_TIME.getTime())/(7*86400*1000));\n  if (index>=8){\n    index =8;\n  }\n  return FixedNumber.from(WEEEK_REWARD_MAP[index]+\"\");\n}\n","import { TokenPriceList } from 'src/service';\n\nexport function getPriceBySymbol(list: TokenPriceList, symbol: string) {\n  const item = Object.values(list).find(p => p.symbol.toLowerCase() === symbol);\n\n  if (!item) {\n    return undefined;\n  }\n\n  return item.price;\n}\n","import { getAddress } from '@ethersproject/address';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Web3Provider, JsonRpcSigner } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\n\nimport IBEP20 from 'src/constants/abis/IBEP20.json';\nimport FARMBTCST from 'src/constants/abis/FarmBTCST.json';\nimport TBTCChef from 'src/constants/abis/tBTCChef.json';\nimport TBTCESTPolicy from 'src/constants/abis/tBTCESTPolicy.json';\nimport MasterCollector from 'src/constants/abis/MasterCollector.json';\n\nexport function getSigner(\n  library: Web3Provider,\n  account: string\n): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(\n  library: Web3Provider,\n  account?: string\n): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n\nexport function getContract(\n  address: string,\n  ABI: any,\n  library: Web3Provider,\n  account?: string\n): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n\nexport function getERC20Contract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, IBEP20.abi, library, account);\n}\n\nexport function getFarmBTCSTContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, FARMBTCST.abi, library, account);\n}\n\nexport function getTBTCChefContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCChef.abi, library, account);\n}\n\nexport function getTBTCESTPolicyContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCESTPolicy.abi, library, account);\n}\n\nexport function getMCContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, MasterCollector.abi, library, account);\n}\n\n","import { Web3Provider } from '@ethersproject/providers'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { NetworkContextName  } from 'src/constants/index';\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<\n  Web3Provider\n> & { chainId?: number } {\n  const context = useWeb3ReactCore<Web3Provider>();\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\n  return context.active ? context : contextNetwork;\n}\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, CircularProgress, makeStyles, Theme } from '@material-ui/core';\n\ninterface LoadingBoxProps {\n  children: any;\n  loading?: boolean;\n  showNoData?: boolean;\n  showNoDataContent?: any;\n  p?: number;\n  size?: string;\n  color?: \"primary\" | \"secondary\" | \"inherit\";\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  colorSecondary: {\n    color: '#000000'\n  }\n}));\n\nconst LoadingBox: FC<LoadingBoxProps> = ({\n  children,\n  loading = false,\n  showNoData = false,\n  showNoDataContent = 'No data',\n  color = 'primary',\n  p = 5,\n  size = '40px'\n}) => {\n  const classes = useStyles();\n  if (loading) {\n    return (\n      <Box p={p} textAlign=\"center\">\n        <CircularProgress color={color} size={size} classes={classes}/>\n      </Box>\n    );\n  }\n\n  if (showNoData) {\n    return (\n      <Box p={p} textAlign=\"center\">\n        {showNoDataContent}\n      </Box>\n    );\n  }\n\n  return children;\n};\n\nLoadingBox.propTypes = {\n  children: PropTypes.any,\n  loading: PropTypes.bool,\n  showNoData: PropTypes.bool,\n  showNoDataContent: PropTypes.any\n};\n\nexport default LoadingBox;\n","declare const window: any;\n\nconst track = (...args: any[]): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n};\n\nconst pageview = (props: any): void => {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n};\n\nconst event = (type: string, props: Record<string, any>) => {\n  track('event', type, props);\n};\n\nexport default {\n  pageview,\n  event\n};\n","import React, { useCallback, useRef } from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton,\n  Container,\n  ButtonGroup,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\nimport i18n from 'src/i18n';\n\ninterface FooterProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: '0px 5px 10px 0px rgb(255 255 255 / 70%)',\n    paddingTop: 16,\n    paddingBottom: 16\n  }\n}));\n\nconst Footer: FC<FooterProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Hidden lgUp>\n      <Container maxWidth={false}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexGrow={1}\n          className={classes.footer}\n        >\n          <Box ml={2}>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button>\n                : <Button variant=\"contained\" color=\"primary\" ref={actionRef} onClick={connectWallet}>Connect Wallet</Button>\n            }\n          </Box>\n          <Box p={0}>\n            <Button onClick={(event) => setAnchorEl(event.currentTarget)}>\n              <LanguageIcon />\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n            >\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('zh');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'zh'}\n              >中文</MenuItem>\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('en');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'en'}\n              >EN</MenuItem>\n            </Menu>\n          </Box>\n        </Box>\n      </Container>\n    </Hidden>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React, {\n  forwardRef,\n  useEffect,\n  useCallback\n} from 'react';\nimport type {\n  HTMLProps,\n  ReactNode\n} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport track from 'src/utils/analytics';\nimport Footer from './Footer';\nimport { useFetchTokenPrice } from 'src/hooks/useFetchTokenPrice';\n\ninterface PageProps extends HTMLProps<HTMLDivElement> {\n  children?: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  const location = useLocation();\n  useFetchTokenPrice();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div\n      ref={ref as any}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n      <Footer />\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useEffect } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { tokenPriceListAtom, tokenPriceLoadingAtom } from 'src/atoms';\nimport { getTokenPrice, TokenPriceList } from 'src/service';\n\nexport function useFetchTokenPrice() {\n  const setTokenPriceList = useSetRecoilState(tokenPriceListAtom);\n  const setTokenPriceLoading = useSetRecoilState(tokenPriceLoadingAtom);\n\n  useEffect(() => {\n    setTokenPriceLoading(true);\n    getTokenPrice().then(list => {\n      setTokenPriceList(list);\n    }).finally(() => {\n      setTokenPriceLoading(false);\n    });\n  }, []);\n}\n","import React, {\n  useCallback,\n  useRef,\n} from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton\n} from '@material-ui/core';\n// import { Send as SendIcon } from 'react-feather';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\n// import { useActiveWeb3React} from 'src/hooks/useActiveWeb3React';\nimport Logo from 'src/components/Logo';\n\ninterface HeaderProps {\n  className?: string;\n  title: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // zIndex: theme.zIndex.drawer + 100,\n    // backgroundColor: theme.palette.background.default\n    padding: 0\n  },\n  account: {\n    width: 80,\n  },\n  toolbar: {\n    minHeight: 64\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, title, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n  const setMobileNavOpen = useSetRecoilState(mobileNavOpenAtom);\n\n  const showNav = useCallback(() => {\n    setMobileNavOpen(true);\n  }, [setMobileNavOpen])\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  return (\n    <Toolbar className={clsx(classes.root, className)} {...rest}>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexGrow={1}\n        pt={3}\n        pb={3}\n      >\n        <Hidden lgUp>\n          <Logo />\n          <IconButton\n            color=\"inherit\"\n            onClick={showNav}\n          >\n            <SvgIcon fontSize=\"small\" color=\"primary\">\n              <MenuIcon />\n            </SvgIcon>\n          </IconButton>\n        </Hidden>\n        <Hidden mdDown>\n          <Box flexGrow={1}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {\n                /* <SvgIcon fontSize=\"small\">\n                  <SendIcon />\n                </SvgIcon> */\n              }\n              {title}\n            </Typography>\n          </Box>\n          {/* <Box ml={2} flexGrow={1} /> */}\n          <Box>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button> \n                : <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    ref={actionRef}\n                    onClick={connectWallet}\n                  >\n                    Connect Wallet\n                  </Button>\n            }\n          </Box>\n        </Hidden>\n      </Box>\n    </Toolbar >\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, ButtonProps } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  /* Styles applied to the root element. */\n  root: {},\n  /* Styles applied to the root element if `pending={true}`. */\n  pending: {},\n  /* Styles applied to the pendingIndicator element. */\n  pendingIndicator: {\n    position: 'absolute',\n    visibility: 'visible',\n    display: 'flex'\n  },\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"center\"`. */\n  pendingIndicatorCenter: {\n    left: '50%',\n    transform: 'translate(-50%)'\n  },\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"start\"`. */\n  pendingIndicatorStart: {\n    left: 14\n  },\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"end\"`. */\n  pendingIndicatorEnd: {\n    right: 14\n  },\n  /* Styles applied to the endIcon element if `pending={true}` and `pendingPosition=\"end\"`. */\n  endIconPendingEnd: {\n    visibility: 'hidden'\n  },\n  /* Styles applied to the startIcon element if `pending={true}` and `pendingPosition=\"start\"`. */\n  startIconPendingStart: {\n    visibility: 'hidden'\n  },\n  /* Styles applied to the label element if `pending={true}` and `pendingPosition=\"center\"`. */\n  labelPendingCenter: {\n    visibility: 'hidden'\n  }\n}))\n\nconst PendingIndicator = <CircularProgress color=\"inherit\" size={16} />;\n\n\nexport interface LoadingButtonProps extends ButtonProps {\n  pending?: boolean;\n  pendingIndicator?: React.ReactNode;\n  pendingPosition?: 'start' | 'end' | 'center'\n}\n\nconst LoadingButton: FC<LoadingButtonProps> = (props) => {\n  const {\n    children,\n    className,\n    disabled = false,\n    pending = false,\n    pendingIndicator = PendingIndicator,\n    pendingPosition = 'center',\n    ...other\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={clsx(\n        classes.root,\n        {\n          [classes.pending]: pending\n        },\n        className\n      )}\n      disabled={disabled || pending}\n      classes={{\n        startIcon:\n          classes[\n            `startIcon${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`\n          ],\n        endIcon:\n          classes[\n            `endIcon${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`\n          ],\n        label:\n          classes[\n            `label${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`\n          ]\n      }}\n      {...other}\n    >\n      {pending && (\n        <div\n          className={clsx(\n            classes.pendingIndicator,\n            classes[`pendingIndicator${capitalize(pendingPosition)}`]\n          )}\n        >\n          {pendingIndicator}\n        </div>\n      )}\n\n      {children}\n    </Button>\n  );\n};\n\nexport default LoadingButton;\n","import { utils, BigNumber, FixedNumber } from 'ethers';\nimport { Token } from 'src/types/token';\nimport { useAsync } from 'react-async-hook';\nimport useAsyncEffect from 'use-async-effect';\nimport { getTokenPrice, getMineStatus, getPoolInfo } from 'src/service';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { getERC20Contract, getTBTCChefContract } from 'src/utils/contract';\nimport { useEffect, useMemo, useState } from 'react';\nimport { FarmingInfoMap, BTCB, TBTC, FarmingPidMap } from 'src/constants/token';\nimport { calculateDailyReward, getDailyRewardsByBlock } from 'src/utils';\nimport { formatApy } from 'src/utils/format';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceListAtom, tokenPriceLoadingAtom } from 'src/atoms';\nimport isEmpty from 'lodash/isEmpty';\nimport { contractConfig } from 'src/config';\n\nconst DISTRIBUTE_LINE = '0.6';\n\nexport function useDailyPool(\n  sourceToken: Token,\n  targetToken: Token,\n  txHappend: number = 0\n) {\n  const { account, library } = useActiveWeb3React();\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  const [loading, setLoading] = useState(true);\n  const [sourceStakeAmount, setSourceStakeAmount] = useState<BigNumber>();\n  const [tokenRewardPerStake, setTokenRewardPerStake] = useState<FixedNumber>();\n  const [usdRewardPerStake, setUsdTokenRewardPerStake] = useState<\n    FixedNumber\n  >();\n\n  const farmingInfo = useMemo(() => {\n    return FarmingInfoMap[targetToken.symbol];\n  }, [targetToken.symbol]);\n\n  const sourceTokenERC20Contract = useMemo(() => {\n    return sourceToken && sourceToken.address\n      ? getERC20Contract(sourceToken.address, library, account)\n      : null;\n  }, [sourceToken, library, account]);\n\n  useAsyncEffect(async () => {\n    setLoading(true);\n    if (tokenPriceLoading) {\n      return;\n    }\n\n    try {\n      if (targetToken.symbol === TBTC.symbol) {\n        const contract = getTBTCChefContract(\n          contractConfig.TBTC_CHEF,\n          library,\n          account\n        );\n        const poolInfo = await getPoolInfo(\n          contract,\n          FarmingPidMap[sourceToken.symbol]\n        );\n        let sourceStakeAmount = poolInfo.totalDepositAmount;\n        if (sourceStakeAmount.isZero()) {\n          return;\n        }\n        const stakedTokenShrinkFactor = poolInfo.stakedTokenShrinkFactor;\n        if (stakedTokenShrinkFactor > 0) {\n          sourceStakeAmount = sourceStakeAmount\n            .mul(stakedTokenShrinkFactor)\n            .div(BigNumber.from(1e12 + ''));\n        }\n\n        setSourceStakeAmount(sourceStakeAmount);\n\n        const hashrate = FixedNumber.from(\n          utils.formatUnits(sourceStakeAmount, sourceToken.decimals) + ''\n        );\n        const tokenReward = getDailyRewardsByBlock(\n          `${sourceToken.symbol}-${targetToken.symbol}`\n        );\n\n        const price = FixedNumber.from(\n          '' + getPriceBySymbol(tokenPrice, targetToken.symbol)\n        );\n\n        const tps = tokenReward.divUnsafe(hashrate);\n        const ups = tps.mulUnsafe(price);\n\n        setTokenRewardPerStake(tps);\n        setUsdTokenRewardPerStake(ups);\n      } else {\n        const BTCBStakeAmount: BigNumber = await sourceTokenERC20Contract.balanceOf(\n          contractConfig.FARM\n        );\n        const BTCSTStakeAmount: BigNumber = await sourceTokenERC20Contract.balanceOf(\n          contractConfig.FARM_BTCST\n        );\n\n        setSourceStakeAmount(\n          targetToken.symbol === 'btcb' ? BTCBStakeAmount : BTCSTStakeAmount\n        );\n\n        const totalAmount = BTCBStakeAmount.add(BTCSTStakeAmount);\n        let hashrate = FixedNumber.from(\n          utils.formatUnits(totalAmount, sourceToken.decimals) + ''\n        );\n        console.log('...', hashrate);\n        const sourceSupplyAmount: BigNumber = await sourceTokenERC20Contract.totalSupply();\n        if (\n          FixedNumber.from(totalAmount)\n            .divUnsafe(FixedNumber.from(sourceSupplyAmount))\n            .subUnsafe(FixedNumber.from(DISTRIBUTE_LINE))\n            .isNegative()\n        ) {\n          console.log('............................x');\n          hashrate = FixedNumber.from(DISTRIBUTE_LINE).mulUnsafe(\n            FixedNumber.fromString(\n              utils.formatUnits(sourceSupplyAmount, sourceToken.decimals) + ''\n            )\n          );\n        }\n\n        const mineBTCBStatus = await getMineStatus();\n        const dailyBtcPerHash = FixedNumber.from(\n          mineBTCBStatus.dayList[0].eachHaveCoin\n        );\n        const price = FixedNumber.from(\n          '' + getPriceBySymbol(tokenPrice, BTCB.symbol)\n        );\n        console.log(\n          'calculate netreward using pric:' +\n            price +\n            ' daily btc per TH:' +\n            dailyBtcPerHash +\n            ' hashrate:' +\n            hashrate\n        );\n\n        const { btc, usd } = calculateDailyReward(\n          hashrate,\n          dailyBtcPerHash,\n          price\n        );\n        const tps = btc.divUnsafe(hashrate);\n        const ups = usd.divUnsafe(hashrate);\n        setTokenRewardPerStake(tps);\n        setUsdTokenRewardPerStake(ups);\n      }\n    } catch (e) {\n      console.error(e);\n      console.log('get apy error');\n    } finally {\n      setLoading(false);\n    }\n  }, [\n    sourceToken,\n    targetToken,\n    sourceTokenERC20Contract,\n    tokenPrice,\n    library,\n    account,\n    txHappend\n  ]);\n\n  const apy = useMemo(() => {\n    if (!loading && usdRewardPerStake) {\n      return formatApy(\n        usdRewardPerStake.divUnsafe(FixedNumber.fromString('10')),\n        FixedNumber.fromString(\n          '' + getPriceBySymbol(tokenPrice, sourceToken.symbol)\n        )\n      );\n    }\n  }, [usdRewardPerStake, tokenPrice, loading, txHappend]);\n\n  return {\n    loading,\n    farmingInfo,\n    sourceStakeAmount,\n    usdRewardPerStake,\n    tokenRewardPerStake,\n    apy\n  };\n}\n","'use strict';\n\nvar React = require('react');\n\nfunction useAsyncEffect(effect, destroy, inputs) {\n  var hasDestroy = typeof destroy === 'function';\n\n  React.useEffect(function () {\n    var result;\n    var mounted = true;\n    var maybePromise = effect(function () {\n      return mounted;\n    });\n\n    Promise.resolve(maybePromise).then(function (value) {\n      result = value;\n    });\n\n    return function () {\n      mounted = false;\n\n      if (hasDestroy) {\n        destroy(result);\n      }\n    };\n  }, hasDestroy ? inputs : destroy);\n}\n\nmodule.exports = useAsyncEffect;\nmodule.exports.useAsyncEffect = useAsyncEffect;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React, { FC, memo } from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport LoadingButton, { LoadingButtonProps } from 'src/components/LoadingButton';\nimport { useTranslation } from 'react-i18next';\ninterface ClaimButtonProps extends LoadingButtonProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '65px',\n    background: '#222222',\n    boxShadow: '0px 2px 4px 0px #000000',\n    color: '#fff',\n    [theme.breakpoints.down('xs')]: {\n      borderRadius: '0px 0px 6px 6px',\n    }\n  }\n}));\n\nconst ClaimButton: FC<ClaimButtonProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <LoadingButton\n      color=\"primary\"\n      variant=\"contained\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {t(\"airdrop.claimAll\")}\n    </LoadingButton>\n  );\n}\n\nexport default memo(ClaimButton);\n","import React from 'react';\n\nconst MarketMakeIcon = (props) => {\n  return (\n    <svg width=\"67px\" height=\"70px\" viewBox=\"0 0 67 70\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" {...props}>\n      <title>MarketMakeIcon</title>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(-260.000000, -569.000000)\" stroke=\"currentColor\" strokeWidth=\"4\">\n          <g transform=\"translate(260.000000, 569.000000)\">\n            <path d=\"M2.98529412,14.3147059 L2.98529412,60.0147059 C2.98529412,63.8806991 6.11930087,67.0147059 9.98529412,67.0147059 L57.0147059,67.0147059 C60.8806991,67.0147059 64.0147059,63.8806991 64.0147059,60.0147059 L64.0147059,14.3147059 L2.98529412,14.3147059 Z\" id=\"矩形\"></path>\n            <path d=\"M2.98529412,14.5 L64.0147059,14.5 L64.0147059,9 C64.0147059,5.13400675 60.8806991,2 57.0147059,2 L9.98529412,2 C6.11930087,2 2.98529412,5.13400675 2.98529412,9 L2.98529412,14.5 Z\" id=\"矩形备份-9\"></path>\n            <path d=\"M20.0147059,24.7 C20.0147059,32.1477223 26.0522777,38.1852941 33.5,38.1852941 L33.5,38.1852941 C40.9477223,38.1852941 46.9852941,32.1477223 46.9852941,24.7\" id=\"路径\"></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default MarketMakeIcon;\n","import React, { FC, memo, useCallback, useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n  makeStyles,\n  Select,\n  MenuItem,\n  Box,\n  Grid\n} from '@material-ui/core';\nimport { TokenPair } from 'src/types/airdrop';\nimport { MARKETS } from 'src/constants';\nimport MarketMakeIcon from 'src/constants/navIcon/MarketMakeIcon'\nimport { TBTC, BTCB } from 'src/constants/token';\nimport { useTranslation } from 'react-i18next';\n\ninterface MarketMakeProps {\n  className?: string;\n}\n\nconst tokenPairs: TokenPair[] = [\n  {\n    from: TBTC,\n    to: BTCB\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 20\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nconst MarketMake: FC<MarketMakeProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [currentTokenPairIndex, setCurrentTokenPairIndex] = useState<number>(0);\n\n  const handleSelectChange = useCallback((e) => {\n    setCurrentTokenPairIndex(e.target.value)\n  }, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Box>\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              gutterBottom\n              className={classes.title}\n            >\n              {t(\"mine.card.mm\")}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {t(\"mine.card.mmDetails\")}\n            </Typography>\n          </Box>\n          <MarketMakeIcon />\n        </Box>\n        <Select variant=\"outlined\" value={currentTokenPairIndex} onChange={handleSelectChange}>\n          {tokenPairs.map((tokenPair, index) => (\n            <MenuItem\n              key={`${tokenPair.from.name}${tokenPair.to.name}`}\n              value={index}\n            >\n              {tokenPair.from.name}-{tokenPair.to.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </CardContent>\n      <CardActions>\n        <Grid container spacing={2}>\n          {MARKETS.map(market => (\n            <Grid item xl={3} md={6} key={market.name}>\n              <Button component=\"a\" href={market.href} target=\"_blank\">\n                {market.name}\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default memo(MarketMake);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  makeStyles,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Avatar,\n  CardHeader,\n  CardContent,\n  CardActions,\n  CircularProgress\n} from '@material-ui/core';\nimport isEmpty from 'lodash/isEmpty';\nimport { RewardItem } from 'src/types/mine';\nimport { formatBalance } from 'src/utils/format';\nimport ClaimButton from '../airdrop/Airdrops/ClaimButton';\nimport { BigNumber, FixedNumber, utils } from 'ethers';\nimport currency from 'currency.js';\nimport { useTranslation } from 'react-i18next';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceListAtom } from 'src/atoms';\n\ninterface RewardListProps {\n  className?: string;\n  list: RewardItem[];\n  asyncClaimClick: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  table: {},\n  avatar: {\n    height: 22,\n    width: 22,\n    marginRight: theme.spacing(1)\n  },\n  claim: {\n    marginLeft: 'auto',\n    borderRadius: '0px 0px 6px 6px'\n  },\n  tableRow: {\n    borderBottom: 'solid 1px #000'\n  },\n  tableCell: {\n    wordBreak: 'break-all'\n  },\n  cardContent: {\n    padding: '0'\n  },\n  cardAction: {\n    padding: 0\n  }\n}));\n\nconst RewardList: FC<RewardListProps> = ({\n  className,\n  list,\n  asyncClaimClick,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n\n  const canClaim = useMemo(() => {\n    return list\n      .reduce((current, next) => {\n        return current.add(next.rewardAmount);\n      }, BigNumber.from('0'))\n      .gt(BigNumber.from('0'));\n  }, [RewardList]);\n\n  return (\n    <Box>\n      <Card>\n        <CardHeader title={t('mine.rewardTitle')} />\n        <CardContent className={classes.cardContent}>\n          <PerfectScrollbar>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow className={classes.tableRow}>\n                  <TableCell>{t('mine.name')}</TableCell>\n                  <TableCell>{t('mine.rewards')}</TableCell>\n                  <TableCell>{t('mine.approxUsd')}</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {list.map(item => (\n                  <TableRow\n                    hover\n                    key={item.token.name}\n                    className={classes.tableRow}\n                  >\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\">\n                        {item.token.logoURI && (\n                          <Avatar\n                            className={classes.avatar}\n                            src={item.token.logoURI}\n                          />\n                        )}\n                        <div>{item.token.name}</div>\n                      </Box>\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {item.rewardAmount\n                        ? formatBalance(item.rewardAmount, item.token.decimals)\n                        : '-'}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {isEmpty(tokenPrice) ? (\n                        <CircularProgress />\n                      ) : item.rewardAmount ? (\n                        currency(\n                          FixedNumber.from(\n                            utils.formatUnits(\n                              item.rewardAmount,\n                              item.token.decimals\n                            )\n                          )\n                            .mulUnsafe(\n                              FixedNumber.from(\n                                '' +\n                                getPriceBySymbol(\n                                  tokenPrice,\n                                  item.token.symbol\n                                )\n                              )\n                            )\n                            .toString(),\n                          { precision: 4 }\n                        ).format()\n                      ) : (\n                        '-'\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.cardAction}>\n          <ClaimButton\n            disabled={!canClaim}\n            className={classes.claim}\n            onClick={asyncClaimClick.execute}\n            pending={asyncClaimClick.loading}\n          />\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nRewardList.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RewardList;\n","import React, { FC, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Avatar,\n  Card,\n  CardHeader,\n  CardContent,\n  Hidden\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport type { WrappedMineItem, BTCSTMineItem, LPMineItem } from 'src/types/mine';\nimport { useTranslation } from 'react-i18next';\nimport { useDailyPool } from 'src/hooks/useDailyPool';\nimport { BTCST, BTCB, TBTC } from 'src/constants/token';\n\ninterface MineListProps {\n  className?: string;\n  list: BTCSTMineItem[] | LPMineItem[] | WrappedMineItem[];\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    height: 22,\n    width: 22,\n    marginRight: theme.spacing(1)\n  },\n  tableRow: {\n    borderBottom: 'solid 1px #000',\n    cursor: 'pointer'\n  },\n  cardContent: {\n    padding: '0'\n  }\n}));\n\nconst MineList: FC<MineListProps> = ({ className, list }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { t } = useTranslation();\n\n\n  const { apy: btcstToBtcbApy } = useDailyPool(BTCST, BTCB);\n  const { apy: btcstToBtcstApy } = useDailyPool(BTCST, BTCST);\n  const { apy: btcstToTbtctApy } = useDailyPool(BTCST, TBTC);\n  const { apy: BTCBToTbtctApy } = useDailyPool(BTCB, TBTC);\n  const { apy: TBTCToTbtctApy } = useDailyPool(TBTC, TBTC);\n\n  const handleRowClick = useCallback((item) => {\n    history.push(`/mine/stake?pair=${item.stakeToken.symbol}/${item.targetToken.symbol}`);\n  }, [history]);\n\n  return (\n    <Card>\n      <CardHeader title={t(\"mine.list\")} />\n      <CardContent className={classes.cardContent}>\n        <PerfectScrollbar>\n          <Table className={className}>\n            <TableHead>\n              <TableRow className={classes.tableRow}>\n                <TableCell>{t(\"mine.stake\")}</TableCell>\n                <TableCell>{t(\"mine.mine\")}</TableCell>\n                <TableCell>{t(\"mine.apy\")}</TableCell>\n                <TableCell>{t(\"mine.cycle\")}</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {list.map(item => (\n                <TableRow\n                  onClick={() => handleRowClick(item)}\n                  hover\n                  key={`${item.stakeToken.name}_${item.targetToken.name}`}\n                  className={classes.tableRow}\n                >\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      {item.stakeToken.logoURI && (\n                        <Avatar\n                          className={classes.avatar}\n                          src={item.stakeToken.logoURI}\n                        />\n                      )}\n                      <div>{item.stakeToken.name}</div>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Hidden smDown>\n                        {item.targetToken.logoURI && (\n                          <Avatar\n                            className={classes.avatar}\n                            src={item.targetToken.logoURI}\n                          />\n                        )}\n                      </Hidden>\n                      <div>{item.targetToken.name}</div>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {item.stakeToken.symbol === 'btcst' && item.targetToken.symbol === 'btcb' && (btcstToBtcbApy ? btcstToBtcbApy + '%' : '-')}\n                    {item.stakeToken.symbol === 'btcst' && item.targetToken.symbol === 'btcst' && (btcstToBtcstApy ? btcstToBtcstApy + '%' : '-')}\n                    {item.stakeToken.symbol === 'btcst' && item.targetToken.symbol === 'tbtc' && (btcstToTbtctApy ? btcstToTbtctApy + '%' : '-')}\n                    {item.stakeToken.symbol === 'btcb' && item.targetToken.symbol === 'tbtc' && (BTCBToTbtctApy ? BTCBToTbtctApy + '%' : '-')}\n                    {item.stakeToken.symbol === 'tbtc' && item.targetToken.symbol === 'tbtc' && (TBTCToTbtctApy ? TBTCToTbtctApy + '%' : '-')}\n                  </TableCell>\n                  <TableCell>{t(\"mine.\"+item.rewardCycle)}</TableCell>\n                  <TableCell>\n                    <MoreVertIcon />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </PerfectScrollbar>\n\n      </CardContent>\n    </Card>\n  );\n}\n\nMineList.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MineList;\n","import { RewardCycle } from 'src/types/mine';\nimport type { BTCSTMineItem } from 'src/types/mine';\nimport { BTCST, BTCB, TBTC } from 'src/constants/token';\n\nexport const list: BTCSTMineItem[] = [\n  { \n    stakeToken: BTCST,\n    targetToken: BTCB,\n    apy: 0.8,\n    rewardCycle: RewardCycle.Day\n  },\n  { \n    stakeToken: BTCST,\n    targetToken: BTCST,\n    apy: 0.5,\n    rewardCycle: RewardCycle.Day\n  },\n  { \n    stakeToken: BTCST,\n    targetToken: TBTC,\n    apy: 0.8,\n    rewardCycle: RewardCycle.Block\n  },\n  { \n    stakeToken: BTCB,\n    targetToken: TBTC,\n    apy: 0.5,\n    rewardCycle: RewardCycle.Block\n  },\n  { \n    stakeToken: TBTC,\n    targetToken: TBTC,\n    apy: 0.8,\n    rewardCycle: RewardCycle.Block\n  }\n];\n\nexport const wrappedTokens = [TBTC];\n\nexport const rewardTokens = [BTCST, BTCB, TBTC];\n","import { useMemo, useEffect, useState } from 'react';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { contractConfig, toastConfig } from 'src/config';\nimport { getTBTCChefContract, getMCContract } from 'src/utils/contract';\nimport { useAsync, useAsyncCallback } from 'react-async-hook';\nimport { BigNumber } from 'ethers';\nimport { parseBalance } from 'src/utils/format';\nimport { rewardTokens } from 'src/constants/mine';\nimport { getTotalPendingReward, claimAllReward, getTokenPrice } from 'src/service';\nimport { toast } from 'react-toastify';\n\nconst getTotalPendingRewardList = (contract: any, account: string) => {\n  return Promise.all(\n    rewardTokens.map(token => getTotalPendingReward(contract, token.address, account))\n  );\n}\n\nexport function useMineState() {\n  const { account, library } = useActiveWeb3React();\n  const [txHappend, setTxHappend] = useState(0);\n\n  const mcContract = useMemo(() => {\n    return getMCContract(contractConfig.MASTER_COLLECTOR, library, account);\n  }, [account, library]);\n\n  const pendingRewards = useAsync<BigNumber[]>(() => {\n    return getTotalPendingRewardList(mcContract, account);\n  }, [\n    mcContract,\n    account,\n    txHappend\n  ]);\n\n  const rewardList = useMemo(() => {\n    return {\n      ...pendingRewards,\n      result:\n        pendingRewards.result &&\n        rewardTokens.map((token, index) => {\n          return {\n            token,\n            rewardAmount: pendingRewards.result[index]\n          };\n        }).filter((item) => item.rewardAmount !== undefined )\n    };\n  }, [pendingRewards]);\n\n  const asyncClaimClick = useAsyncCallback(async () => {\n    try {\n      const tx = await claimAllReward(mcContract, account);\n\n      await tx.wait();\n      setTxHappend(t => t+1);\n    } catch(e) {\n      // toast.error(JSON.stringify(e), toastConfig);\n    }\n  });\n\n\n  return {\n    rewardList,\n    asyncClaimClick,\n  };\n}\n","import React, { FC, memo } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { MARKETS } from 'src/constants';\nimport { useTranslation } from 'react-i18next';\n\ninterface GetBTCSTCardProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 20\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nconst GetBTCSTCard: FC<GetBTCSTCardProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const {t} = useTranslation();\n  return (\n    <Card>\n      <CardContent>\n        <Typography\n          variant=\"h5\"\n          component=\"h2\"\n          gutterBottom\n          className={classes.title}\n        >\n          {t(\"mine.card.getBTCST\")}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {t(\"mine.card.getBTCSTDetails\")}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Grid container spacing={2}>\n          <Grid item xl={3} md={6} key=\"binance\">\n            <Button\n              component=\"a\"\n              href=\"https://www.binance.com/en/trade/BTCST_USDT\"\n              target=\"_blank\"\n            >\n              {t(\"mine.card.binance\")}\n            </Button>\n          </Grid>\n          {MARKETS.map(market => (\n            <Grid item xl={3} md={6} key={market.name}>\n              <Button component=\"a\" href={market.href} target=\"_blank\">\n                {market.name}\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default memo(GetBTCSTCard);\n","import React, { FC, memo, useCallback, useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n  makeStyles,\n  Select,\n  MenuItem,\n  Grid,\n  FormControl\n} from '@material-ui/core';\nimport { MARKETS } from 'src/constants';\nimport { Token } from 'src/types/token';\nimport { useTranslation } from 'react-i18next';\n\ninterface GetWrappedAssetCardProps {\n  className?: string;\n  tokens: Token[];\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 20\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nconst GetWrappedAssetCard: FC<GetWrappedAssetCardProps> = ({ className, tokens, ...rest }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [currentTokenSymbol, setCurrentTokenSymbol] = useState<string>(tokens[0].symbol);\n\n  const handleSelectChange = useCallback(e => {\n    setCurrentTokenSymbol(e.target.value);\n  }, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography\n          variant=\"h5\"\n          component=\"h2\"\n          gutterBottom\n          className={classes.title}\n        >\n          {t(\"mine.card.getWrappedAssets\")}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {t(\"mine.card.getWrappedAssetsDetails\")}\n        </Typography>\n        <Select variant=\"outlined\" value={currentTokenSymbol} onChange={handleSelectChange}>\n          {tokens.map(token => (\n            <MenuItem key={token.symbol} value={token.symbol}>\n              {token.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </CardContent>\n      <CardActions>\n        <Grid container spacing={2}>\n          <Grid item xl={3} md={6} key=\"binance\">\n            <Button\n              component=\"a\"\n              href=\"https://www.binance.com/en/trade/BTCST_USDT\"\n              target=\"_blank\"\n            >\n              {t(\"mine.card.binance\")}\n            </Button>\n          </Grid>\n          {MARKETS.map(market => (\n            <Grid item xl={3} md={6} key={market.name}>\n              <Button component=\"a\" href={market.href} target=\"_blank\">\n                {market.name}\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default memo(GetWrappedAssetCard);\n","import React, { useCallback, ChangeEvent, useState } from 'react';\nimport type { FC } from 'react';\nimport {\n  Container,\n  makeStyles,\n  Box,\n  Divider,\n  Typography,\n  Grid\n} from '@material-ui/core';\n\nimport Page from 'src/components/Page';\nimport Header from 'src/components/Header';\nimport type { Theme } from 'src/theme';\nimport BTCSTMineList from './BTCST';\nimport LPMineList from './LP';\nimport WrappedMineList from './WrappedAsset';\nimport RewardList from './rewardList';\nimport MineList from './list';\nimport { list } from 'src/constants/mine';\nimport { useMineState } from 'src/hooks/useMineState';\nimport { Alert } from '@material-ui/lab';\nimport GetBTCSTCard from 'src/components/GetBTCSTCard';\nimport MarketMake from 'src/components/MarketMake';\nimport { wrappedTokens } from 'src/constants/mine'\nimport GetWrappedAssetCard from 'src/components/GetWrappedAssetCard';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    // paddingTop: theme.spacing(3),\n    paddingBottom: '80px'\n  },\n}));\n\n// const tabs = [\n//   { value: 'btcst', label: 'BTCST' },\n//   { value: 'wrapped_assets', label: 'Wrapped Assets' },\n//   { value: 'lp', label: 'LP' },\n// ];\n\nconst MineView: FC = () => {\n  const classes = useStyles();\n  const {t} = useTranslation();\n  // const [currentTab, setCurrentTab] = useState<string>('btcst');\n\n  // const handleTabsChange = useCallback((event: ChangeEvent<{}>, value: string): void => {\n  //   setCurrentTab(value);\n  // }, []);\n  const { rewardList, asyncClaimClick } = useMineState();\n  return (\n    <Page className={classes.root} title={t(\"global.title\")}>\n      <Container maxWidth={false}>\n        <Header title={t(\"mine.title\")} />\n        {/* {\n          rewardList.error && (\n            <Alert variant=\"filled\" severity=\"error\">\n              { rewardList.error.message}\n            </Alert>\n          )\n        } */}\n        <LoadingBox\n          loading={rewardList.loading}\n          showNoData={!rewardList.result}\n          showNoDataContent={<Typography variant=\"h4\" color=\"textPrimary\">\n            {t(\"mine.noData\")}\n          </Typography>}\n        >\n          <RewardList list={rewardList.result} asyncClaimClick={asyncClaimClick} />\n        </LoadingBox>\n        {/* <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            textColor=\"secondary\"\n            value={currentTab}\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box> */}\n        <Box mt={3}>\n          {/* {currentTab === 'btcst' && <BTCSTMineList />}\n          {currentTab === 'wrapped_assets' && <WrappedMineList />}\n          {currentTab === 'lp' && <LPMineList />} */}\n          <MineList list={list} />\n        </Box>\n        <Box mt={5}>\n          <Grid container spacing={2}>\n            <Grid item sm={4} xs={12}>\n              <GetBTCSTCard />\n            </Grid>\n            <Grid item sm={4} xs={12}>\n              <GetWrappedAssetCard tokens={wrappedTokens} />\n            </Grid>\n            <Grid item sm={4} xs={12}>\n              <MarketMake />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default MineView;\n"],"sourceRoot":""}