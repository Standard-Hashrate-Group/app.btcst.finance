{"version":3,"sources":["service/index.ts","utils/contract.ts","hooks/useActiveWeb3React.ts","utils/index.ts","utils/format.ts","hooks/useLatestExpandAmount.ts","utils/price.ts","components/LoadingBox.tsx","utils/analytics.ts","components/Footer.tsx","components/Page.tsx","hooks/useFetchTokenPrice.ts","components/Header.tsx","hooks/useIsMountedRef.ts","hooks/useDailyPool.ts","views/tauboard/DailyMineRecord.tsx","views/tauboard/BTCPrice.tsx","views/tauboard/TauBTCInitMiningProgress.tsx","views/tauboard/CircularProgress.tsx","views/tauboard/TauBTCRebaseCountdown.tsx","views/tauboard/TauBTCTotalSupply.tsx","views/tauboard/OverviewMineDaily.tsx","views/tauboard/TauBTCRebaseRecord/CircularProgress.tsx","components/Label.tsx","views/tauboard/TauBTCRebaseRecord/index.tsx","views/tauboard/OverviewDApp.tsx","hooks/useStatsState.ts","views/tauboard/index.tsx"],"names":["RAMOUNT_DIVIDER","BigNumber","from","pow","getAirdrops","account","a","axios","get","toLowerCase","response","data","isEmpty","airdrop","token","TBTC","index","fullAmount","amount","proof","flags","details","getTDOGEAirdrops","TDOGE","getTokensInfo","getNFTInfo","blockchain","contract","nftId","getTokenPrice","BTCB","max_supply","name","price","BTC","symbol","total_supply","DOGE","getMineStatus","totalSupply","undefined","getTotalPendingReward","address","claimAllReward","estimateGas","gasLimit","mul","div","claimOneReward","claimReward","TARGET_INITIAL_SUPPLY","getPoolInfo","poolInfo","alreadyMinedReward","merkleTotalAlreadyClaimed","viewFarmBasicInfo","Promise","all","map","field","callStatic","e","console","log","started","stakePeriod","desc","getDailyRecords","FarmContract","farmInfo","tokenAddress","arr","now","Date","go","k","getTimeKey","push","viewRoundSlot","length","Object","assign","timeKey","_roundSlotsReward","rewardInfo","rAmount","rAccum","rAccumulateAmount","rewardLastSubmiter","rewardAmount","rewardAccumulateAmount","totalStaked","stakedLowestWaterMark","totalStakedInSlot","stakedAddresses","getLatestRebaseRecord","Number","getRebaseRecordsLen","toNumber","recordLength","rebaseRecords","record","getNewExpandRate","_getNewExpandBase","base","teamRebaseSplit","team","result","FixedNumber","subUnsafe","divUnsafe","toString","getLatestExpandAmount","chefContract","policyContract","rate","requestedSupplyAdjustment","isZero","rs","mulUnsafe","dotIndex","split","findIndex","s","parseFixed","slice","getContract","ABI","library","value","getAddress","isAddress","AddressZero","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","getERC20Contract","IBEP20","abi","getNFTContract","NFT","getFarmBTCSTContract","FARMBTCST","getTBTCChefContract","TBTCChef","getTBTCESTPolicyContract","TBTCESTPolicy","getMCContract","MasterCollector","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","NetworkContextName","active","isEmptyValue","text","isBigNumber","replace","time","baseTime","passed","Math","round","end","calculateDailyReward","hashrate","dailyBtcPerHash","btcPrice","dailyEstimated","powerPrice","powerPerHashUnitDay","dailyBTCNetreward","dailyEstimatedUSD","btc","usd","WEEEK_REWARD_MAP","TOTAL_REWARD_MAP","btcst","btcb","tbtc","getDailyRewardsByBlock","sourceToken","targetToken","latestExpandAmount","utils","formatUnits","decimals","START_TIME","floor","total","before","MiningRewardTotal","after","addUnsafe","isNegative","DOGE_WEEEK_REWARD_MAP","DOGE_TOTAL_REWARD_MAP","doge","tdoge","getDOGEDailyRewardsByBlock","DOGE_START_TIME","DOGE_MiningRewardTotal","formatBalance","maxFraction","formatted","substr","parseBalance","parseUnits","getRoiAndApy","roi","daily","apy","formatApy","afterValue","afterRoi","afterApy","afterDaily","res","useRoi","percent","formatPercentage","beforePercent","diff","String","getRemainTime","totalSeconds","remainSeconds","hours","padStart","minutes","seconds","progress","useFetchLatestExpandAmount","setTDogeLatestExpandAmount","useSetRecoilState","tDogeLatestExpandAmountAtom","setTBTCLatestExpandAmount","tBTCLatestExpandAmountAtom","TBTCSTPolicyContract","useMemo","contractConfig","TBTC_POLICY","TBTCChefContract","TBTC_CHEF","TDOGEESTPolicyContract","TDOGE_POLICY","TDOGEChefContract","TDOGE_CHEF","useEffect","then","useGetLatestExpandAmount","tdogeAmount","useRecoilValue","tbtcAmount","getPriceBySymbol","list","item","values","find","p","getTwapBySymbol","twap","useStyles","makeStyles","theme","colorSecondary","color","LoadingBox","children","loading","loadingAlign","showNoData","showNoDataContent","size","classes","textAlign","track","window","gtag","props","process","REACT_APP_GA_MEASUREMENT_ID","footer","position","bottom","left","right","backgroundColor","palette","background","paper","boxShadow","paddingTop","paddingBottom","Footer","className","useWeb3React","actionRef","useRef","setWalletModalStatus","walletModalStatusAtom","setAccountModalStatus","accountModalStatusAtom","connectWallet","useCallback","openAccountModal","React","useState","anchorEl","setAnchorEl","Hidden","lgUp","Container","maxWidth","Box","display","alignItems","justifyContent","flexGrow","ml","Button","variant","onClick","ref","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","i18n","changeLanguage","selected","language","Page","forwardRef","title","rest","location","useLocation","setTokenPriceList","tokenPriceListAtom","setTokenPriceLoading","tokenPriceLoadingAtom","localStorage","getItem","JSON","parse","setItem","stringify","finally","useFetchTokenPrice","sendPageViewEvent","page_path","pathname","Helmet","root","padding","width","toolbar","minHeight","Header","setMobileNavOpen","mobileNavOpenAtom","showNav","clsx","pt","pb","fontSize","mdDown","useIsMountedRef","isMounted","current","useDailyPool","txHappend","tokenPrice","tokenPriceLoading","setLoading","sourceStakeAmount","setSourceStakeAmount","tokenRewardPerStake","setTokenRewardPerStake","usdRewardPerStake","setUsdTokenRewardPerStake","afterUsdRewardPerStake","setAfterUsdTokenRewardPerStake","rewardDiff","setRewardDiff","farmingInfo","FarmingInfoMap","sourceTokenERC20Contract","useAsyncEffect","contractAddress","pidMap","FarmingPidMap","FarmingTDogePidMap","totalDepositAmount","stakedTokenShrinkFactor","tokenReward","afterTokenReward","tps","afterTps","ups","afterUps","balanceOf","FARM","BTCBStakeAmount","FARM_BTCST","BTCSTStakeAmount","totalAmount","add","prehash","sourceSupplyAmount","fromString","mineBTCBStatus","dayList","eachHaveCoin","error","spacing","borderRight","divider","RecordItem","logo","decimal","t","useTranslation","ListItem","key","id","ListItemAvatar","Avatar","alt","component","RouterLink","src","to","ListItemText","disableTypography","primary","Typography","gt","secondary","noWrap","toLocaleDateString","Records","stake","records","Card","CardHeader","Divider","List","disablePadding","i","contrastText","main","valueContainer","avatar","height","tau","RoiPerCustomer","gutterBottom","flexWrap","currency","format","margin","label","marginLeft","TauBTCInitMiningProgress","chefStats","initialMinted","balanceForChef","stakedTBTC","sub","target","LinearProgress","circle1","stroke","type","fill","strokeWidth","circle2","animation","strokeDasharray","CircularProgress","viewBox","d","TauBTCRebaseCountdown","setTime","setPercent","useInterval","TauBTCTotalSupply","circulatingSupply","breakpoints","up","down","borderBottom","Overview","totalMined","BTCBPoolStakeAmount","BTCSTPoolStakeAmount","totalInPoolReward","staked","btcstTotalSupply","currentStakeAmount","btcstTotalStaked","Grid","container","justify","md","sm","xs","BTCST","diffResult","apyDisplay","multiply","divide","fontFamily","typography","borderRadius","whiteSpace","cursor","flexShrink","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","textTransform","fade","success","warning","Label","style","image","subscriptions","colors","green","TauBTCRebaseRecord","tokenPriceList","element","timestampSec","epoch","newBalance","empty","subheader","toFixed","Table","TableBody","TableRow","hover","TableCell","mr","align","lt","numeral","exchangeRate","tvl","txInfo","tbtcTotalSupply","totalInfo","txs","holders","forEach","count","sender_count","getStakeAmount","pid","dark","tabs","DashboardView","state","TBTCContract","TDOGEContract","BTCSTContract","STOKEN","BTCBContract","RTOKEN","FarmBTCContract","FarmBTCSTContract","TBTCESTPolicyContract","useAsync","totalMinedBTC","viewAllTimeTotalMined","totalMinedBTCST","totalInPoolBTC","keys","dogeData","concat","TokenList","tdogeTotalSupply","totalMinted","farmBTCBasicInfo","farmBTCSTBasicInfo","mined","airdropClaimed","totalDepositTBTCAmount","chefDogeStats","len","promiseArray","rebaseDogeRecords","btcDailyRecords","btcstDailyRecords","useStatsState","currentTab","setCurrentTab","handleTabsChange","tab","mt","mb","Tabs","onChange","scrollButtons","textColor","Tab","lg","BTCPrice","OverviewMineDaily","DailyMineRecord"],"mappings":"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","file":"static/js/15.137b9807.chunk.js","sourcesContent":["import { BigNumber, FixedNumber, parseFixed } from '@ethersproject/bignumber';\nimport axios from 'axios';\nimport { contractConfig } from 'src/config';\nimport { parseBalance } from 'src/utils/format';\nimport { AirdropInfo } from 'src/utils/airdrop';\nimport { getTimeKey } from 'src/utils';\nimport { PriceItem } from 'src/types/token';\nimport { TBTC, TDOGE } from 'src/constants/token';\nimport isEmpty from 'lodash/isEmpty';\n\nconst BATCH_LOAD_RECORD_LIMIT = 5;\nconst RAMOUNT_DIVIDER = BigNumber.from(1e8).pow(BigNumber.from(4));\nconst TBTC_RATE = 1.0;\n\ntype Response<T> = {\n  code: number;\n  data: T;\n  msg?: any;\n};\n\nexport type TokenPriceList = {\n  [key: string]: PriceItem;\n};\n\nexport async function getAirdrops(account: string) {\n  try {\n    const response = await axios.get(\n      `https://api.1-b.tc/api/airdrop/${account.toLowerCase()}`\n    );\n\n    const data = response.data?.data;\n    if (!data || isEmpty(data)) {\n      return null;\n    }\n\n    const airdrop: AirdropInfo = {\n      token: TBTC,\n      index: BigNumber.from(data.index),\n      fullAmount: BigNumber.from(data.amount),\n      proof: data.proof,\n      flags: data.flags,\n      details: data.details\n    };\n\n    return airdrop;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getTDOGEAirdrops(account: string) {\n  try {\n    const response = await axios.get(\n      `https://api.1-b.tc/api/dogeairdrop/${account.toLowerCase()}`\n    );\n\n    const data = response.data?.data;\n    if (!data || isEmpty(data)) {\n      return null;\n    }\n\n    const airdrop: AirdropInfo = {\n      token: TDOGE,\n      index: BigNumber.from(data.index),\n      fullAmount: BigNumber.from(data.amount),\n      proof: data.proof,\n      flags: data.flags,\n      details: data.details\n    };\n\n    return airdrop;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getTVL() {\n  const response = await axios.get('https://api.1-b.tc/api/tvl/');\n\n  return response.data;\n}\n\nexport async function getTXInfo() {\n  const response = await axios.get('https://api.1-b.tc/api/btcstInfo');\n\n  return response.data;\n}\n\nexport async function getTokensInfo() {\n  const response = await axios.get('https://api.1-b.tc/api/tokensInfo');\n\n  return response.data;\n}\n\nexport async function getNFTInfo(\n  blockchain: string,\n  contract: string,\n  nftId: string\n) {\n  const response = await axios.get(\n    `https://api.1-b.tc/api/nft/find?blockchain=${blockchain}&contract=${contract}&nftId=${nftId}`\n  );\n\n  return response.data;\n}\n\nexport async function getTokenPrice() {\n  try {\n    const response = await axios.get<Response<TokenPriceList>>(\n      'https://api.1-b.tc/api/token/price'\n    );\n    const data = response.data.data;\n\n    if (!data.BTCB) {\n      data.BTCB = {\n        max_supply: null,\n        name: 'BTCB',\n        price: data.BTC.price,\n        symbol: 'BTCB',\n        total_supply: null\n      };\n    }\n\n    if (!data.TBTC) {\n      data.TBTC = {\n        max_supply: 2100,\n        name: '𝜏Bitcoin',\n        price: data.BTC.price * TBTC_RATE,\n        symbol: 'TBTC',\n        total_supply: null\n      };\n    }\n\n    if (!data.DOGE) {\n      data.DOGE = {\n        max_supply: null,\n        name: 'Doge',\n        price: data.TDOGE.price,\n        symbol: 'DOGE',\n        total_supply: null\n      };\n    }\n\n    return data;\n  } catch (e) {\n    return {};\n  }\n}\n\nexport async function getMineStatus() {\n  const response = await axios.get(\n    'https://584xqc7ik2.execute-api.us-east-2.amazonaws.com/beta/bp-relay'\n  );\n\n  return response.data.data;\n}\n\nexport async function getTotalStakedBTCST(contract: any, account: any) {\n  if (contract && account) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getTotalMinedRTokenInpool(contract: any) {\n  if (contract) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getBTCInPool(contract: any) {\n  if (contract) {\n    return contract.balanceOf(contractConfig.FARM);\n  }\n\n  return undefined;\n}\n\nexport async function totalSupply(contract: any) {\n  if (contract) {\n    return contract.totalSupply();\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseDate(estPolicyContract: any) {\n  if (estPolicyContract) {\n    let nextTime = await getNextRebaseTimeInSeconds(estPolicyContract);\n    let ms = nextTime.mul(1000).toNumber();\n    if (ms < Date.now()) {\n      return undefined;\n    }\n    console.log('nextTime', ms);\n    return new Date(ms);\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseTimeInSeconds(estPolicyContract: any) {\n  if (estPolicyContract) {\n    const lastRebaseTime = await estPolicyContract.lastRebaseTimestampSec();\n    const interval = await estPolicyContract.minRebaseTimeIntervalSec();\n    return lastRebaseTime.add(interval);\n  }\n}\n\nexport async function getTotalRemainingSupplyLocked(contract: any) {\n  if (contract) {\n    return contract.getTotalRemainingSupplyLocked();\n  }\n  return undefined;\n}\n\nexport async function getTimeWeightedPrice(contract: any) {\n  if (contract) {\n    const dataAll = await contract.gettTokenIntermediaRate();\n    let data = BigNumber.from(0);\n    if (dataAll && dataAll[3]) {\n      data = dataAll[3];\n    }\n    if (BigNumber.from(0).eq(data)) {\n      // console.log(\"datdatdatdadta\",data+\"\");\n      //0 indicates that swap didn't inited, we make it default 1e18/1e18 means one\n      return BigNumber.from(10 ** 18 + '');\n    }\n    console.log('datdatdatdadta', data + '');\n    return data;\n  }\n  return undefined;\n}\n\nexport async function startBlock(contract: any) {\n  if (contract) {\n    return contract.startBlock();\n  }\n  return undefined;\n}\nexport async function getTokenAllowance(\n  contract: any,\n  account: string,\n  spender: string\n) {\n  if (contract && account) {\n    return contract.allowance(account, spender);\n  }\n  return undefined;\n}\n\nexport async function viewUserInfo(contract: any, account: string) {\n  if (contract && account) {\n    return contract.viewUserInfo(account);\n  }\n}\n\n// TODO: remove mock here\nexport async function getBalance(contract: any, account: string) {\n  if (contract && account) {\n    return contract.balanceOf(account);\n  }\n\n  return undefined;\n}\n\nexport async function getTotalPendingReward(\n  contract: any,\n  address: string,\n  account: string\n) {\n  if (contract && account && address) {\n    return contract.getTotalPendingReward(address, account);\n  }\n\n  return undefined;\n}\n\nexport async function claimAllReward(contract: any, account: string) {\n  if (contract && account) {\n    const gasLimit = await contract.estimateGas.claimAllReward(account);\n\n    return contract.claimAllReward(account, {\n      gasLimit: gasLimit.mul(150).div(100)\n    });\n  }\n\n  return undefined;\n}\n\nexport async function claimOneReward(\n  contract: any,\n  account: string,\n  address: string\n) {\n  if (contract && account) {\n    const gasLimit = await contract.estimateGas.claimReward(address, account);\n\n    return contract.claimReward(address, account, {\n      gasLimit: gasLimit.mul(150).div(100)\n    });\n  }\n\n  return undefined;\n}\n\nexport async function TARGET_INITIAL_SUPPLY(contract: any) {\n  if (contract) {\n    return contract.TARGET_INITIAL_SUPPLY();\n  }\n  return undefined;\n}\n\nexport async function getPoolInfo(contract: any, index: number) {\n  if (contract) {\n    return contract.poolInfo(index);\n  }\n  return undefined;\n}\nexport async function alreadyMinedReward(contract: any) {\n  if (contract) {\n    return contract.alreadyMinedReward();\n  }\n  return undefined;\n}\n\nexport async function merkleTotalAlreadyClaimed(contract: any) {\n  if (contract) {\n    return contract.merkleTotalAlreadyClaimed();\n  }\n  return undefined;\n}\n\nexport async function viewFarmBasicInfo(contract: any) {\n  const data = await Promise.all(\n    ['_farmStartedTime', '_miniStakePeriodInSeconds', '_farmDescription'].map(\n      field => {\n        try {\n          return contract.callStatic[field]();\n        } catch (e) {\n          console.log(e);\n          return '';\n        }\n      }\n    )\n  );\n  return {\n    started: data[0],\n    stakePeriod: data[1],\n    desc: data[2]\n  };\n}\n\nexport async function getDailyRecords(\n  FarmContract: any,\n  farmInfo: any,\n  tokenAddress: string\n) {\n  let arr: number[] = [];\n  let now = Date.now() / 1000;\n\n  if (!farmInfo) {\n    return undefined;\n  }\n\n  for (let index = 0; index < BATCH_LOAD_RECORD_LIMIT; index++) {\n    let go = now - index * farmInfo.stakePeriod;\n    if (go <= farmInfo.started) {\n      break;\n    }\n    let k = getTimeKey(go, farmInfo.started, farmInfo.stakePeriod);\n    arr.push(k);\n  }\n  let data = await Promise.all(\n    arr.map(field => {\n      try {\n        return FarmContract.viewRoundSlot(field);\n      } catch (e) {\n        return '';\n      }\n    })\n  );\n  for (let index = 0; index < arr.length; index++) {\n    data[index] = Object.assign({}, data[index], {\n      timeKey: arr[index]\n    });\n    let rewardInfo = await FarmContract._roundSlotsReward(\n      arr[index],\n      tokenAddress\n    );\n\n    let rAmount = rewardInfo.rAmount;\n    let rAccum = rewardInfo.rAccumulateAmount;\n    if (rewardInfo.rAmount) {\n      rAmount = rewardInfo.rAmount.div(RAMOUNT_DIVIDER);\n    }\n    if (rewardInfo.rAccumulateAmount) {\n      rAccum = rewardInfo.rAccumulateAmount.div(RAMOUNT_DIVIDER);\n    }\n    data[index] = {\n      rewardLastSubmiter: data[index]['rewardLastSubmiter'],\n      rewardAmount: rAmount,\n      rewardAccumulateAmount: rAccum,\n      totalStaked: data[index]['totalStaked'],\n      stakedLowestWaterMark: data[index]['stakedLowestWaterMark'],\n      totalStakedInSlot: data[index]['totalStakedInSlot'],\n      stakedAddresses: data[index]['stakedAddresses'],\n      timeKey: arr[index]\n    };\n  }\n\n  return data;\n}\n\nexport async function getLatestRebaseRecord(contract: any) {\n  try {\n    if (!contract) {\n      return {};\n    }\n\n    const recordLength = Number(\n      BigNumber.from(await contract.getRebaseRecordsLen()).toNumber()\n    );\n\n    const record = await contract.rebaseRecords(recordLength - 1);\n\n    return record;\n  } catch (e) {\n    console.log(e);\n    return {};\n  }\n}\n\nexport async function getNewExpandRate(contract: any) {\n  try {\n    const base = await contract._getNewExpandBase();\n    const team = await contract.teamRebaseSplit();\n\n    const result = FixedNumber.from('1').subUnsafe(\n      FixedNumber.from(team).divUnsafe(FixedNumber.from(base))\n    );\n    console.log('expand rate:', result.toString());\n    return result;\n  } catch (e) {\n    console.log(e);\n    return FixedNumber.from('0.6');\n  }\n}\n\nexport async function getLatestExpandAmount(\n  chefContract: any,\n  policyContract: any\n) {\n  if (!chefContract || !policyContract) {\n    return '0';\n  }\n\n  const record = await getLatestRebaseRecord(policyContract);\n  const rate = await getNewExpandRate(chefContract);\n\n  if (FixedNumber.from(record.requestedSupplyAdjustment).isZero()) {\n    return '0';\n  }\n  const rs = FixedNumber.from(record.requestedSupplyAdjustment)\n    .mulUnsafe(rate)\n    .toString();\n  const dotIndex = rs.split('').findIndex(s => s === '.');\n\n  const result = parseFixed(dotIndex > 0 ? rs.slice(0, dotIndex) : rs);\n  return result.toString();\n}\n","import { getAddress } from '@ethersproject/address';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Web3Provider, JsonRpcSigner } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\n\nimport IBEP20 from 'src/constants/abis/IBEP20.json';\nimport NFT from 'src/constants/abis/ntf.json';\nimport FARMBTCST from 'src/constants/abis/FarmBTCST.json';\nimport TBTCChef from 'src/constants/abis/tBTCChef.json';\nimport TBTCESTPolicy from 'src/constants/abis/tBTCESTPolicy.json';\nimport MasterCollector from 'src/constants/abis/MasterCollector.json';\n\nexport function getSigner(\n  library: Web3Provider,\n  account: string\n): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(\n  library: Web3Provider,\n  account?: string\n): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n\nexport function getContract(\n  address: string,\n  ABI: any,\n  library: Web3Provider,\n  account?: string\n): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n\nexport function getERC20Contract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, IBEP20.abi, library, account);\n}\n\nexport function getNFTContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, NFT.abi, library, account);\n}\n\nexport function getFarmBTCSTContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, FARMBTCST.abi, library, account);\n}\n\nexport function getTBTCChefContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCChef.abi, library, account);\n}\n\nexport function getTBTCESTPolicyContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCESTPolicy.abi, library, account);\n}\n\nexport function getMCContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, MasterCollector.abi, library, account);\n}\n\n","import { Web3Provider } from '@ethersproject/providers'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { NetworkContextName  } from 'src/constants/index';\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<\n  Web3Provider\n> & { chainId?: number } {\n  const context = useWeb3ReactCore<Web3Provider>();\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\n  return context.active ? context : contextNetwork;\n}\n","import { BigNumber, FixedNumber, utils } from 'ethers';\nimport { JSBI, Percent } from '@pancakeswap-libs/sdk';\nimport { TBTC, TDOGE } from 'src/constants/token';\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value\n    .mul(BigNumber.from(10000).add(BigNumber.from(1000)))\n    .div(BigNumber.from(10000));\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000));\n}\n\nexport const isEmptyValue = (text: string) =>\n  BigNumber.isBigNumber(text)\n    ? BigNumber.from(text).isZero()\n    : text === '' || text.replace(/0/g, '').replace(/\\./, '') === '';\n\nexport const formatTimeKey2 = (value: number) => {\n  const date = new Date(value * 1000);\n  return date.toLocaleDateString('zh-cn');\n};\n\nexport function getTimeKey(time, baseTime, stakePeriod) {\n  baseTime = baseTime.toNumber();\n  stakePeriod = stakePeriod.toNumber();\n  if (time < baseTime) {\n    throw new Error('time < farm started time');\n  }\n  let passed = Math.round(time - baseTime);\n  let round = Math.round(passed / stakePeriod);\n  let end = baseTime + round * stakePeriod;\n  if (end < time) {\n    return end + stakePeriod;\n  }\n  return end;\n}\n\nexport const calculateDailyReward = (\n  hashrate: FixedNumber,\n  dailyBtcPerHash: FixedNumber,\n  btcPrice: FixedNumber\n) => {\n  const dailyEstimated = hashrate.mulUnsafe(dailyBtcPerHash);\n  const powerPrice = FixedNumber.from(5846)\n    .divUnsafe(FixedNumber.from(1000 * 1000 * 100))\n    .mulUnsafe(FixedNumber.from(103))\n    .divUnsafe(FixedNumber.from(100));\n  const powerPerHashUnitDay = FixedNumber.from(60).mulUnsafe(\n    FixedNumber.from(24)\n  );\n  let dailyBTCNetreward = dailyEstimated.subUnsafe(\n    powerPerHashUnitDay\n      .mulUnsafe(powerPrice)\n      .mulUnsafe(hashrate)\n      .divUnsafe(btcPrice)\n  );\n  let dailyEstimatedUSD = dailyBTCNetreward.mulUnsafe(btcPrice).round(6);\n  dailyBTCNetreward = dailyBTCNetreward.round(6);\n  return { btc: dailyBTCNetreward, usd: dailyEstimatedUSD };\n};\nconst WEEEK_REWARD_MAP = [\n  82.823529216,\n  41.411764608,\n  20.705882304,\n  10.352941152,\n  5.176470576,\n  2.588235288,\n  1.294117644,\n  0.647058822,\n  0\n];\nconst TOTAL_REWARD_MAP = {\n  btcst: 1050,\n  btcb: 21,\n  tbtc: 84\n};\nconst MiningRewardTotal = 1155;\n\nconst START_TIME = 1617379200000;\n\nexport function getDailyRewardsByBlock(\n  sourceToken: string,\n  targetToken: string,\n  latestExpandAmount?: string\n) {\n  console.log(\n    `get ${sourceToken}-${targetToken} rewards, expand: ${latestExpandAmount}`\n  );\n  const amount = FixedNumber.from(\n    utils.formatUnits(latestExpandAmount || '0', TBTC.decimals)\n  );\n  let now = Date.now();\n  if (now < START_TIME) {\n    now = START_TIME + 1000;\n  }\n  let index = Math.floor((now - START_TIME) / (7 * 86400 * 1000));\n  if (now >= 1622294525000) {\n    index = 8\n  } else {\n    index = 7\n  }\n  console.log('index:', index);\n  const total = TOTAL_REWARD_MAP[sourceToken.toLowerCase()];\n\n  return {\n    before: FixedNumber.from(WEEEK_REWARD_MAP[index] + '')\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(MiningRewardTotal + '')),\n    after: FixedNumber.from(WEEEK_REWARD_MAP[index] + '')\n      .addUnsafe(amount.isNegative() ? FixedNumber.from(0) : amount)\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(MiningRewardTotal + ''))\n  };\n}\n\n// DOGE\nconst DOGE_WEEEK_REWARD_MAP = [\n  5808403.36134328,\n  2904201.68067163,\n  1452100.84033583,\n  726050.42016791,\n  363025.21008395,\n  181512.60504197,\n  90756.30252098,\n  45378.15126049,\n  0\n];\n\nconst DOGE_TOTAL_REWARD_MAP = {\n  btcst: 75000000,\n  tbtc: 750000,\n  doge: 750000,\n  tdoge: 4500000\n};\nconst DOGE_MiningRewardTotal = 81000000;\n\nconst DOGE_START_TIME = 1621000800000;\n\nexport function getDOGEDailyRewardsByBlock(\n  sourceToken: string,\n  targetToken: string,\n  latestExpandAmount?: string\n) {\n  console.log(\n    `get ${sourceToken}-${targetToken} rewards, expand: ${latestExpandAmount}`\n  );\n  const amount = FixedNumber.from(\n    utils.formatUnits(latestExpandAmount || '0', TDOGE.decimals)\n  );\n  let now = Date.now();\n  if (now < DOGE_START_TIME) {\n    now = DOGE_START_TIME + 1000;\n  }\n  let index = Math.floor((now - DOGE_START_TIME) / (7 * 86400 * 1000));\n  if (index >= 8) {\n    index = 8;\n  }\n  const total = DOGE_TOTAL_REWARD_MAP[sourceToken.toLowerCase()];\n\n  return {\n    before: FixedNumber.from(DOGE_WEEEK_REWARD_MAP[index] + '')\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(DOGE_MiningRewardTotal + '')),\n    after: FixedNumber.from(DOGE_WEEEK_REWARD_MAP[index] + '')\n      .addUnsafe(amount.isNegative() ? FixedNumber.from(0) : amount)\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(DOGE_MiningRewardTotal + ''))\n  };\n}\n","import { BigNumberish, utils, FixedNumber } from 'ethers';\nimport { BTCB, BTCST, TBTC, TDOGE } from 'src/constants/token';\nimport { Token } from 'src/types/token';\n\nconst baseTime = 1616760000000;\n\nexport const formatBalance = (\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) => {\n  const formatted = utils.formatUnits(value, decimals);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function formatFixedBalance(\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) {}\n\nexport function commonFormatBalance(value: BigNumberish, decimals = 18) {\n  return formatBalance(value, decimals, 8);\n}\n\nexport const parseBalance = (value: string = '0', decimals = 18) => {\n  return utils.parseUnits(value, decimals);\n};\n\nexport function getRoiAndApy(\n  value: FixedNumber,\n  price: FixedNumber,\n) {\n  const roi = Number(\n    value\n      .mulUnsafe(FixedNumber.from(365))\n      .divUnsafe(price)\n      .toString()\n  );\n\n  // const apy = (1+apr/365)^365-1;\n  const daily = value.divUnsafe(price).addUnsafe(FixedNumber.from('1.0'));\n\n  let apy = Math.pow(Number(daily.toString()), 365) - 1;\n\n  return {\n    roi,\n    apy,\n    daily\n  };\n}\n\nexport function formatApy(\n  sourceToken: Token,\n  value: FixedNumber,\n  afterValue: FixedNumber,\n  price: FixedNumber,\n  targetToken?: Token\n) {\n  const { roi, apy } = getRoiAndApy(value, price);\n  const { roi: afterRoi, apy: afterApy, daily: afterDaily } = getRoiAndApy(\n    afterValue,\n    price\n  );\n\n  let res = afterApy;\n  let useRoi = false;\n  if (targetToken && targetToken.symbol === TDOGE.symbol) {\n    res = afterRoi;\n    useRoi = true;\n  }\n  if (afterApy < 10000) {\n    res = afterApy;\n    useRoi = false;\n  }\n  console.log(\n    `daily:${afterDaily},source:${sourceToken.symbol.toLowerCase()},targte:${\n      targetToken ? targetToken.symbol : ''\n    },value:${value},price:${price} res:${res} roi:${afterRoi} apy:${afterApy}`\n  );\n\n  const percent = formatPercentage(res, 2);\n  const beforePercent = formatPercentage(useRoi ? roi : apy, 2) \n  const diff = FixedNumber.from(percent).subUnsafe(FixedNumber.from(beforePercent));\n\n  return {\n    data: `${percent}% ${useRoi ? '(ROI)': ''}`,\n    diff,\n  };\n}\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n  const formatted = String(value * 100);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function getRemainTime() {\n  const now = Date.now();\n  const secondsPerDay = 24 * 60 * 60;\n  const totalSeconds = Math.floor(((now - baseTime) / 1000) % secondsPerDay);\n  const remainSeconds = secondsPerDay - totalSeconds;\n\n  const hours = String(Math.floor((remainSeconds / (60 * 60)) % 24)).padStart(\n    2,\n    '0'\n  );\n  const minutes = String(Math.floor((remainSeconds / 60) % 60)).padStart(\n    2,\n    '0'\n  );\n  const seconds = String(Math.floor(remainSeconds % 60)).padStart(2, '0');\n  const progress = Math.floor((totalSeconds * 100) / secondsPerDay);\n\n  return {\n    hours,\n    minutes,\n    seconds,\n    progress\n  };\n}\n\nexport function formatMoney(num: Number) {\n  return num.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n}\n","import { useEffect, useMemo } from 'react';\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\nimport {\n  tDogeLatestExpandAmountAtom,\n  tBTCLatestExpandAmountAtom\n} from 'src/atoms';\nimport { getLatestExpandAmount } from 'src/service';\nimport {\n  getTBTCESTPolicyContract,\n  getTBTCChefContract\n} from 'src/utils/contract';\nimport { contractConfig } from 'src/config';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { TDOGE, TBTC } from 'src/constants/token';\nimport { BigNumber } from 'ethers';\n\nexport function useFetchLatestExpandAmount() {\n  const { library } = useActiveWeb3React();\n  const setTDogeLatestExpandAmount = useSetRecoilState(\n    tDogeLatestExpandAmountAtom\n  );\n\n  const setTBTCLatestExpandAmount = useSetRecoilState(\n    tBTCLatestExpandAmountAtom\n  );\n\n  const TBTCSTPolicyContract = useMemo(() => {\n    return getTBTCESTPolicyContract(contractConfig.TBTC_POLICY, library);\n  }, [library]);\n\n  const TBTCChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TBTC_CHEF, library);\n  }, [library]);\n\n  const TDOGEESTPolicyContract = useMemo(() => {\n    return getTBTCESTPolicyContract(contractConfig.TDOGE_POLICY, library);\n  }, [library]);\n\n  const TDOGEChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TDOGE_CHEF, library);\n  }, [library]);\n\n  useEffect(() => {\n    getLatestExpandAmount(TDOGEChefContract, TDOGEESTPolicyContract).then(\n      data => {\n        setTDogeLatestExpandAmount(data);\n      }\n    );\n  }, [TDOGEESTPolicyContract, TDOGEChefContract]);\n\n\n  useEffect(() => {\n    getLatestExpandAmount(TBTCChefContract, TBTCSTPolicyContract).then(data => {\n      setTBTCLatestExpandAmount(data);\n    });\n  }, [TBTCSTPolicyContract, TBTCChefContract]);\n}\n\nexport function useGetLatestExpandAmount(symbol: string) {\n  const tdogeAmount = useRecoilValue(tDogeLatestExpandAmountAtom);\n  const tbtcAmount = useRecoilValue(tBTCLatestExpandAmountAtom);\n\n  const result = useMemo(() => {\n    if (symbol === TDOGE.symbol) {\n      return tdogeAmount;\n    }\n\n    if (symbol === TBTC.symbol) {\n      return tbtcAmount;\n    }\n\n    return '0';\n  }, [symbol, tdogeAmount, tbtcAmount]);\n\n  return result;\n}\n","import { TokenPriceList } from 'src/service';\n\nexport function getPriceBySymbol(list: TokenPriceList, symbol: string) {\n  const item = Object.values(list).find(p => p.symbol.toLowerCase() === symbol);\n\n  if (!item) {\n    return undefined;\n  }\n\n  return item.price;\n}\n\nexport function getTwapBySymbol(list: TokenPriceList, symbol: string) {\n  const item = Object.values(list).find(p => p.symbol.toLowerCase() === symbol);\n\n  if (!item) {\n    return undefined;\n  }\n\n  return item.twap;\n}\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, CircularProgress, makeStyles, Theme } from '@material-ui/core';\n\ninterface LoadingBoxProps {\n  children: any;\n  loading?: boolean;\n  loadingAlign?: string;\n  showNoData?: boolean;\n  showNoDataContent?: any;\n  p?: number;\n  size?: string;\n  color?: \"primary\" | \"secondary\" | \"inherit\";\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  colorSecondary: {\n    color: '#000000'\n  }\n}));\n\nconst LoadingBox: FC<LoadingBoxProps> = ({\n  children,\n  loading = false,\n  loadingAlign = \"center\",\n  showNoData = false,\n  showNoDataContent = 'No data',\n  color = 'primary',\n  p = 5,\n  size = '40px'\n}) => {\n  const classes = useStyles();\n  if (loading) {\n    return (\n      <Box p={p} textAlign={loadingAlign}>\n        <CircularProgress color={color} size={size} classes={classes} />\n      </Box>\n    );\n  }\n\n  if (showNoData) {\n    return (\n      <Box p={p} textAlign=\"center\">\n        {showNoDataContent}\n      </Box>\n    );\n  }\n\n  return children;\n};\n\nLoadingBox.propTypes = {\n  children: PropTypes.any,\n  loading: PropTypes.bool,\n  showNoData: PropTypes.bool,\n  showNoDataContent: PropTypes.any\n};\n\nexport default LoadingBox;\n","declare const window: any;\n\nconst track = (...args: any[]): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n};\n\nconst pageview = (props: any): void => {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n};\n\nconst event = (type: string, props: Record<string, any>) => {\n  track('event', type, props);\n};\n\nexport default {\n  pageview,\n  event\n};\n","import React, { useCallback, useRef } from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton,\n  Container,\n  ButtonGroup,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\nimport i18n from 'src/i18n';\n\ninterface FooterProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: '0px 5px 10px 0px rgb(255 255 255 / 70%)',\n    paddingTop: 16,\n    paddingBottom: 16\n  }\n}));\n\nconst Footer: FC<FooterProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Hidden lgUp>\n      <Container maxWidth={false}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexGrow={1}\n          className={classes.footer}\n        >\n          <Box ml={2}>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button>\n                : <Button variant=\"contained\" color=\"primary\" ref={actionRef} onClick={connectWallet}>Connect Wallet</Button>\n            }\n          </Box>\n          <Box p={0}>\n            <Button onClick={(event) => setAnchorEl(event.currentTarget)}>\n              <LanguageIcon />\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n            >\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('en');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'en'}\n              >EN</MenuItem>\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('zh');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'zh'}\n              >中文</MenuItem>\n            </Menu>\n          </Box>\n        </Box>\n      </Container>\n    </Hidden>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React, {\n  forwardRef,\n  useEffect,\n  useCallback\n} from 'react';\nimport type {\n  HTMLProps,\n  ReactNode\n} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport track from 'src/utils/analytics';\nimport Footer from './Footer';\nimport { useFetchTokenPrice } from 'src/hooks/useFetchTokenPrice';\nimport { useFetchLatestExpandAmount } from 'src/hooks/useLatestExpandAmount';\n\ninterface PageProps extends HTMLProps<HTMLDivElement> {\n  children?: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  const location = useLocation();\n  useFetchTokenPrice();\n  useFetchLatestExpandAmount();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div\n      ref={ref as any}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n      <Footer />\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useEffect } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { tokenPriceListAtom, tokenPriceLoadingAtom } from 'src/atoms';\nimport { getTokenPrice, TokenPriceList } from 'src/service';\nimport isEmpty from 'lodash/isEmpty';\n\nconst PRICE_CACHE_KEY = 'TOKEN_PRICE_LIST';\n\nexport function useFetchTokenPrice() {\n  const setTokenPriceList = useSetRecoilState(tokenPriceListAtom);\n  const setTokenPriceLoading = useSetRecoilState(tokenPriceLoadingAtom);\n\n  useEffect(() => {\n    setTokenPriceLoading(true);\n    if (localStorage.getItem(PRICE_CACHE_KEY)) {\n      try {\n        const list = JSON.parse(localStorage.getItem(PRICE_CACHE_KEY));\n        console.log('...', list);\n        if (!isEmpty(list)) {\n          setTokenPriceList(list);\n          setTokenPriceLoading(false);\n        }\n      } catch (e) {\n      }\n    }\n    getTokenPrice()\n      .then(list => {\n        if (!isEmpty(list)) {\n          localStorage.setItem(PRICE_CACHE_KEY, JSON.stringify(list));\n          setTokenPriceList(list);\n        }\n      })\n      .finally(() => {\n        setTokenPriceLoading(false);\n      });\n  }, []);\n}\n","import React, {\n  useCallback,\n  useRef,\n} from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton\n} from '@material-ui/core';\n// import { Send as SendIcon } from 'react-feather';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\n// import { useActiveWeb3React} from 'src/hooks/useActiveWeb3React';\nimport Logo from 'src/components/Logo';\n\ninterface HeaderProps {\n  className?: string;\n  title: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // zIndex: theme.zIndex.drawer + 100,\n    // backgroundColor: theme.palette.background.default\n    padding: 0\n  },\n  account: {\n    width: 80,\n  },\n  toolbar: {\n    minHeight: 64\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, title, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n  const setMobileNavOpen = useSetRecoilState(mobileNavOpenAtom);\n\n  const showNav = useCallback(() => {\n    setMobileNavOpen(true);\n  }, [setMobileNavOpen])\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  return (\n    <Toolbar className={clsx(classes.root, className)} {...rest}>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexGrow={1}\n        pt={3}\n        pb={3}\n      >\n        <Hidden lgUp>\n          <Logo />\n          <IconButton\n            color=\"inherit\"\n            onClick={showNav}\n          >\n            <SvgIcon fontSize=\"small\" color=\"primary\">\n              <MenuIcon />\n            </SvgIcon>\n          </IconButton>\n        </Hidden>\n        <Hidden mdDown>\n          <Box flexGrow={1}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {\n                /* <SvgIcon fontSize=\"small\">\n                  <SendIcon />\n                </SvgIcon> */\n              }\n              {title}\n            </Typography>\n          </Box>\n          {/* <Box ml={2} flexGrow={1} /> */}\n          <Box>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button> \n                : <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    ref={actionRef}\n                    onClick={connectWallet}\n                  >\n                    Connect Wallet\n                  </Button>\n            }\n          </Box>\n        </Hidden>\n      </Box>\n    </Toolbar >\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import {useRef, useEffect } from 'react';\nimport type { MutableRefObject } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import { utils, BigNumber, FixedNumber } from 'ethers';\nimport { Token } from 'src/types/token';\nimport { useAsync } from 'react-async-hook';\nimport useAsyncEffect from 'use-async-effect';\nimport { getTokenPrice, getMineStatus, getPoolInfo } from 'src/service';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { getERC20Contract, getTBTCChefContract } from 'src/utils/contract';\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  FarmingInfoMap,\n  BTCB,\n  TBTC,\n  FarmingPidMap,\n  TDOGE,\n  FarmingTDogePidMap\n} from 'src/constants/token';\nimport {\n  calculateDailyReward,\n  getDailyRewardsByBlock,\n  getDOGEDailyRewardsByBlock\n} from 'src/utils';\nimport { formatApy } from 'src/utils/format';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceListAtom, tokenPriceLoadingAtom } from 'src/atoms';\nimport isEmpty from 'lodash/isEmpty';\nimport { contractConfig } from 'src/config';\nimport { useGetLatestExpandAmount } from './useLatestExpandAmount';\n\nconst DISTRIBUTE_LINE = '0.6';\n\nexport function useDailyPool(\n  sourceToken: Token,\n  targetToken: Token,\n  txHappend: number = 0\n) {\n  const { account, library } = useActiveWeb3React();\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  const [loading, setLoading] = useState(true);\n  const [sourceStakeAmount, setSourceStakeAmount] = useState<BigNumber>();\n  const [tokenRewardPerStake, setTokenRewardPerStake] = useState<FixedNumber>();\n  const [usdRewardPerStake, setUsdTokenRewardPerStake] = useState<\n    FixedNumber\n  >();\n  const [afterUsdRewardPerStake, setAfterUsdTokenRewardPerStake] = useState<\n    FixedNumber\n  >();\n  const [rewardDiff, setRewardDiff] = useState(false);\n  const latestExpandAmount = useGetLatestExpandAmount(targetToken.symbol);\n\n  const farmingInfo = useMemo(() => {\n    return FarmingInfoMap[targetToken.symbol];\n  }, [targetToken.symbol]);\n\n  const sourceTokenERC20Contract = useMemo(() => {\n    return sourceToken && sourceToken.address\n      ? getERC20Contract(sourceToken.address, library, account)\n      : null;\n  }, [sourceToken, library, account]);\n\n  useAsyncEffect(async () => {\n    setLoading(true);\n    if (tokenPriceLoading || isEmpty(tokenPrice)) {\n      return;\n    }\n\n    try {\n      if (\n        targetToken.symbol === TBTC.symbol ||\n        targetToken.symbol === TDOGE.symbol\n      ) {\n        let contractAddress = contractConfig.TBTC_CHEF;\n        let pidMap = FarmingPidMap;\n        if (targetToken.symbol === TDOGE.symbol) {\n          contractAddress = contractConfig.TDOGE_CHEF;\n          pidMap = FarmingTDogePidMap;\n        }\n        const contract = getTBTCChefContract(contractAddress, library, account);\n        const poolInfo = await getPoolInfo(\n          contract,\n          pidMap[sourceToken.symbol]\n        );\n        let sourceStakeAmount = poolInfo.totalDepositAmount;\n        if (sourceStakeAmount.isZero()) {\n          return;\n        }\n        const stakedTokenShrinkFactor = poolInfo.stakedTokenShrinkFactor;\n        if (stakedTokenShrinkFactor > 0) {\n          sourceStakeAmount = sourceStakeAmount\n            .mul(stakedTokenShrinkFactor)\n            .div(BigNumber.from(1e27 + ''));\n        }\n\n        setSourceStakeAmount(sourceStakeAmount);\n\n        const hashrate = FixedNumber.from(\n          utils.formatUnits(sourceStakeAmount, sourceToken.decimals) + ''\n        );\n        const { before: tokenReward, after: afterTokenReward } =\n          targetToken.symbol === TBTC.symbol\n            ? getDailyRewardsByBlock(\n                sourceToken.symbol,\n                targetToken.symbol,\n                latestExpandAmount\n              )\n            : getDOGEDailyRewardsByBlock(\n                sourceToken.symbol,\n                targetToken.symbol,\n                latestExpandAmount\n              );\n\n        const price = FixedNumber.from(\n          '' + getPriceBySymbol(tokenPrice, targetToken.symbol)\n        );\n\n        const tps = tokenReward.divUnsafe(hashrate);\n        const afterTps = afterTokenReward.divUnsafe(hashrate);\n        const ups = tps.mulUnsafe(price);\n        const afterUps = afterTps.mulUnsafe(price);\n\n        setTokenRewardPerStake(tps);\n        setUsdTokenRewardPerStake(ups);\n        setAfterUsdTokenRewardPerStake(afterUps);\n        setRewardDiff(!afterTokenReward.subUnsafe(tokenReward).isZero());\n      } else {\n        const BTCBStakeAmount: BigNumber = await sourceTokenERC20Contract.balanceOf(\n          contractConfig.FARM\n        );\n        const BTCSTStakeAmount: BigNumber = await sourceTokenERC20Contract.balanceOf(\n          contractConfig.FARM_BTCST\n        );\n\n        setSourceStakeAmount(\n          targetToken.symbol === 'btcb' ? BTCBStakeAmount : BTCSTStakeAmount\n        );\n\n        const totalAmount = BTCBStakeAmount.add(BTCSTStakeAmount);\n        const prehash = FixedNumber.from(\n          utils.formatUnits(totalAmount, sourceToken.decimals) + ''\n        );\n        let hashrate = prehash;\n        const sourceSupplyAmount: BigNumber = await sourceTokenERC20Contract.totalSupply();\n        if (\n          FixedNumber.from(totalAmount)\n            .divUnsafe(FixedNumber.from(sourceSupplyAmount))\n            .subUnsafe(FixedNumber.from(DISTRIBUTE_LINE))\n            .isNegative()\n        ) {\n          hashrate = FixedNumber.from(DISTRIBUTE_LINE).mulUnsafe(\n            FixedNumber.fromString(\n              utils.formatUnits(sourceSupplyAmount, sourceToken.decimals) + ''\n            )\n          );\n        }\n\n        const mineBTCBStatus = await getMineStatus();\n        const dailyBtcPerHash = FixedNumber.from(\n          mineBTCBStatus.dayList[0].eachHaveCoin\n        );\n        const price = FixedNumber.from(\n          '' + getPriceBySymbol(tokenPrice, BTCB.symbol)\n        );\n        console.log(\n          'calculate netreward using pric:' +\n            price +\n            ' daily btc per TH:' +\n            dailyBtcPerHash +\n            ' hashrate:' +\n            hashrate\n        );\n\n        const { btc, usd } = calculateDailyReward(\n          hashrate.mulUnsafe(FixedNumber.from('0.01')),\n          dailyBtcPerHash,\n          price\n        );\n\n        const tps = btc.divUnsafe(prehash);\n        const ups = usd.divUnsafe(prehash);\n\n        setTokenRewardPerStake(tps);\n        setUsdTokenRewardPerStake(ups);\n        setAfterUsdTokenRewardPerStake(ups);\n      }\n    } catch (e) {\n      console.error(e);\n      console.log('get apy error');\n    } finally {\n      setLoading(false);\n    }\n  }, [\n    sourceToken,\n    targetToken,\n    sourceTokenERC20Contract,\n    tokenPrice,\n    latestExpandAmount,\n    library,\n    account,\n    txHappend\n  ]);\n\n  const apy = useMemo(() => {\n    const price = getPriceBySymbol(tokenPrice, sourceToken.symbol);\n    if (!loading && usdRewardPerStake && afterUsdRewardPerStake && price) {\n      return formatApy(\n        sourceToken,\n        usdRewardPerStake,\n        afterUsdRewardPerStake,\n        FixedNumber.fromString('' + price),\n        targetToken\n      );\n    }\n  }, [\n    sourceToken,\n    usdRewardPerStake,\n    afterUsdRewardPerStake,\n    tokenPrice,\n    loading,\n    txHappend\n  ]);\n\n  return {\n    loading,\n    farmingInfo,\n    sourceStakeAmount,\n    usdRewardPerStake,\n    afterUsdRewardPerStake,\n    tokenRewardPerStake,\n    apy,\n    rewardDiff\n    // afterApy\n  };\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  FC\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport { BigNumber, FixedNumber } from 'ethers';\nimport { formatBalance } from 'src/utils/format';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { BTCST } from 'src/constants/token';\nimport { useTranslation } from 'react-i18next';\nimport { Token } from 'src/types/token';\ninterface   RecordsProps {\n  className?: string;\n  loading?: boolean;\n  records: any[];\n  title: string;\n  stake: any;\n  apy: { data: string; diff: FixedNumber };\n  targetToken:Token;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\nconst RecordItem: FC<any> = ({record, index,targetToken}) => {\n  const rewardAmount = record.rewardAmount;\n  const stakedLowestWaterMark = record.stakedLowestWaterMark;\n  const { t } = useTranslation();\n  let logo;\n  let decimal;\n  if (targetToken.name==\"BTCB\"){\n    logo = \"tokens/BTCB.png\";\n    decimal = 18;\n  }else if(targetToken.name == \"BTCST\"){\n    logo = \"tokens/BTCST-Small.png\";\n    decimal =17;\n  }\n  return (\n    <ListItem\n      divider={index < 5}\n      key={record.id}\n    >\n      <ListItemAvatar>\n        <Avatar\n          alt=\"Customer\"\n          component={RouterLink}\n          src={logo}\n          to=\"#\"\n        >\n          {/* {getInitials(record.customer.name)} */}\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        disableTypography\n        primary={(\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h6\"\n          >\n            {t(\"stats.mining.daily.reward\")}: {rewardAmount.gt(BigNumber.from(0)) ? formatBalance(rewardAmount || 0,decimal,8): \"N/A\"}\n          </Typography>\n        )}\n        secondary={(\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {t(\"stats.mining.daily.staked\")}: {stakedLowestWaterMark.gt(BigNumber.from(0)) ? formatBalance(stakedLowestWaterMark || 0,17,8): \"N/A\"}\n          </Typography>\n        )}\n      />\n      <Typography\n        color=\"textSecondary\"\n        noWrap\n        variant=\"caption\"\n      >\n        {new Date(record.timeKey * 1000).toLocaleDateString('zh-cn')}\n      </Typography>\n    </ListItem>\n  )\n}\n\nconst Records: FC<RecordsProps> = ({ className,targetToken, title, stake, apy, loading = false, records = [], ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { t } = useTranslation();\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title={title}\n        // action={<GenericMoreButton />}\n      />\n      <Divider />\n      <List disablePadding>\n        {records.map((record, i) => (\n          <RecordItem record={record} key={i} index={i} targetToken={targetToken}/>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nRecords.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Records;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport LoadingBox from 'src/components/LoadingBox';\nimport currency from 'currency.js';\nimport { useTranslation } from 'react-i18next';\nimport isEmpty from 'lodash/isEmpty'; \nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceLoadingAtom } from 'src/atoms';\nimport { BTCB } from 'src/constants/token';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { Token } from 'src/types/token';\n\ninterface RoiPerCustomerProps {\n  className?: string;\n  tokenPrice?:any;\n  token: Token;\n  title: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst RoiPerCustomer: FC<RoiPerCustomerProps> = ({ tokenPrice,className, token, title, ...rest }) => {\n  const classes = useStyles();\n  const {t} = useTranslation();\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          {title}\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n         <div className={classes.valueContainer}>\n            <LoadingBox loading={tokenPriceLoading} p={0} size={'25px'} color=\"secondary\">\n              <Typography\n                variant=\"h3\"\n                color=\"inherit\"\n              >\n                {!isEmpty(tokenPrice) ? currency(getPriceBySymbol(tokenPrice, token.symbol)).format() : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Box>\n      </Box>\n      <Avatar\n        className={classes.avatar}\n        color=\"inherit\"\n      >\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RoiPerCustomer;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport CircularProgress from './CircularProgress';\nimport Label from 'src/components/Label';\nimport { BigNumber } from 'ethers';\nimport { formatBalance } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\nimport { Token } from 'src/types/token';\n\ninterface TauBTCInitMiningProgressProps {\n  className?: string;\n  chefStats?:any;\n  totalSupply?:any;\n  initialMinted?:BigNumber;\n  token: Token;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'space-between'\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst TauBTCInitMiningProgress: FC<TauBTCInitMiningProgressProps> = ({totalSupply,initialMinted,chefStats, className, token, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    target:2100,\n    value: 0,\n  };\n  let percent = Math.round(data.value*100/data.target);\n  // if (targetSupply && alreadyMined && alreadyAirdropped&& initialMinted){\n  //   console.log(`balanceForChef:${balanceForChef},targetSupply:${targetSupply},alreadyMined:${alreadyMined},alreadyAirdropped:${alreadyAirdropped},initialMinted:${initialMinted}`)\n  //   percent = (alreadyMined.add(alreadyAirdropped).add(initialMinted).sub(balanceForChef))\n  //       .mul(10000).div(targetSupply).toNumber()/100;\n  // }\n  if (chefStats && chefStats.result && totalSupply && totalSupply.result){\n    console.log(`balanceForChef:${chefStats.result.balanceForChef},total:${totalSupply.result},staked:${chefStats.result.stakedTBTC}`)\n    const circulating = totalSupply.result.sub(chefStats.result.balanceForChef)\n      .add(chefStats.result.stakedTBTC);\n\n    percent = circulating.mul(10000).div(chefStats.result.target).toNumber()/100;\n  }\n  const {t} = useTranslation();\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        component=\"h3\"\n        gutterBottom\n        variant=\"overline\"\n        color=\"textSecondary\"\n      >\n        <i className={classes.tau}>&tau;</i>{t(`stats.${token.symbol}.miningProgress`)}\n      </Typography>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {percent}\n          %\n        </Typography>\n        <LinearProgress\n          className={classes.progress}\n          value={percent}\n          color=\"secondary\"\n          variant=\"determinate\"\n        />\n      </Box>\n    </Card>\n  );\n};\n\nTauBTCInitMiningProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCInitMiningProgress;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme';\n\ninterface CircularProgressProps {\n  className?: string;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nconst CircularProgress: FC<CircularProgressProps> = ({ className, value, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n};\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, { FC, useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport useInterval from '@use-it/interval';\nimport { Theme } from 'src/theme';\nimport CircularProgress from './CircularProgress';\nimport Label from 'src/components/Label';\nimport { useTranslation } from 'react-i18next';\nimport { getRemainTime } from 'src/utils/format';\n\ninterface TauBTCRebaseCountdownProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    // backgroundColor: theme.palette.secondary.main,\n    // color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TauBTCRebaseCountdown: FC<TauBTCRebaseCountdownProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [time, setTime] = useState('');\n  const [percent, setPercent] = useState(0);\n\n  useInterval(() => {\n    const data = getRemainTime();\n    setTime(`${data.hours}:${data.minutes}:${data.seconds}`);\n    setPercent(data.progress);\n  }, 1000);\n\n  const { t } = useTranslation();\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          {t('stats.tbtc.nextRebase')}\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {time}\n          </Typography>\n        </Box>\n      </Box>\n      <CircularProgress value={percent} className={classes.avatar} />\n    </Card>\n  );\n};\n\nTauBTCRebaseCountdown.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCRebaseCountdown;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { formatBalance } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\nimport { Token } from 'src/types/token';\ninterface TauBTCTotalSupplyProps {\n  className?: string;\n  totalSupply?:any;\n  chefStats?:any;\n  token: Token;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst TauBTCTotalSupply: FC<TauBTCTotalSupplyProps> = ({ className,totalSupply,chefStats, token,...rest }) => {\n  const classes = useStyles();\n  const {t} = useTranslation();\n  let circulatingSupply;\n  if ( chefStats && chefStats.result && totalSupply && totalSupply.result){\n    circulatingSupply = totalSupply.result.sub(chefStats.result.balanceForChef);\n    if (chefStats.result.stakedTBTC){\n      circulatingSupply = circulatingSupply.add(chefStats.result.stakedTBTC);\n    }\n  }\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          <i className={classes.tau}>&tau;</i>{t(`stats.${token.symbol}.totalSupply`)}\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={totalSupply.loading||chefStats.loading} p={0} size={'25px'}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n                {/* {data.currency} */}\n                {circulatingSupply ? \n                formatBalance(circulatingSupply, token.decimals,2): '-'}\n              </Typography>\n            </LoadingBox> \n          </div>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTauBTCTotalSupply.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCTotalSupply;\n","import React, { useEffect, useMemo, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { utils, FixedNumber } from 'ethers';\nimport currency from 'currency.js';\nimport { Card, Grid, Typography, makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { BTCB, BTCST } from 'src/constants/token';\nimport { formatBalance } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\nimport { Token } from 'src/types/token';\ninterface OverviewProps {\n  className?: string;\n  BTCBPoolStakeAmount: any;\n  BTCSTPoolStakeAmount: any;\n  totalMined: any;\n  btcstTotalSupply: any;\n  staked: any;\n  totalInPoolReward?: any;\n  apy: { data: string; diff: FixedNumber };\n  targetToken: Token;\n}\n\nfunction apyDisplay(apy: { data: string; diff: FixedNumber }) {\n  const diffResult =\n    apy.diff.isNegative() || apy.diff.isZero()\n      ? ''\n      : `(${apy.diff.toString()}% from inflation)`;\n\n  return (\n    <>\n      <span>{apy.data}</span>\n      {diffResult && <span>{diffResult}</span>}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  tau: {\n    'text-transform': 'initial'\n  }\n}));\n\nconst Overview: FC<OverviewProps> = ({\n  className,\n  totalMined,\n  BTCBPoolStakeAmount,\n  BTCSTPoolStakeAmount,\n  staked,\n  totalInPoolReward,\n  targetToken,\n  apy,\n  btcstTotalSupply,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const currentStakeAmount = useMemo(() => {\n    return targetToken.symbol === BTCB.symbol\n      ? BTCBPoolStakeAmount\n      : BTCSTPoolStakeAmount;\n  }, [targetToken, BTCBPoolStakeAmount, BTCSTPoolStakeAmount]);\n\n  const btcstTotalStaked = useMemo(() => {\n    const data =\n      BTCBPoolStakeAmount.result && BTCSTPoolStakeAmount.result\n        ? BTCBPoolStakeAmount.result.add(BTCSTPoolStakeAmount.result)\n        : undefined;\n    return data;\n  }, [BTCBPoolStakeAmount.result, BTCSTPoolStakeAmount.result]);\n\n  // console.log(btcstTotalStaked);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\">\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.alltimeMined').replace('#', targetToken.name)}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={totalMined.loading}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {totalMined.result\n                  ? formatBalance(totalMined.result, targetToken.decimals, 8)\n                  : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.btcst.staked')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={currentStakeAmount.loading} size=\"25px\" p={0}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {currentStakeAmount.result\n                  ? formatBalance(currentStakeAmount.result, BTCST.decimals, 8)\n                  : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.mining.estapy')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={totalInPoolReward.loading}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {apy ? apyDisplay(apy) : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.btcst.boostFactor')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox\n              loading={\n                btcstTotalSupply.loading ||\n                BTCSTPoolStakeAmount.loading ||\n                BTCBPoolStakeAmount.loading\n              }\n            >\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {btcstTotalSupply.result && btcstTotalStaked\n                  ? currency(\n                      utils.formatUnits(\n                        btcstTotalSupply.result,\n                        BTCST.decimals\n                      ),\n                      { symbol: '' }\n                    )\n                      .multiply(0.6)\n                      .divide(\n                        utils.formatUnits(btcstTotalStaked, BTCST.decimals)\n                      )\n                      .format() + 'X'\n                  : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme';\n\ninterface CircularProgressProps {\n  className?: string;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nconst CircularProgress: FC<CircularProgressProps> = ({ className, value, ...rest }) => {\n  const classes = useStyles();\n  \n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n};\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React from 'react';\nimport type { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme'; \n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport type { Theme } from 'src/theme';\nimport type { RebaseRecord } from 'src/types/reports';\nimport CircularProgress from './CircularProgress';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { formatBalance } from 'src/utils/format';\nimport Label from 'src/components/Label';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useTranslation } from 'react-i18next';\nimport { Token } from 'src/types/token';\nimport isEmpty from 'lodash/isEmpty';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceLoadingAtom } from 'src/atoms';\nimport { getTwapBySymbol } from 'src/utils/price';\ninterface TauBTCRebaseRecordProps {\n  className?: string;\n  rebaseRecords?:any;\n  token: Token;\n  tokenPriceList: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  label: {\n    // marginLeft: theme.spacing(1)\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nconst TauBTCRebaseRecord: FC<TauBTCRebaseRecordProps> = ({ rebaseRecords,className, token, tokenPriceList, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n\n  const twap = useMemo(() => {\n    if (tokenPriceLoading || isEmpty(tokenPriceList)) {\n      return null;\n    }\n\n    return getTwapBySymbol(tokenPriceList, token.symbol);\n  }, [tokenPriceList, token.symbol, tokenPriceLoading])\n\n  // console.log(\"rebaseRecords\",rebaseRecords);\n  const {t} = useTranslation();\n  let records=[];\n  if (rebaseRecords && !rebaseRecords.loading){\n    const list = rebaseRecords.result || [];\n    for (let i=0;i<5;i++){\n      if (i< list.length){\n        const element = list[i];\n        \n        records.push({data:element,rate:0,timestampSec:element.timestampSec.toNumber()});\n        if (element.requestedSupplyAdjustment.isZero()){\n          records[i].rate = BigNumber.from(0);\n        }else{\n          console.log(`epoch:${element.epoch},element.requestedSupplyAdjustment:${element.requestedSupplyAdjustment},el.newBalance:${element.newBalance}`);\n          records[i].rate = element.requestedSupplyAdjustment.mul(10000).div(\n            element.requestedSupplyAdjustment.add(element.newBalance));\n        }\n        // console.log(\"rate\",records[i].rate)\n      }else{\n        records.push({\n          empty:true,\n          timestampSec:i\n        });\n      } \n    }\n  }else{\n    for(let i=0;i<5;i++){\n      records.push({loading:true,data:\"-\",timestampSec:i});\n    }\n  }\n  // console.log(\"records\",records);\n  const subHeader = () =>(\n    <Typography\n      noWrap\n      variant=\"body2\"\n    >\n      <Label\n        className={classes.label}\n        color={!twap? \"secondary\":\n            twap >= 1 ? \"success\":\n            \"error\"\n          }\n      >\n        {!twap? null:\n        twap >= 1 ? `${t('stats.rebase.twap')}: ${twap.toFixed(2)}` : \n        `${t('stats.rebase.records.rebasing')} (${t('stats.rebase.twap')}: ${twap.toFixed(2)})`}\n      </Label>\n      \n      {' '}\n    </Typography>\n  )\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={<GenericMoreButton />}\n        title={t(`stats.${token.symbol}.rebase.records`)}\n        subheader={subHeader()}\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {records.map((record) => (\n              record && record.loading ?(\n              <TableRow\n                hover\n                key={record.timestampSec}\n              >\n                <TableCell>\n                  <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    {/* <img\n                      alt=\"Product\"\n                      className={classes.image}\n                      src={product.image}\n                    /> */}\n                    <Box ml={2}>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                      >\n                        {t(`stats.${token.symbol}.rebase.epoch`)}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {' '}\n                        {''}\n                      </Typography>\n                    </Box>  \n                    <Box ml={2}>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                      >\n                        {''}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {' '} \n                      </Typography>\n                    </Box>\n                  </Box>\n                </TableCell>\n                <TableCell>\n                <LoadingBox loading={record.loading} p={0} size={'25px'}>\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    {t(`stats.${token.symbol}.rebase.price`)}\n                  </Typography>\n                  <Typography\n                    noWrap\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    {' '}\n                  </Typography>\n                </LoadingBox> \n                </TableCell>\n                <TableCell>\n                  <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"flex-end\"\n                  >\n                    <Box mr={2}>\n                      <Typography\n                        align=\"right\"\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                      >\n                       {\" \"}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {t(`stats.${token.symbol}.rebase.adjustRate`)}\n                      </Typography>\n                    </Box>\n                    <CircularProgress value={0} />\n                  </Box>\n                </TableCell>\n              </TableRow> \n              )\n              :(\n              <TableRow\n                hover\n                key={record.timestampSec}\n              >                      \n                <TableCell>\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  {/* <img\n                    alt=\"Product\"\n                    className={classes.image}\n                    src={product.image}\n                  /> */}\n                  <Box ml={2}>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      {t(`stats.${token.symbol}.rebase.epoch`)}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      {' '}\n                      {record.empty? \"-\":record.data.epoch+\"\"}\n                    </Typography>\n                  </Box>  \n                  <Box ml={2}>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      {record.empty? \"-\":record.data.requestedSupplyAdjustment && record.data.requestedSupplyAdjustment.gt(0)? \n                      t('stats.rebase.records.inflation'):\n                      record.data.requestedSupplyAdjustment.lt(0)?t('stats.rebase.records.deflation'):\n                      t('stats.rebase.records.noaction')}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      <span className={classes.subscriptions}>\n                        {record.empty? \"-\":numeral(formatBalance(record.data.requestedSupplyAdjustment,token.decimals,8)).format('0,0.00000000')}\n                      </span>\n                      {' '}\n                      &tau;{token.symbol === 'tbtc' ? 'Bitcoin' : 'Doge'}\n                    </Typography>\n                  </Box>\n                </Box>\n              </TableCell>\n              <TableCell>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                >\n                  {t(`stats.${token.symbol}.rebase.price`)}\n                </Typography>\n                <Typography\n                  noWrap\n                  variant=\"body2\"\n                >\n                  <Label\n                    className={classes.label}\n                    color={record.empty? \"secondary\":\n                    Number(formatBalance(record.data.exchangeRate,18,2))>1? \"success\":\n                    Number(formatBalance(record.data.exchangeRate,18,2))<1? \"error\":\"secondary\"}\n                  >\n                    {record.empty? \"-\":numeral(formatBalance(record.data.exchangeRate,18,2)).format(`0,0.00`)}\n                  </Label>\n                  \n                  {' '}\n                </Typography>\n              </TableCell>\n              <TableCell>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"flex-end\"\n              >\n                <Box mr={2}>\n                  <Typography\n                    align=\"right\"\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    {record.empty || !record.rate? \" \":formatBalance(record.rate,2,4)}\n                    %\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    {t(`stats.${token.symbol}.rebase.adjustRate`)}\n                  </Typography>\n                </Box>\n                <CircularProgress value={record.empty || !record.rate ?0: \n                  record.rate.gt(0)?\n                  Number(formatBalance(record.rate,2,4)):\n                  100+Number(formatBalance(record.rate,2,4)) }/>\n              </Box>\n            </TableCell>\n            </TableRow> \n              )   \n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        {/* <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button> */}\n      </Box>\n    </Card>\n  );\n}\n\nTauBTCRebaseRecord.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCRebaseRecord;\n","import React, { useMemo, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Card, Grid, Typography, makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\nimport LoadingBox from 'src/components/LoadingBox';\nimport currency from 'currency.js';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { formatBalance, formatMoney } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceLoadingAtom } from 'src/atoms';\nimport { BTCST } from 'src/constants/token';\nimport isEmpty from 'lodash/isEmpty';\nimport { getPriceBySymbol } from 'src/utils/price';\n\ninterface OverviewProps {\n  className?: string;\n  tvl: any;\n  txInfo: any;\n  tokenPrice: any;\n  tbtcTotalSupply?: any;\n  btcstTotalSupply?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  tau: {\n    'text-transform': 'initial'\n  }\n}));\n\nconst Overview: FC<OverviewProps> = ({\n  tvl,\n  tokenPrice,\n  tbtcTotalSupply,\n  btcstTotalSupply,\n  txInfo,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  //const LOCKED_Supply = BigNumber.from(4778006+500000).mul(1e17+\"\");\n  const LOCKED_Supply = BigNumber.from(0).mul(1e17 + '');\n\n  const totalInfo = useMemo(() => {\n    const result = {\n      txs: 0,\n      holders: 0\n    };\n    console.log('txInfo', txInfo.result);\n    if (txInfo?.result?.data?.length) {\n      txInfo.result.data.forEach(item => {\n        result.txs += item.count;\n        result.holders += item.sender_count;\n      });\n    }\n    return result;\n  }, [txInfo.result]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\">\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.tvl')}\n          </Typography>\n\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={tvl.loading} p={0} size={'25px'}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {tvl.result ? currency(tvl.result).format() : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.btcst.price')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={tokenPriceLoading} p={0} size={'25px'}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {!isEmpty(tokenPrice)\n                  ? currency(\n                      getPriceBySymbol(tokenPrice, BTCST.symbol)\n                    ).format()\n                  : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.dapp.activeAddress')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={txInfo.loading} p={0} size={'25px'}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {totalInfo.holders || '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.dapp.txCount')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={txInfo.loading} p={0} size={'25px'}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {totalInfo.txs || '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import { BigNumber, FixedNumber, utils } from 'ethers';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAsync } from 'react-async-hook';\nimport {\n  useFarmBTCSTContract,\n  useTBTCContract,\n  useTBTCESTPolicyContract\n} from './useContract';\nimport { contractConfig } from 'src/config';\nimport {\n  getTotalStakedBTCST,\n  totalSupply,\n  getNextRebaseDate,\n  viewFarmBasicInfo,\n  getDailyRecords,\n  getTVL,\n  getTokenPrice,\n  TARGET_INITIAL_SUPPLY,\n  alreadyMinedReward,\n  merkleTotalAlreadyClaimed,\n  getPoolInfo,\n  getTXInfo,\n  getTokensInfo\n} from 'src/service';\nimport { useEffect, useMemo } from 'react';\nimport {\n  getERC20Contract,\n  getFarmBTCSTContract,\n  getTBTCChefContract,\n  getTBTCESTPolicyContract\n} from 'src/utils/contract';\nimport { formatBalance } from 'src/utils/format';\nimport { useDailyPool } from './useDailyPool';\nimport { BTCB, BTCST, FarmingPidMap, TokenList, FarmingTDogePidMap } from 'src/constants/token';\nimport { tokenPriceListAtom } from 'src/atoms';\nimport { useRecoilValue } from 'recoil';\nimport isEmpty from 'lodash/isEmpty';\nimport { getPriceBySymbol } from 'src/utils/price';\n\nconst BATCH_LOAD_RECORD_LIMIT = 5;\nconst RAMOUNT_DIVIDER = BigNumber.from(1e8).pow(BigNumber.from(4));\n\nconst getStakeAmount = async (contract: any, symbol: string, map: {[key: string]: number}) => {\n  const pid = map[symbol]; \n  const poolInfo = await getPoolInfo(\n    contract,\n    pid\n  );\n  let sourceStakeAmount = poolInfo.totalDepositAmount;\n  // const stakedTokenShrinkFactor = poolInfo.stakedTokenShrinkFactor;\n  // if (stakedTokenShrinkFactor > 0) {\n  //   sourceStakeAmount = sourceStakeAmount\n  //     .mul(stakedTokenShrinkFactor)\n  //     .div(BigNumber.from(1e12 + ''));\n  // }\n\n  return {\n    symbol,\n    sourceStakeAmount\n  };\n};\n\nexport const useStatsState = () => {\n  const { account, library } = useWeb3React();\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n\n  const { apy } = useDailyPool(BTCST, BTCB);\n\n  const TBTCContract = useMemo(() => {\n    return getERC20Contract(contractConfig.TBTC, library, account);\n  }, [account, library]);\n\n  const TDOGEContract = useMemo(() => {\n    return getERC20Contract(contractConfig.TDOGE, library, account);\n  }, [account, library]);\n\n  const BTCSTContract = useMemo(() => {\n    return getERC20Contract(contractConfig.STOKEN, library, account);\n  }, [library, account]);\n\n  const BTCBContract = useMemo(() => {\n    return getERC20Contract(contractConfig.RTOKEN, library, account);\n  }, [library, account]);\n\n  const FarmBTCContract = useMemo(() => {\n    return getFarmBTCSTContract(contractConfig.FARM, library, account);\n  }, [library, account]);\n\n  const FarmBTCSTContract = useMemo(() => {\n    return getFarmBTCSTContract(contractConfig.FARM_BTCST, library, account);\n  }, [library, account]);\n\n  const TBTCChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TBTC_CHEF, library, account);\n  }, [account, library]);\n\n  const TDOGEChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TDOGE_CHEF, library, account);\n  }, [account, library]);\n\n  const TBTCESTPolicyContract = useMemo(() => {\n    return getTBTCESTPolicyContract(\n      contractConfig.TBTC_POLICY,\n      library,\n      account\n    );\n  }, [account, library]);\n\n\n  const TDOGEESTPolicyContract = useMemo(() => {\n    return getTBTCESTPolicyContract(\n      contractConfig.TDOGE_POLICY,\n      library,\n      account\n    );\n  }, [account, library]);\n\n  const BTCBPoolStakeAmount = useAsync<BigNumber>(() => {\n    return BTCSTContract.balanceOf(contractConfig.FARM);\n  }, [BTCSTContract]);\n\n  const BTCSTPoolStakeAmount = useAsync<BigNumber>(() => {\n    return BTCSTContract.balanceOf(contractConfig.FARM_BTCST);\n  }, [BTCSTContract]);\n\n  const totalMinedBTC = useAsync<BigNumber>(() => {\n    return FarmBTCContract.viewAllTimeTotalMined();\n  }, [FarmBTCContract]);\n\n  const totalMinedBTCST = useAsync<BigNumber>(() => {\n    return FarmBTCSTContract.viewAllTimeTotalMined();\n  }, [FarmBTCSTContract]);\n\n  const totalInPoolBTC = useAsync<BigNumber>(() => {\n    return BTCBContract.balanceOf(contractConfig.FARM);\n  }, [BTCBContract]);\n\n  const tvl = useAsync(async () => {\n    if (\n      !BTCBPoolStakeAmount.result ||\n      !BTCSTPoolStakeAmount.result ||\n      isEmpty(tokenPrice)\n    ) {\n      return '';\n    }\n\n    const data: {\n      symbol: string;\n      sourceStakeAmount: BigNumber;\n    }[] = await Promise.all(\n      Object.keys(FarmingPidMap).map(symbol => {\n        return getStakeAmount(TBTCChefContract, symbol, FarmingPidMap);\n      })\n    );\n\n    const dogeData: {\n      symbol: string;\n      sourceStakeAmount: BigNumber;\n    }[] = await Promise.all(\n      Object.keys(FarmingTDogePidMap).map(symbol => {\n        return getStakeAmount(TDOGEChefContract, symbol, FarmingTDogePidMap);\n      })\n    );\n\n    const list = data.concat(dogeData).concat([\n      { symbol: BTCST.symbol, sourceStakeAmount: BTCBPoolStakeAmount.result },\n      { symbol: BTCST.symbol, sourceStakeAmount: BTCSTPoolStakeAmount.result }\n    ]);\n\n    let result = FixedNumber.from(0);\n\n    list.forEach(item => {\n      const p = getPriceBySymbol(tokenPrice, item.symbol);\n      result = result.addUnsafe(\n        FixedNumber.fromString(\n          utils.formatUnits(\n            item.sourceStakeAmount,\n            TokenList[item.symbol].decimals\n          )\n        ).mulUnsafe(FixedNumber.fromString(String(p)))\n      );\n    });\n\n    return result.toString();\n  }, [\n    BTCBPoolStakeAmount.result,\n    BTCSTPoolStakeAmount.result,\n    tokenPrice,\n    TBTCChefContract,\n    TDOGEChefContract\n  ]);\n\n  const txInfo = useAsync(getTokensInfo, []);\n\n  const tbtcTotalSupply = useAsync<BigNumber>(() => totalSupply(TBTCContract), [\n    TBTCContract\n  ]);\n\n  const tdogeTotalSupply = useAsync<BigNumber>(\n    () => totalSupply(TDOGEContract),\n    [TDOGEContract]\n  );\n\n  const btcstTotalSupply = useAsync<BigNumber>(() => {\n    return totalSupply(BTCSTContract);\n  }, [BTCSTContract]);\n\n  const totalMinted = useAsync<BigNumber>(\n    () => TBTCChefContract.totalMinted(),\n    [TBTCChefContract]\n  );\n\n  const farmBTCBasicInfo = useAsync<any>(\n    () => viewFarmBasicInfo(FarmBTCContract),\n    [FarmBTCContract]\n  );\n\n  const farmBTCSTBasicInfo = useAsync<any>(\n    () => viewFarmBasicInfo(FarmBTCSTContract),\n    [FarmBTCSTContract]\n  );\n\n  const chefStats = useAsync<any>(async () => {\n    const target = await TARGET_INITIAL_SUPPLY(TBTCChefContract);\n    const mined = await alreadyMinedReward(TBTCChefContract);\n    const airdropClaimed = await merkleTotalAlreadyClaimed(TBTCChefContract);\n    const balanceForChef = await TBTCContract.balanceOf(\n      contractConfig.TBTC_CHEF\n    );\n    const poolInfo = await getPoolInfo(TBTCChefContract, 2);\n    const totalDepositTBTCAmount = poolInfo.totalDepositAmount;\n    let stakedTBTC = totalDepositTBTCAmount;\n    const stakedTokenShrinkFactor = poolInfo.stakedTokenShrinkFactor;\n    if (stakedTokenShrinkFactor > 0) {\n      stakedTBTC = stakedTBTC\n        .mul(stakedTokenShrinkFactor)\n        .div(BigNumber.from(1e12 + ''));\n    }\n    return {\n      target: target,\n      mined: mined,\n      airdropClaimed: airdropClaimed,\n      balanceForChef: balanceForChef,\n      totalDepositTBTCAmount: totalDepositTBTCAmount,\n      stakedTBTC: stakedTBTC,\n      stakedTokenShrinkFactor: stakedTokenShrinkFactor\n    };\n  }, [TBTCChefContract, TBTCContract]);\n\n   const chefDogeStats = useAsync<any>(async () => {\n     const target = await TARGET_INITIAL_SUPPLY(TDOGEChefContract);\n     const mined = await alreadyMinedReward(TDOGEChefContract);\n     const airdropClaimed = await merkleTotalAlreadyClaimed(TDOGEChefContract);\n     const balanceForChef = await TDOGEContract.balanceOf(\n       contractConfig.TDOGE_CHEF\n     );\n     const poolInfo = await getPoolInfo(TDOGEChefContract, 3);\n     const totalDepositTBTCAmount = poolInfo.totalDepositAmount;\n     let stakedTBTC = totalDepositTBTCAmount;\n     const stakedTokenShrinkFactor = poolInfo.stakedTokenShrinkFactor;\n     if (stakedTokenShrinkFactor > 0) {\n       stakedTBTC = stakedTBTC\n         .mul(stakedTokenShrinkFactor)\n         .div(BigNumber.from(1e12 + ''));\n     }\n     return {\n       target: target,\n       mined: mined,\n       airdropClaimed: airdropClaimed,\n       balanceForChef: balanceForChef,\n       totalDepositTBTCAmount: totalDepositTBTCAmount,\n       stakedTBTC: stakedTBTC,\n       stakedTokenShrinkFactor: stakedTokenShrinkFactor\n     };\n   }, [TDOGEChefContract, TDOGEContract]);\n\n  const rebaseRecords = useAsync<any>(async () => {\n    const len = Number(\n      BigNumber.from(\n        await TBTCESTPolicyContract.getRebaseRecordsLen()\n      ).toNumber()\n    );\n    const promiseArray = [];\n    for (\n      let index = len - 1;\n      index >= 0 && len - index <= BATCH_LOAD_RECORD_LIMIT;\n      index--\n    ) {\n      promiseArray.push(TBTCESTPolicyContract.rebaseRecords(index));\n    }\n\n    const list = await Promise.all(promiseArray);\n    console.log('rebaseRecords', list);\n    return list;\n  }, [TBTCESTPolicyContract, account]);\n\n  const rebaseDogeRecords = useAsync<any>(async () => {\n    const len = Number(\n      BigNumber.from(\n        await TDOGEESTPolicyContract.getRebaseRecordsLen()\n      ).toNumber()\n    );\n    const promiseArray = [];\n    for (\n      let index = len - 1;\n      index >= 0 && len - index <= BATCH_LOAD_RECORD_LIMIT;\n      index--\n    ) {\n      promiseArray.push(TDOGEESTPolicyContract.rebaseRecords(index));\n    }\n\n    const list = await Promise.all(promiseArray);\n    console.log('rebaseDogeRecords', list);\n    return list;\n  }, [TDOGEESTPolicyContract, account]);\n\n  const btcDailyRecords = useAsync<any>(() => {\n    return getDailyRecords(\n      FarmBTCContract,\n      farmBTCBasicInfo.result,\n      contractConfig.RTOKEN\n    );\n  }, [FarmBTCContract, farmBTCBasicInfo.result]);\n\n  const btcstDailyRecords = useAsync<any>(async () => {\n    return getDailyRecords(\n      FarmBTCSTContract,\n      farmBTCSTBasicInfo.result,\n      contractConfig.STOKEN\n    );\n  }, [FarmBTCSTContract, farmBTCSTBasicInfo.result]);\n\n  // useEffect(() => {\n  //   console.log(\n  //     'btcstTotalSupply',\n  //     btcstTotalSupply.result,\n  //     btcstTotalSupply.loading\n  //   );\n  // }, [btcstTotalSupply]);\n\n  return {\n    tvl,\n    txInfo,\n    tokenPrice,\n    totalMinted,\n    btcDailyRecords,\n    btcstDailyRecords,\n    farmBTCBasicInfo,\n    farmBTCSTBasicInfo,\n    tbtcTotalSupply,\n    tdogeTotalSupply,\n    btcstTotalSupply,\n    rebaseRecords,\n    rebaseDogeRecords,\n    chefStats,\n    chefDogeStats,\n    BTCBPoolStakeAmount,\n    BTCSTPoolStakeAmount,\n    totalMinedBTC,\n    totalMinedBTCST,\n    totalInPoolBTC,\n    apy\n  };\n};\n","import React, { FC, useState, useCallback, ChangeEvent } from 'react';\nimport {\n  Container,\n  Grid,\n  Typography,\n  makeStyles,\n  Tabs,\n  Tab,\n  Box\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport Header from 'src/components/Header';\nimport DailyMineRecord from './DailyMineRecord';\nimport TauBTCPrice2 from './TauBTCPrice2';\nimport BTCPrice from './BTCPrice';\nimport TauBTCInitMiningProgress from './TauBTCInitMiningProgress';\nimport TauBTCRebaseCountdown from './TauBTCRebaseCountdown';\nimport TauBTCTotalSupply from './TauBTCTotalSupply';\nimport OverviewMineDaily from './OverviewMineDaily';\nimport TauBTCRebaseRecord from './TauBTCRebaseRecord';\nimport Overview from './OverviewDApp';\nimport Overview2 from './Overview2';\nimport BTCSTMineBTCBRecord from './BTCSTMineBTCBRecord';\nimport TauBTCBasicMintRecord from './TauBTCBasicMintRecord';\nimport TauBTCAirdropSegmentation from './TauBTCAirdropSegmentation';\nimport { useStatsState } from 'src/hooks/useStatsState';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useTranslation } from 'react-i18next';\nimport { BTCB, TBTC, BTCST, TDOGE, DOGE } from 'src/constants/token';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    // paddingTop: theme.spacing(3),\n    paddingBottom: '80px'\n  },\n  title: {\n    display: 'block',\n    '@media (min-width: 1280px)': {\n      display: 'none'\n    }\n  },\n  tau: {\n    'text-transform': 'initial'\n  }\n}));\n\nconst tabs = [TBTC.symbol, TDOGE.symbol];\n\nconst DashboardView: FC = () => {\n  const classes = useStyles();\n  const state = useStatsState();\n  const { t } = useTranslation();\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\n\n  const handleTabsChange = useCallback(\n    (event: ChangeEvent<{}>, tab: string) => {\n      setCurrentTab(tab);\n    },\n    []\n  );\n\n  return (\n    <Page className={classes.root} title={t('global.title')}>\n      <Container maxWidth={false}>\n        <Header title={t('stats.tittle')} />\n        <Grid container spacing={3}>\n          <Grid item xs={12} className={classes.title}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.tittle')}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Overview\n              tvl={state.tvl}\n              txInfo={state.txInfo}\n              tokenPrice={state.tokenPrice}\n              tbtcTotalSupply={state.tbtcTotalSupply}\n              btcstTotalSupply={state.btcstTotalSupply}\n            />\n          </Grid>\n          {/* <Grid item xs={12}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.tbtc.title')}\n            </Typography>\n          </Grid> */}\n\n          <Box mt={3} mb={3}>\n            <Tabs\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              value={currentTab}\n              variant=\"scrollable\"\n              textColor=\"secondary\"\n            >\n              {tabs.map(tab => (\n                <Tab\n                  key={tab}\n                  label={t(`stats.${tab}.title`)}\n                  value={tab}\n                  style={{ textTransform: 'none' }}\n                />\n              ))}\n            </Tabs>\n          </Box>\n\n          {currentTab === TBTC.symbol && (\n            <Grid container spacing={3}>\n              <Grid item lg={3} sm={6} xs={12}>\n                <BTCPrice\n                  title={\n                    <>\n                      <i className={classes.tau}>&tau;</i>\n                      {t('stats.tbtc.price') + ' (TWAP)'}\n                    </>\n                  }\n                  tokenPrice={state.tokenPrice}\n                  token={TBTC}\n                />\n              </Grid>\n              <Grid item lg={3} sm={6} xs={12}>\n                <BTCPrice\n                  title={t('stats.btc.price')}\n                  tokenPrice={state.tokenPrice}\n                  token={BTCB}\n                />\n              </Grid>\n              <Grid item lg={3} sm={6} xs={12}>\n                <TauBTCTotalSupply\n                  totalSupply={state.tbtcTotalSupply}\n                  chefStats={state.chefStats}\n                  token={TBTC}\n                />\n              </Grid>\n              <Grid item lg={3} sm={6} xs={12}>\n                <TauBTCRebaseCountdown />\n              </Grid>\n              <Grid item xs={12}>\n                <TauBTCInitMiningProgress\n                  totalSupply={state.tbtcTotalSupply}\n                  chefStats={state.chefStats}\n                  initialMinted={BigNumber.from(21).mul(1e9)}\n                  token={TBTC}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TauBTCRebaseRecord\n                  rebaseRecords={state.rebaseRecords}\n                  token={TBTC}\n                  tokenPriceList={state.tokenPrice}\n                />\n              </Grid>\n            </Grid>\n          )}\n\n          {currentTab === TDOGE.symbol && (\n            <Grid container spacing={3}>\n              <Grid item lg={3} sm={6} xs={12}>\n                <BTCPrice\n                  title={\n                    <>\n                      <i className={classes.tau}>&tau;</i>\n                      {t('stats.tdoge.price') + ' (TWAP)'}\n                    </>\n                  }\n                  tokenPrice={state.tokenPrice}\n                  token={TDOGE}\n                />\n              </Grid>\n              <Grid item lg={3} sm={6} xs={12}>\n                <BTCPrice\n                  title={t('stats.doge.price')}\n                  tokenPrice={state.tokenPrice}\n                  token={DOGE}\n                />\n              </Grid>\n              <Grid item lg={3} sm={6} xs={12}>\n                <TauBTCTotalSupply\n                  totalSupply={state.tdogeTotalSupply}\n                  chefStats={state.chefDogeStats}\n                  token={TDOGE}\n                />\n              </Grid>\n              <Grid item lg={3} sm={6} xs={12}>\n                <TauBTCRebaseCountdown />\n              </Grid>\n              <Grid item xs={12}>\n                <TauBTCInitMiningProgress\n                  totalSupply={state.tdogeTotalSupply}\n                  chefStats={state.chefDogeStats}\n                  initialMinted={BigNumber.from(21).mul(1e9)}\n                  token={TDOGE}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TauBTCRebaseRecord\n                  rebaseRecords={state.rebaseDogeRecords}\n                  token={TDOGE}\n                  tokenPriceList={state.tokenPrice}\n                />\n              </Grid>\n            </Grid>\n          )}\n\n          <Grid item xs={12}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.btcst-btc.title')}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <OverviewMineDaily\n              btcstTotalSupply={state.btcstTotalSupply}\n              totalMined={state.totalMinedBTC}\n              totalInPoolReward={state.totalInPoolBTC}\n              staked={state.BTCBPoolStakeAmount}\n              BTCBPoolStakeAmount={state.BTCBPoolStakeAmount}\n              BTCSTPoolStakeAmount={state.BTCSTPoolStakeAmount}\n              apy={state.apy}\n              targetToken={BTCB}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <DailyMineRecord\n              title={t('stats.earnBTCDaily')}\n              apy={state.apy}\n              loading={\n                state.farmBTCBasicInfo.loading || state.btcDailyRecords.loading\n              }\n              records={state.btcDailyRecords.result}\n              stake={state.BTCBPoolStakeAmount}\n              targetToken={BTCB}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.btcst-btcst.title')}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <OverviewMineDaily\n              btcstTotalSupply={state.btcstTotalSupply}\n              totalMined={state.totalMinedBTCST}\n              totalInPoolReward={state.totalInPoolBTC}\n              staked={state.BTCSTPoolStakeAmount}\n              BTCBPoolStakeAmount={state.BTCBPoolStakeAmount}\n              BTCSTPoolStakeAmount={state.BTCSTPoolStakeAmount}\n              apy={state.apy}\n              targetToken={BTCST}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <DailyMineRecord\n              title={t('stats.earnBTCSTDaily')}\n              apy={state.apy}\n              loading={\n                state.farmBTCSTBasicInfo.loading ||\n                state.btcstDailyRecords.loading\n              }\n              records={state.btcstDailyRecords.result}\n              stake={state.BTCSTPoolStakeAmount}\n              targetToken={BTCST}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardView;\n"],"sourceRoot":""}