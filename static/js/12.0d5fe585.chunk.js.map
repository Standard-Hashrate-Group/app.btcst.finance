{"version":3,"sources":["utils/format.ts","service/index.ts","utils/index.ts","utils/price.ts","utils/contract.ts","hooks/useActiveWeb3React.ts","components/LoadingBox.tsx","utils/analytics.ts","components/Footer.tsx","components/Page.tsx","hooks/useFetchTokenPrice.ts","components/Header.tsx","hooks/useDailyPool.ts","hooks/useIsMountedRef.ts","views/tauboard/DailyMineRecord.tsx","views/tauboard/BTCPrice.tsx","views/tauboard/TauBTCInitMiningProgress.tsx","views/tauboard/CircularProgress.tsx","views/tauboard/TauBTCRebaseCountdown.tsx","views/tauboard/TauBTCTotalSupply.tsx","views/tauboard/OverviewMineDaily.tsx","views/tauboard/TauBTCRebaseRecord/CircularProgress.tsx","components/Label.tsx","views/tauboard/TauBTCRebaseRecord/index.tsx","views/tauboard/OverviewDApp.tsx","views/tauboard/index.tsx","hooks/useStatsState.ts"],"names":["formatBalance","value","decimals","maxFraction","formatted","utils","formatUnits","split","length","substr","parseBalance","parseUnits","formatApy","price","apr","Number","mulUnsafe","FixedNumber","from","divUnsafe","toString","apy","Math","min","pow","formatPercentage","String","getRemainTime","now","Date","totalSeconds","floor","remainSeconds","hours","padStart","minutes","seconds","progress","formatMoney","num","replace","RAMOUNT_DIVIDER","BigNumber","getTVL","a","axios","get","response","data","getTXInfo","getTokenPrice","BTCB","max_supply","name","BTC","symbol","total_supply","TBTC","getMineStatus","totalSupply","contract","undefined","getTotalPendingReward","address","account","claimAllReward","TARGET_INITIAL_SUPPLY","getPoolInfo","index","poolInfo","alreadyMinedReward","merkleTotalAlreadyClaimed","viewFarmBasicInfo","Promise","all","map","field","callStatic","e","console","log","started","stakePeriod","desc","getDailyRecords","FarmContract","farmInfo","tokenAddress","arr","go","k","getTimeKey","push","viewRoundSlot","Object","assign","timeKey","_roundSlotsReward","rewardInfo","rAmount","rAccum","rAccumulateAmount","div","rewardLastSubmiter","rewardAmount","rewardAccumulateAmount","totalStaked","stakedLowestWaterMark","totalStakedInSlot","stakedAddresses","isEmptyValue","text","isBigNumber","isZero","time","baseTime","toNumber","Error","passed","round","end","calculateDailyReward","hashrate","dailyBtcPerHash","btcPrice","dailyEstimated","powerPrice","powerPerHashUnitDay","dailyBTCNetreward","subUnsafe","dailyEstimatedUSD","btc","usd","WEEEK_REWARD_MAP","START_TIME","getDailyRewardsByBlock","pair","getTime","getPriceBySymbol","list","item","values","find","p","toLowerCase","getContract","ABI","library","getAddress","isAddress","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getERC20Contract","IBEP20","abi","getFarmBTCSTContract","FARMBTCST","getTBTCChefContract","TBTCChef","getTBTCESTPolicyContract","TBTCESTPolicy","getMCContract","MasterCollector","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","NetworkContextName","active","useStyles","makeStyles","theme","colorSecondary","color","LoadingBox","children","loading","showNoData","showNoDataContent","size","classes","textAlign","track","window","gtag","props","process","REACT_APP_GA_MEASUREMENT_ID","footer","position","bottom","left","right","backgroundColor","palette","background","paper","boxShadow","paddingTop","paddingBottom","Footer","className","useWeb3React","actionRef","useRef","setWalletModalStatus","useSetRecoilState","walletModalStatusAtom","setAccountModalStatus","accountModalStatusAtom","connectWallet","useCallback","openAccountModal","React","useState","anchorEl","setAnchorEl","Hidden","lgUp","Container","maxWidth","Box","display","alignItems","justifyContent","flexGrow","ml","Button","variant","onClick","slice","ref","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","i18n","changeLanguage","selected","language","Page","forwardRef","title","rest","location","useLocation","setTokenPriceList","tokenPriceListAtom","setTokenPriceLoading","tokenPriceLoadingAtom","useEffect","then","finally","useFetchTokenPrice","sendPageViewEvent","page_path","pathname","Helmet","root","padding","width","toolbar","minHeight","Header","setMobileNavOpen","mobileNavOpenAtom","showNav","clsx","pt","pb","fontSize","mdDown","useDailyPool","sourceToken","targetToken","txHappend","tokenPrice","useRecoilValue","tokenPriceLoading","setLoading","sourceStakeAmount","setSourceStakeAmount","tokenRewardPerStake","setTokenRewardPerStake","usdRewardPerStake","setUsdTokenRewardPerStake","farmingInfo","useMemo","FarmingInfoMap","sourceTokenERC20Contract","useAsyncEffect","contractConfig","TBTC_CHEF","FarmingPidMap","totalDepositAmount","stakedTokenShrinkFactor","mul","tokenReward","tps","ups","balanceOf","FARM","BTCBStakeAmount","FARM_BTCST","BTCSTStakeAmount","totalAmount","add","sourceSupplyAmount","isNegative","fromString","mineBTCBStatus","dayList","eachHaveCoin","error","useIsMountedRef","isMounted","current","spacing","borderRight","divider","RecordItem","logo","record","t","useTranslation","ListItem","key","id","ListItemAvatar","Avatar","alt","component","RouterLink","src","to","ListItemText","disableTypography","primary","Typography","gt","secondary","noWrap","toLocaleDateString","Records","stake","records","Card","CardHeader","Divider","List","disablePadding","i","contrastText","main","valueContainer","avatar","height","tau","RoiPerCustomer","token","gutterBottom","flexWrap","isEmpty","currency","format","margin","label","marginLeft","TauBTCInitMiningProgress","chefStats","initialMinted","percent","result","balanceForChef","stakedTBTC","sub","target","LinearProgress","circle1","stroke","type","fill","strokeWidth","circle2","animation","strokeDasharray","CircularProgress","viewBox","d","TauBTCRebaseCountdown","setTime","setPercent","useInterval","TauBTCTotalSupply","circulatingSupply","breakpoints","up","down","borderBottom","Overview","totalMined","BTCBPoolStakeAmount","BTCSTPoolStakeAmount","totalInPoolReward","staked","btcstTotalSupply","currentStakeAmount","btcstTotalStaked","Grid","container","justify","md","sm","xs","BTCST","multiply","divide","fontFamily","typography","borderRadius","whiteSpace","cursor","flexShrink","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","textTransform","fade","success","warning","Label","style","image","subscriptions","colors","green","TauBTCRebaseRecord","rebaseRecords","element","rate","timestampSec","requestedSupplyAdjustment","epoch","newBalance","empty","Table","TableBody","TableRow","hover","TableCell","mr","align","lt","numeral","exchangeRate","tvl","txInfo","tbtcTotalSupply","active_address_count","bsc_tx_count","dark","DashboardView","state","TBTCContract","BTCSTContract","STOKEN","BTCBContract","RTOKEN","FarmBTCContract","FarmBTCSTContract","TBTCChefContract","TBTCESTPolicyContract","TBTC_POLICY","useAsync","totalMinedBTC","viewAllTimeTotalMined","totalInPoolBTC","totalMinted","farmBTCBasicInfo","farmBTCSTBasicInfo","mined","airdropClaimed","totalDepositTBTCAmount","getRebaseRecordsLen","len","promiseArray","btcDailyRecords","btcstDailyRecords","useStatsState","lg","BTCPrice","OverviewMineDaily","DailyMineRecord"],"mappings":"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","file":"static/js/12.0d5fe585.chunk.js","sourcesContent":["import { BigNumberish, utils, FixedNumber } from 'ethers';\n\nconst baseTime = 1616760000000;\n\nexport const formatBalance = (\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) => {\n  const formatted = utils.formatUnits(value, decimals);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function formatFixedBalance(\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) {}\n\nexport function commonFormatBalance(value: BigNumberish, decimals = 18) {\n  return formatBalance(value, decimals, 8);\n}\n\nexport const parseBalance = (value: string = '0', decimals = 18) => {\n  return utils.parseUnits(value, decimals);\n};\n\n\nexport function formatApy(\n  value: FixedNumber,\n  price: FixedNumber\n) {\n  const apr = Number(\n    value\n      .mulUnsafe(FixedNumber.from(365))\n      .divUnsafe(price)\n      .toString()\n  );\n  // const apy = (1+apr/365)^365-1;\n  const apy = Math.min(9999.999999, Math.pow(1 + apr / 365, 365) - 1);\n  return formatPercentage(apy, 4);\n}\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n  const formatted = String(value * 100);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function getRemainTime() {\n  const now = Date.now();\n  const secondsPerDay = 24 * 60 * 60;\n  const totalSeconds =  Math.floor(((now - baseTime) / 1000) % secondsPerDay);\n  const remainSeconds = secondsPerDay - totalSeconds; \n\n  const hours = String(Math.floor((remainSeconds / ( 60 * 60)) % 24)).padStart(2, '0');\n  const minutes = String(Math.floor((remainSeconds / 60) % 60)).padStart(2, '0');\n  const seconds = String(Math.floor(remainSeconds % 60)).padStart(2, '0');\n  const progress = Math.floor(totalSeconds * 100 / secondsPerDay);\n\n  return {\n    hours,\n    minutes,\n    seconds,\n    progress\n  }\n}\n\nexport function formatMoney(num: Number) {\n  return num.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport axios from 'axios';\nimport { contractConfig } from 'src/config';\nimport { parseBalance } from 'src/utils/format';\nimport { AirdropInfo } from 'src/utils/airdrop';\nimport { getTimeKey } from 'src/utils';\nimport { PriceItem } from 'src/types/token';\n\nconst BATCH_LOAD_RECORD_LIMIT = 5;\nconst RAMOUNT_DIVIDER = BigNumber.from(1e8).pow(BigNumber.from(4));\nconst TBTC_RATE = 1.00;\n\ntype Response<T> = {\n  code: number;\n  data: T;\n  msg?: any;\n};\n\nexport type TokenPriceList = {\n  [key: string]: PriceItem;\n};\n\nexport async function getTVL() {\n  const response = await axios.get('https://api.1-b.tc/api/tvl/');\n\n  return response.data;\n}\n\nexport async function getTXInfo() {\n  const response = await axios.get('https://api.1-b.tc/api/getTXInfo/');\n\n  return response.data;\n}\n\nexport async function getTokenPrice() {\n  try {\n    const response = await axios.get<Response<TokenPriceList>>(\n      'https://api.1-b.tc/api/token/price'\n    );\n    const data = response.data.data;\n\n    data.BTCB = {\n      max_supply: null,\n      name: 'BTCB',\n      price: data.BTC.price,\n      symbol: 'BTCB',\n      total_supply: null\n    };\n\n    data.TBTC = {\n      max_supply: 2100,\n      name: '𝜏Bitcoin',\n      price: data.BTC.price * TBTC_RATE,\n      symbol: 'TBTC',\n      total_supply: null\n    };\n\n    return data;\n  } catch (e) {\n    return {};\n  }\n}\n\nexport async function getMineStatus() {\n  const response = await axios.get(\n    'https://584xqc7ik2.execute-api.us-east-2.amazonaws.com/beta/bp-relay'\n  );\n\n  return response.data.data;\n}\n\nexport async function getTotalStakedBTCST(contract: any, account: any) {\n  if (contract && account) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getTotalMinedRTokenInpool(contract: any) {\n  if (contract) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getBTCInPool(contract: any) {\n  if (contract) {\n    return contract.balanceOf(contractConfig.FARM);\n  }\n\n  return undefined;\n}\n\nexport async function totalSupply(contract: any) {\n  if (contract) {\n    return contract.totalSupply();\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseDate(estPolicyContract: any) {\n  if (estPolicyContract) {\n    let nextTime = await getNextRebaseTimeInSeconds(estPolicyContract);\n    let ms = nextTime.mul(1000).toNumber();\n    if (ms < Date.now()) {\n      return undefined;\n    }\n    console.log('nextTime', ms);\n    return new Date(ms);\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseTimeInSeconds(estPolicyContract: any) {\n  if (estPolicyContract) {\n    const lastRebaseTime = await estPolicyContract.lastRebaseTimestampSec();\n    const interval = await estPolicyContract.minRebaseTimeIntervalSec();\n    return lastRebaseTime.add(interval);\n  }\n}\n\nexport async function getTotalRemainingSupplyLocked(contract: any) {\n  if (contract) {\n    return contract.getTotalRemainingSupplyLocked();\n  }\n  return undefined;\n}\n\nexport async function getTimeWeightedPrice(contract: any) {\n  if (contract) {\n    const data = await contract.getSwapData();\n    if (BigNumber.from(0).eq(data)) {\n      //0 indicates that swap didn't inited, we make it default 1e18/1e18 means one\n      return BigNumber.from(10 ** 18 + '');\n    }\n    return data;\n  }\n  return undefined;\n}\n\nexport async function startBlock(contract: any) {\n  if (contract) {\n    return contract.startBlock();\n  }\n  return undefined;\n}\nexport async function getTokenAllowance(\n  contract: any,\n  account: string,\n  spender: string\n) {\n  if (contract && account) {\n    return contract.allowance(account, spender);\n  }\n  return undefined;\n}\n\nexport async function viewUserInfo(contract: any, account: string) {\n  if (contract && account) {\n    return contract.viewUserInfo(account);\n  }\n}\n\n// TODO: remove mock here\nexport async function getBalance(contract: any, account: string) {\n  if (contract && account) {\n    return contract.balanceOf(account);\n  }\n\n  return undefined;\n}\n\nexport async function getTotalPendingReward(\n  contract: any,\n  address: string,\n  account: string\n) {\n  if (contract && account && address) {\n    return contract.getTotalPendingReward(address, account);\n  }\n\n  return undefined;\n}\n\nexport async function claimAllReward(contract: any, account: string) {\n  if (contract && account) {\n    return contract.claimAllReward(account);\n  }\n\n  return undefined;\n}\n\nexport async function TARGET_INITIAL_SUPPLY(contract: any) {\n  if (contract) {\n    return contract.TARGET_INITIAL_SUPPLY();\n  }\n  return undefined;\n}\n\nexport async function getPoolInfo(contract: any,index: number){\n  if (contract ) {\n    return contract.poolInfo(index);\n  }\n  return undefined;\n}\nexport async function alreadyMinedReward(contract: any) {\n  if (contract) {\n    return contract.alreadyMinedReward();\n  }\n  return undefined;\n}\n\nexport async function merkleTotalAlreadyClaimed(contract: any) {\n  if (contract) {\n    return contract.merkleTotalAlreadyClaimed();\n  }\n  return undefined;\n}\n\nexport async function viewFarmBasicInfo(contract: any) {\n  const data = await Promise.all(\n    ['_farmStartedTime', '_miniStakePeriodInSeconds', '_farmDescription'].map(\n      field => {\n        try {\n          return contract.callStatic[field]();\n        } catch (e) {\n          console.log(e);\n          return '';\n        }\n      }\n    )\n  );\n  return {\n    started: data[0],\n    stakePeriod: data[1],\n    desc: data[2]\n  };\n}\n\nexport async function getDailyRecords(\n  FarmContract: any,\n  farmInfo: any,\n  tokenAddress: string\n) {\n  let arr: number[] = [];\n  let now = Date.now() / 1000;\n\n  if (!farmInfo) {\n    return undefined;\n  }\n\n  for (let index = 0; index < BATCH_LOAD_RECORD_LIMIT; index++) {\n    let go = now - index * farmInfo.stakePeriod;\n    if (go <= farmInfo.started) {\n      break;\n    }\n    let k = getTimeKey(go, farmInfo.started, farmInfo.stakePeriod);\n    arr.push(k);\n  }\n  let data = await Promise.all(\n    arr.map(field => {\n      try {\n        return FarmContract.viewRoundSlot(field);\n      } catch (e) {\n        return '';\n      }\n    })\n  );\n  for (let index = 0; index < arr.length; index++) {\n    data[index] = Object.assign({}, data[index], {\n      timeKey: arr[index]\n    });\n    let rewardInfo = await FarmContract._roundSlotsReward(\n      arr[index],\n      tokenAddress\n    );\n\n    let rAmount = rewardInfo.rAmount;\n    let rAccum = rewardInfo.rAccumulateAmount;\n    if (rewardInfo.rAmount) {\n      rAmount = rewardInfo.rAmount.div(RAMOUNT_DIVIDER);\n    }\n    if (rewardInfo.rAccumulateAmount) {\n      rAccum = rewardInfo.rAccumulateAmount.div(RAMOUNT_DIVIDER);\n    }\n    data[index] = {\n      rewardLastSubmiter: data[index]['rewardLastSubmiter'],\n      rewardAmount: rAmount,\n      rewardAccumulateAmount: rAccum,\n      totalStaked: data[index]['totalStaked'],\n      stakedLowestWaterMark: data[index]['stakedLowestWaterMark'],\n      totalStakedInSlot: data[index]['totalStakedInSlot'],\n      stakedAddresses: data[index]['stakedAddresses'],\n      timeKey: arr[index]\n    };\n  }\n\n  return data;\n}\n","import { BigNumber, FixedNumber } from 'ethers';\nimport { JSBI, Percent } from '@pancakeswap-libs/sdk';\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value\n    .mul(BigNumber.from(10000).add(BigNumber.from(1000)))\n    .div(BigNumber.from(10000));\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000));\n}\n\nexport const isEmptyValue = (text: string) =>\n  BigNumber.isBigNumber(text)\n    ? BigNumber.from(text).isZero()\n    : text === '' || text.replace(/0/g, '').replace(/\\./, '') === '';\n\nexport const formatTimeKey2 = (value: number) => {\n  const date = new Date(value * 1000);\n  return date.toLocaleDateString('zh-cn');\n};\n\nexport function getTimeKey(time, baseTime, stakePeriod) {\n  baseTime = baseTime.toNumber();\n  stakePeriod = stakePeriod.toNumber();\n  if (time < baseTime) {\n    throw new Error('time < farm started time');\n  }\n  let passed = Math.round(time - baseTime);\n  let round = Math.round(passed / stakePeriod);\n  let end = baseTime + round * stakePeriod;\n  if (end < time) {\n    return end + stakePeriod;\n  }\n  return end;\n}\n\nexport const calculateDailyReward = (\n  hashrate: FixedNumber,\n  dailyBtcPerHash: FixedNumber,\n  btcPrice: FixedNumber\n) => {\n  const dailyEstimated = hashrate.mulUnsafe(dailyBtcPerHash);\n  const powerPrice = FixedNumber.from(5846)\n    .divUnsafe(FixedNumber.from(1000 * 1000 * 100))\n    .mulUnsafe(FixedNumber.from(103))\n    .divUnsafe(FixedNumber.from(100));\n  const powerPerHashUnitDay = FixedNumber.from(60).mulUnsafe(\n    FixedNumber.from(24)\n  );\n  let dailyBTCNetreward = dailyEstimated.subUnsafe(\n    powerPerHashUnitDay\n      .mulUnsafe(powerPrice)\n      .mulUnsafe(hashrate)\n      .divUnsafe(btcPrice)\n  );\n  let dailyEstimatedUSD = dailyBTCNetreward.mulUnsafe(btcPrice).round(6);\n  dailyBTCNetreward = dailyBTCNetreward.round(6);\n  return { btc: dailyBTCNetreward, usd: dailyEstimatedUSD };\n};\nconst WEEEK_REWARD_MAP =[\n  82.823529216,\n  41.411764608,\n  20.705882304,\n  10.352941152,\n  5.176470576,\n  2.588235288,\n  1.294117644,\n  0.647058822,0];\nconst START_TIME = new Date('2021-04-02 20:00 GMT+0800');\n\nexport function getDailyRewardsByBlock(pair: string) {\n  console.log(`get ${pair} rewards`);\n  let now = Date.now();\n  if (now<START_TIME.getTime()){\n    now = START_TIME.getTime()+1000;\n  }\n  let index = Math.floor((now-START_TIME.getTime())/(7*86400*1000));\n  if (index>=8){\n    index =8;\n  }\n  return FixedNumber.from(WEEEK_REWARD_MAP[index]+\"\");\n}\n","import { TokenPriceList } from 'src/service';\n\nexport function getPriceBySymbol(list: TokenPriceList, symbol: string) {\n  const item = Object.values(list).find(p => p.symbol.toLowerCase() === symbol);\n\n  if (!item) {\n    return undefined;\n  }\n\n  return item.price;\n}\n","import { getAddress } from '@ethersproject/address';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Web3Provider, JsonRpcSigner } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\n\nimport IBEP20 from 'src/constants/abis/IBEP20.json';\nimport FARMBTCST from 'src/constants/abis/FarmBTCST.json';\nimport TBTCChef from 'src/constants/abis/tBTCChef.json';\nimport TBTCESTPolicy from 'src/constants/abis/tBTCESTPolicy.json';\nimport MasterCollector from 'src/constants/abis/MasterCollector.json';\n\nexport function getSigner(\n  library: Web3Provider,\n  account: string\n): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(\n  library: Web3Provider,\n  account?: string\n): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n\nexport function getContract(\n  address: string,\n  ABI: any,\n  library: Web3Provider,\n  account?: string\n): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n\nexport function getERC20Contract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, IBEP20.abi, library, account);\n}\n\nexport function getFarmBTCSTContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, FARMBTCST.abi, library, account);\n}\n\nexport function getTBTCChefContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCChef.abi, library, account);\n}\n\nexport function getTBTCESTPolicyContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCESTPolicy.abi, library, account);\n}\n\nexport function getMCContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, MasterCollector.abi, library, account);\n}\n\n","import { Web3Provider } from '@ethersproject/providers'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { NetworkContextName  } from 'src/constants/index';\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<\n  Web3Provider\n> & { chainId?: number } {\n  const context = useWeb3ReactCore<Web3Provider>();\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\n  return context.active ? context : contextNetwork;\n}\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, CircularProgress, makeStyles, Theme } from '@material-ui/core';\n\ninterface LoadingBoxProps {\n  children: any;\n  loading?: boolean;\n  showNoData?: boolean;\n  showNoDataContent?: any;\n  p?: number;\n  size?: string;\n  color?: \"primary\" | \"secondary\" | \"inherit\";\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  colorSecondary: {\n    color: '#000000'\n  }\n}));\n\nconst LoadingBox: FC<LoadingBoxProps> = ({\n  children,\n  loading = false,\n  showNoData = false,\n  showNoDataContent = 'No data',\n  color = 'primary',\n  p = 5,\n  size = '40px'\n}) => {\n  const classes = useStyles();\n  if (loading) {\n    return (\n      <Box p={p} textAlign=\"center\">\n        <CircularProgress color={color} size={size} classes={classes}/>\n      </Box>\n    );\n  }\n\n  if (showNoData) {\n    return (\n      <Box p={p} textAlign=\"center\">\n        {showNoDataContent}\n      </Box>\n    );\n  }\n\n  return children;\n};\n\nLoadingBox.propTypes = {\n  children: PropTypes.any,\n  loading: PropTypes.bool,\n  showNoData: PropTypes.bool,\n  showNoDataContent: PropTypes.any\n};\n\nexport default LoadingBox;\n","declare const window: any;\n\nconst track = (...args: any[]): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n};\n\nconst pageview = (props: any): void => {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n};\n\nconst event = (type: string, props: Record<string, any>) => {\n  track('event', type, props);\n};\n\nexport default {\n  pageview,\n  event\n};\n","import React, { useCallback, useRef } from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton,\n  Container,\n  ButtonGroup,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\nimport i18n from 'src/i18n';\n\ninterface FooterProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: '0px 5px 10px 0px rgb(255 255 255 / 70%)',\n    paddingTop: 16,\n    paddingBottom: 16\n  }\n}));\n\nconst Footer: FC<FooterProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Hidden lgUp>\n      <Container maxWidth={false}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexGrow={1}\n          className={classes.footer}\n        >\n          <Box ml={2}>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button>\n                : <Button variant=\"contained\" color=\"primary\" ref={actionRef} onClick={connectWallet}>Connect Wallet</Button>\n            }\n          </Box>\n          <Box p={0}>\n            <Button onClick={(event) => setAnchorEl(event.currentTarget)}>\n              <LanguageIcon />\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n            >\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('zh');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'zh'}\n              >中文</MenuItem>\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('en');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'en'}\n              >EN</MenuItem>\n            </Menu>\n          </Box>\n        </Box>\n      </Container>\n    </Hidden>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React, {\n  forwardRef,\n  useEffect,\n  useCallback\n} from 'react';\nimport type {\n  HTMLProps,\n  ReactNode\n} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport track from 'src/utils/analytics';\nimport Footer from './Footer';\nimport { useFetchTokenPrice } from 'src/hooks/useFetchTokenPrice';\n\ninterface PageProps extends HTMLProps<HTMLDivElement> {\n  children?: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  const location = useLocation();\n  useFetchTokenPrice();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div\n      ref={ref as any}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n      <Footer />\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useEffect } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { tokenPriceListAtom, tokenPriceLoadingAtom } from 'src/atoms';\nimport { getTokenPrice, TokenPriceList } from 'src/service';\n\nexport function useFetchTokenPrice() {\n  const setTokenPriceList = useSetRecoilState(tokenPriceListAtom);\n  const setTokenPriceLoading = useSetRecoilState(tokenPriceLoadingAtom);\n\n  useEffect(() => {\n    setTokenPriceLoading(true);\n    getTokenPrice().then(list => {\n      setTokenPriceList(list);\n    }).finally(() => {\n      setTokenPriceLoading(false);\n    });\n  }, []);\n}\n","import React, {\n  useCallback,\n  useRef,\n} from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton\n} from '@material-ui/core';\n// import { Send as SendIcon } from 'react-feather';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\n// import { useActiveWeb3React} from 'src/hooks/useActiveWeb3React';\nimport Logo from 'src/components/Logo';\n\ninterface HeaderProps {\n  className?: string;\n  title: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // zIndex: theme.zIndex.drawer + 100,\n    // backgroundColor: theme.palette.background.default\n    padding: 0\n  },\n  account: {\n    width: 80,\n  },\n  toolbar: {\n    minHeight: 64\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, title, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n  const setMobileNavOpen = useSetRecoilState(mobileNavOpenAtom);\n\n  const showNav = useCallback(() => {\n    setMobileNavOpen(true);\n  }, [setMobileNavOpen])\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  return (\n    <Toolbar className={clsx(classes.root, className)} {...rest}>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexGrow={1}\n        pt={3}\n        pb={3}\n      >\n        <Hidden lgUp>\n          <Logo />\n          <IconButton\n            color=\"inherit\"\n            onClick={showNav}\n          >\n            <SvgIcon fontSize=\"small\" color=\"primary\">\n              <MenuIcon />\n            </SvgIcon>\n          </IconButton>\n        </Hidden>\n        <Hidden mdDown>\n          <Box flexGrow={1}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {\n                /* <SvgIcon fontSize=\"small\">\n                  <SendIcon />\n                </SvgIcon> */\n              }\n              {title}\n            </Typography>\n          </Box>\n          {/* <Box ml={2} flexGrow={1} /> */}\n          <Box>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button> \n                : <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    ref={actionRef}\n                    onClick={connectWallet}\n                  >\n                    Connect Wallet\n                  </Button>\n            }\n          </Box>\n        </Hidden>\n      </Box>\n    </Toolbar >\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import { utils, BigNumber, FixedNumber } from 'ethers';\nimport { Token } from 'src/types/token';\nimport { useAsync } from 'react-async-hook';\nimport useAsyncEffect from 'use-async-effect';\nimport { getTokenPrice, getMineStatus, getPoolInfo } from 'src/service';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { getERC20Contract, getTBTCChefContract } from 'src/utils/contract';\nimport { useEffect, useMemo, useState } from 'react';\nimport { FarmingInfoMap, BTCB, TBTC, FarmingPidMap } from 'src/constants/token';\nimport { calculateDailyReward, getDailyRewardsByBlock } from 'src/utils';\nimport { formatApy } from 'src/utils/format';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceListAtom, tokenPriceLoadingAtom } from 'src/atoms';\nimport isEmpty from 'lodash/isEmpty';\nimport { contractConfig } from 'src/config';\n\nconst DISTRIBUTE_LINE = '0.6';\n\nexport function useDailyPool(\n  sourceToken: Token,\n  targetToken: Token,\n  txHappend: number = 0\n) {\n  const { account, library } = useActiveWeb3React();\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  const [loading, setLoading] = useState(true);\n  const [sourceStakeAmount, setSourceStakeAmount] = useState<BigNumber>();\n  const [tokenRewardPerStake, setTokenRewardPerStake] = useState<FixedNumber>();\n  const [usdRewardPerStake, setUsdTokenRewardPerStake] = useState<\n    FixedNumber\n  >();\n\n  const farmingInfo = useMemo(() => {\n    return FarmingInfoMap[targetToken.symbol];\n  }, [targetToken.symbol]);\n\n  const sourceTokenERC20Contract = useMemo(() => {\n    return sourceToken && sourceToken.address\n      ? getERC20Contract(sourceToken.address, library, account)\n      : null;\n  }, [sourceToken, library, account]);\n\n  useAsyncEffect(async () => {\n    setLoading(true);\n    if (tokenPriceLoading) {\n      return;\n    }\n\n    try {\n      if (targetToken.symbol === TBTC.symbol) {\n        const contract = getTBTCChefContract(\n          contractConfig.TBTC_CHEF,\n          library,\n          account\n        );\n        const poolInfo = await getPoolInfo(\n          contract,\n          FarmingPidMap[sourceToken.symbol]\n        );\n        let sourceStakeAmount = poolInfo.totalDepositAmount;\n        if (sourceStakeAmount.isZero()) {\n          return;\n        }\n        const stakedTokenShrinkFactor = poolInfo.stakedTokenShrinkFactor;\n        if (stakedTokenShrinkFactor > 0) {\n          sourceStakeAmount = sourceStakeAmount\n            .mul(stakedTokenShrinkFactor)\n            .div(BigNumber.from(1e12 + ''));\n        }\n\n        setSourceStakeAmount(sourceStakeAmount);\n\n        const hashrate = FixedNumber.from(\n          utils.formatUnits(sourceStakeAmount, sourceToken.decimals) + ''\n        );\n        const tokenReward = getDailyRewardsByBlock(\n          `${sourceToken.symbol}-${targetToken.symbol}`\n        );\n\n        const price = FixedNumber.from(\n          '' + getPriceBySymbol(tokenPrice, targetToken.symbol)\n        );\n\n        const tps = tokenReward.divUnsafe(hashrate);\n        const ups = tps.mulUnsafe(price);\n\n        setTokenRewardPerStake(tps);\n        setUsdTokenRewardPerStake(ups);\n      } else {\n        const BTCBStakeAmount: BigNumber = await sourceTokenERC20Contract.balanceOf(\n          contractConfig.FARM\n        );\n        const BTCSTStakeAmount: BigNumber = await sourceTokenERC20Contract.balanceOf(\n          contractConfig.FARM_BTCST\n        );\n\n        setSourceStakeAmount(\n          targetToken.symbol === 'btcb' ? BTCBStakeAmount : BTCSTStakeAmount\n        );\n\n        const totalAmount = BTCBStakeAmount.add(BTCSTStakeAmount);\n        let hashrate = FixedNumber.from(\n          utils.formatUnits(totalAmount, sourceToken.decimals) + ''\n        );\n        console.log('...', hashrate);\n        const sourceSupplyAmount: BigNumber = await sourceTokenERC20Contract.totalSupply();\n        if (\n          FixedNumber.from(totalAmount)\n            .divUnsafe(FixedNumber.from(sourceSupplyAmount))\n            .subUnsafe(FixedNumber.from(DISTRIBUTE_LINE))\n            .isNegative()\n        ) {\n          console.log('............................x');\n          hashrate = FixedNumber.from(DISTRIBUTE_LINE).mulUnsafe(\n            FixedNumber.fromString(\n              utils.formatUnits(sourceSupplyAmount, sourceToken.decimals) + ''\n            )\n          );\n        }\n\n        const mineBTCBStatus = await getMineStatus();\n        const dailyBtcPerHash = FixedNumber.from(\n          mineBTCBStatus.dayList[0].eachHaveCoin\n        );\n        const price = FixedNumber.from(\n          '' + getPriceBySymbol(tokenPrice, BTCB.symbol)\n        );\n        console.log(\n          'calculate netreward using pric:' +\n            price +\n            ' daily btc per TH:' +\n            dailyBtcPerHash +\n            ' hashrate:' +\n            hashrate\n        );\n\n        const { btc, usd } = calculateDailyReward(\n          hashrate,\n          dailyBtcPerHash,\n          price\n        );\n        const tps = btc.divUnsafe(hashrate);\n        const ups = usd.divUnsafe(hashrate);\n        setTokenRewardPerStake(tps);\n        setUsdTokenRewardPerStake(ups);\n      }\n    } catch (e) {\n      console.error(e);\n      console.log('get apy error');\n    } finally {\n      setLoading(false);\n    }\n  }, [\n    sourceToken,\n    targetToken,\n    sourceTokenERC20Contract,\n    tokenPrice,\n    library,\n    account,\n    txHappend\n  ]);\n\n  const apy = useMemo(() => {\n    if (!loading && usdRewardPerStake) {\n      return formatApy(\n        usdRewardPerStake.divUnsafe(FixedNumber.fromString('10')),\n        FixedNumber.fromString(\n          '' + getPriceBySymbol(tokenPrice, sourceToken.symbol)\n        )\n      );\n    }\n  }, [usdRewardPerStake, tokenPrice, loading, txHappend]);\n\n  return {\n    loading,\n    farmingInfo,\n    sourceStakeAmount,\n    usdRewardPerStake,\n    tokenRewardPerStake,\n    apy\n  };\n}\n","import {useRef, useEffect } from 'react';\nimport type { MutableRefObject } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  FC\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport { BigNumber } from 'ethers';\nimport { formatBalance } from 'src/utils/format';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { BTCST } from 'src/constants/token';\nimport { useTranslation } from 'react-i18next';\nimport { Token } from 'src/types/token';\ninterface   RecordsProps {\n  className?: string;\n  loading?: boolean;\n  records: any[];\n  title: string;\n  stake: any;\n  apy: string;\n  targetToken:Token;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\nconst RecordItem: FC<any> = ({record, index,targetToken}) => {\n  const rewardAmount = record.rewardAmount;\n  const stakedLowestWaterMark = record.stakedLowestWaterMark;\n  const { t } = useTranslation();\n  let logo;\n  if (targetToken.name==\"BTCB\"){\n    logo = \"tokens/BTCB.png\";\n  }else if(targetToken.name == \"BTCST\"){\n    logo = \"tokens/BTCST-Small.png\";\n  }\n  return (\n    <ListItem\n      divider={index < 5}\n      key={record.id}\n    >\n      <ListItemAvatar>\n        <Avatar\n          alt=\"Customer\"\n          component={RouterLink}\n          src={logo}\n          to=\"#\"\n        >\n          {/* {getInitials(record.customer.name)} */}\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        disableTypography\n        primary={(\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h6\"\n          >\n            {t(\"stats.mining.daily.reward\")}: {rewardAmount.gt(BigNumber.from(0)) ? formatBalance(rewardAmount || 0): \"N/A\"}\n          </Typography>\n        )}\n        secondary={(\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {t(\"stats.mining.daily.staked\")}: {stakedLowestWaterMark.gt(BigNumber.from(0)) ? formatBalance(stakedLowestWaterMark || 0,17,1): \"N/A\"}\n          </Typography>\n        )}\n      />\n      <Typography\n        color=\"textSecondary\"\n        noWrap\n        variant=\"caption\"\n      >\n        {new Date(record.timeKey * 1000).toLocaleDateString('zh-cn')}\n      </Typography>\n    </ListItem>\n  )\n}\n\nconst Records: FC<RecordsProps> = ({ className,targetToken, title, stake, apy, loading = false, records = [], ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { t } = useTranslation();\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title={title}\n        // action={<GenericMoreButton />}\n      />\n      <Divider />\n      <List disablePadding>\n        {records.map((record, i) => (\n          <RecordItem record={record} key={i} index={i} targetToken={targetToken}/>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nRecords.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Records;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport LoadingBox from 'src/components/LoadingBox';\nimport currency from 'currency.js';\nimport { useTranslation } from 'react-i18next';\nimport isEmpty from 'lodash/isEmpty'; \nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceLoadingAtom } from 'src/atoms';\nimport { BTCB } from 'src/constants/token';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { Token } from 'src/types/token';\n\ninterface RoiPerCustomerProps {\n  className?: string;\n  tokenPrice?:any;\n  token: Token;\n  title: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst RoiPerCustomer: FC<RoiPerCustomerProps> = ({ tokenPrice,className, token, title, ...rest }) => {\n  const classes = useStyles();\n  const {t} = useTranslation();\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          {title}\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n         <div className={classes.valueContainer}>\n            <LoadingBox loading={tokenPriceLoading} p={0} size={'25px'} color=\"secondary\">\n              <Typography\n                variant=\"h3\"\n                color=\"inherit\"\n              >\n                {!isEmpty(tokenPrice) ? currency(getPriceBySymbol(tokenPrice, token.symbol)).format() : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Box>\n      </Box>\n      <Avatar\n        className={classes.avatar}\n        color=\"inherit\"\n      >\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RoiPerCustomer;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport CircularProgress from './CircularProgress';\nimport Label from 'src/components/Label';\nimport { BigNumber } from 'ethers';\nimport { formatBalance } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\n\ninterface TauBTCInitMiningProgressProps {\n  className?: string;\n  chefStats?:any;\n  totalSupply?:any;\n  initialMinted?:BigNumber;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'space-between'\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst TauBTCInitMiningProgress: FC<TauBTCInitMiningProgressProps> = ({totalSupply,initialMinted,chefStats, className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    target:2100,\n    value: 0,\n  };\n  let percent = Math.round(data.value*100/data.target);\n  // if (targetSupply && alreadyMined && alreadyAirdropped&& initialMinted){\n  //   console.log(`balanceForChef:${balanceForChef},targetSupply:${targetSupply},alreadyMined:${alreadyMined},alreadyAirdropped:${alreadyAirdropped},initialMinted:${initialMinted}`)\n  //   percent = (alreadyMined.add(alreadyAirdropped).add(initialMinted).sub(balanceForChef))\n  //       .mul(10000).div(targetSupply).toNumber()/100;\n  // }\n  if (chefStats && chefStats.result && totalSupply && totalSupply.result){\n    console.log(`balanceForChef:${chefStats.result.balanceForChef},total:${totalSupply.result},staked:${chefStats.result.stakedTBTC}`)\n    const circulating = totalSupply.result.sub(chefStats.result.balanceForChef)\n      .add(chefStats.result.stakedTBTC);\n\n    percent = circulating.mul(10000).div(chefStats.result.target).toNumber()/100;\n  }\n  const {t} = useTranslation();\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        component=\"h3\"\n        gutterBottom\n        variant=\"overline\"\n        color=\"textSecondary\"\n      >\n        <i className={classes.tau}>&tau;</i>{t(\"stats.tbtc.miningProgress\")}\n      </Typography>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {percent}\n          %\n        </Typography>\n        <LinearProgress\n          className={classes.progress}\n          value={percent}\n          color=\"secondary\"\n          variant=\"determinate\"\n        />\n      </Box>\n    </Card>\n  );\n};\n\nTauBTCInitMiningProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCInitMiningProgress;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme';\n\ninterface CircularProgressProps {\n  className?: string;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nconst CircularProgress: FC<CircularProgressProps> = ({ className, value, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n};\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, { FC, useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport useInterval from '@use-it/interval';\nimport { Theme } from 'src/theme';\nimport CircularProgress from './CircularProgress';\nimport Label from 'src/components/Label';\nimport { useTranslation } from 'react-i18next';\nimport { getRemainTime } from 'src/utils/format';\n\ninterface TauBTCRebaseCountdownProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    // backgroundColor: theme.palette.secondary.main,\n    // color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TauBTCRebaseCountdown: FC<TauBTCRebaseCountdownProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [time, setTime] = useState('');\n  const [percent, setPercent] = useState(0);\n\n  useInterval(() => {\n    const data = getRemainTime();\n    setTime(`${data.hours}:${data.minutes}:${data.seconds}`);\n    setPercent(data.progress);\n  }, 1000);\n\n  const { t } = useTranslation();\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          {t('stats.tbtc.nextRebase')}\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {time}\n          </Typography>\n        </Box>\n      </Box>\n      <CircularProgress value={percent} className={classes.avatar} />\n    </Card>\n  );\n};\n\nTauBTCRebaseCountdown.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCRebaseCountdown;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { formatBalance } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\ninterface TauBTCTotalSupplyProps {\n  className?: string;\n  totalSupply?:any;\n  chefStats?:any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst TauBTCTotalSupply: FC<TauBTCTotalSupplyProps> = ({ className,totalSupply,chefStats, ...rest }) => {\n  const classes = useStyles();\n  const {t} = useTranslation();\n  let circulatingSupply;\n  if ( chefStats && chefStats.result && totalSupply && totalSupply.result){\n    circulatingSupply = totalSupply.result.sub(chefStats.result.balanceForChef);\n    if (chefStats.result.stakedTBTC){\n      circulatingSupply = circulatingSupply.add(chefStats.result.stakedTBTC);\n    }\n  }\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          <i className={classes.tau}>&tau;</i>{t(\"stats.tbtc.totalSupply\")}\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={totalSupply.loading||chefStats.loading} p={0} size={'25px'}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n                {/* {data.currency} */}\n                {circulatingSupply ? \n                formatBalance(circulatingSupply,9): '-'}\n              </Typography>\n            </LoadingBox> \n          </div>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTauBTCTotalSupply.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCTotalSupply;\n","import React, { useEffect, useMemo, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { utils } from 'ethers';\nimport currency from 'currency.js';\nimport { Card, Grid, Typography, makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { BTCB, BTCST } from 'src/constants/token';\nimport { formatBalance } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\nimport { Token } from 'src/types/token';\ninterface OverviewProps {\n  className?: string;\n  BTCBPoolStakeAmount: any;\n  BTCSTPoolStakeAmount: any;\n  totalMined: any;\n  btcstTotalSupply: any;\n  staked: any;\n  totalInPoolReward?: any;\n  apy: string;\n  targetToken: Token;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  tau: {\n    'text-transform': 'initial'\n  }\n}));\n\nconst Overview: FC<OverviewProps> = ({\n  className,\n  totalMined,\n  BTCBPoolStakeAmount,\n  BTCSTPoolStakeAmount,\n  staked,\n  totalInPoolReward,\n  targetToken,\n  apy,\n  btcstTotalSupply,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const currentStakeAmount = useMemo(() => {\n    return targetToken.symbol === BTCB.symbol\n      ? BTCBPoolStakeAmount\n      : BTCSTPoolStakeAmount;\n  }, [targetToken, BTCBPoolStakeAmount, BTCSTPoolStakeAmount]);\n\n  const btcstTotalStaked = useMemo(() => {\n    const data =\n      BTCBPoolStakeAmount.result && BTCSTPoolStakeAmount.result\n        ? BTCBPoolStakeAmount.result.add(BTCSTPoolStakeAmount.result)\n        : undefined;\n    return data;\n  }, [BTCBPoolStakeAmount.result, BTCSTPoolStakeAmount.result]);\n\n  // console.log(btcstTotalStaked);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\">\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.alltimeMined').replace(\"#\",targetToken.name)}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={totalMined.loading}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {totalMined.result\n                  ? formatBalance(totalMined.result, BTCB.decimals)\n                  : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.btcst.staked')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={currentStakeAmount.loading} size=\"25px\" p={0}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {currentStakeAmount.result\n                  ? formatBalance(currentStakeAmount.result, BTCST.decimals,8)\n                  : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.mining.estapy')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={totalInPoolReward.loading}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {apy ? apy + '%' : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.btcst.boostFactor')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox\n              loading={\n                btcstTotalSupply.loading ||\n                BTCSTPoolStakeAmount.loading ||\n                BTCBPoolStakeAmount.loading\n              }\n            >\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                {btcstTotalSupply.result && btcstTotalStaked\n                  ? currency(\n                      utils.formatUnits(\n                        btcstTotalSupply.result,\n                        BTCST.decimals\n                      ),\n                      { symbol: '' }\n                    )\n                      .multiply(0.6)\n                      .divide(\n                        utils.formatUnits(btcstTotalStaked, BTCST.decimals)\n                      )\n                      .format() + 'X'\n                  : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme';\n\ninterface CircularProgressProps {\n  className?: string;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nconst CircularProgress: FC<CircularProgressProps> = ({ className, value, ...rest }) => {\n  const classes = useStyles();\n  \n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n};\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React from 'react';\nimport type { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme'; \n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport type { Theme } from 'src/theme';\nimport type { RebaseRecord } from 'src/types/reports';\nimport CircularProgress from './CircularProgress';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { formatBalance } from 'src/utils/format';\nimport Label from 'src/components/Label';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useTranslation } from 'react-i18next';\ninterface TauBTCRebaseRecordProps {\n  className?: string;\n  rebaseRecords?:any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  label: {\n    // marginLeft: theme.spacing(1)\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nconst TauBTCRebaseRecord: FC<TauBTCRebaseRecordProps> = ({ rebaseRecords,className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n\n  // console.log(\"rebaseRecords\",rebaseRecords);\n  const {t} = useTranslation();\n  let records=[];\n  if (rebaseRecords && !rebaseRecords.loading){\n    const list = rebaseRecords.result || [];\n    for (let i=0;i<5;i++){\n      if (i< list.length){\n        const element = list[i];\n        \n        records.push({data:element,rate:0,timestampSec:element.timestampSec.toNumber()});\n        if (element.requestedSupplyAdjustment.isZero()){\n          records[i].rate = BigNumber.from(0);\n        }else{\n          console.log(`epoch:${element.epoch},element.requestedSupplyAdjustment:${element.requestedSupplyAdjustment},el.newBalance:${element.newBalance}`);\n          records[i].rate = element.requestedSupplyAdjustment.mul(10000).div(\n            element.requestedSupplyAdjustment.add(element.newBalance));\n        }\n        // console.log(\"rate\",records[i].rate)\n      }else{\n        records.push({\n          empty:true,\n          timestampSec:i\n        });\n      } \n    }\n  }else{\n    for(let i=0;i<5;i++){\n      records.push({loading:true,data:\"-\",timestampSec:i});\n    }\n  }\n  // console.log(\"records\",records);\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={<GenericMoreButton />}\n        title={t(\"stats.tbtc.rebase.records\")}\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {records.map((record) => (\n              record && record.loading ?(\n              <TableRow\n                hover\n                key={record.timestampSec}\n              >\n                <TableCell>\n                  <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    {/* <img\n                      alt=\"Product\"\n                      className={classes.image}\n                      src={product.image}\n                    /> */}\n                    <Box ml={2}>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                      >\n                        {t(\"stats.tbtc.rebase.epoch\")}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {' '}\n                        {''}\n                      </Typography>\n                    </Box>  \n                    <Box ml={2}>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                      >\n                        {''}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {' '} \n                      </Typography>\n                    </Box>\n                  </Box>\n                </TableCell>\n                <TableCell>\n                <LoadingBox loading={record.loading} p={0} size={'25px'}>\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    {t(\"stats.tbtc.rebase.price\")}\n                  </Typography>\n                  <Typography\n                    noWrap\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    {' '}\n                  </Typography>\n                </LoadingBox> \n                </TableCell>\n                <TableCell>\n                  <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"flex-end\"\n                  >\n                    <Box mr={2}>\n                      <Typography\n                        align=\"right\"\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                      >\n                       {\" \"}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {t(\"stats.tbtc.rebase.adjustRate\")}\n                      </Typography>\n                    </Box>\n                    <CircularProgress value={0} />\n                  </Box>\n                </TableCell>\n              </TableRow> \n              )\n              :(\n              <TableRow\n                hover\n                key={record.timestampSec}\n              >                      \n                <TableCell>\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  {/* <img\n                    alt=\"Product\"\n                    className={classes.image}\n                    src={product.image}\n                  /> */}\n                  <Box ml={2}>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      {t(\"stats.tbtc.rebase.epoch\")}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      {' '}\n                      {record.empty? \"-\":record.data.epoch+\"\"}\n                    </Typography>\n                  </Box>  \n                  <Box ml={2}>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      {record.empty? \"-\":record.data.requestedSupplyAdjustment && record.data.requestedSupplyAdjustment.gt(0)? \n                      t('stats.rebase.records.inflation'):\n                      record.data.requestedSupplyAdjustment.lt(0)?t('stats.rebase.records.deflation'):\n                      t('stats.rebase.records.noaction')}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      <span className={classes.subscriptions}>\n                        {record.empty? \"-\":numeral(formatBalance(record.data.requestedSupplyAdjustment,9,8)).format('0,0.00000000')}\n                      </span>\n                      {' '}\n                      &tau;Bitcoin\n                    </Typography>\n                  </Box>\n                </Box>\n              </TableCell>\n              <TableCell>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                >\n                  {t(\"stats.tbtc.rebase.price\")}\n                </Typography>\n                <Typography\n                  noWrap\n                  variant=\"body2\"\n                >\n                  <Label\n                    className={classes.label}\n                    color={record.empty? \"secondary\":\n                    Number(formatBalance(record.data.exchangeRate,18,2))>1? \"success\":\n                    Number(formatBalance(record.data.exchangeRate,18,2))<1? \"error\":\"secondary\"}\n                  >\n                    {record.empty? \"-\":numeral(formatBalance(record.data.exchangeRate,18,2)).format(`0,0.00`)}\n                  </Label>\n                  \n                  {' '}\n                </Typography>\n              </TableCell>\n              <TableCell>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"flex-end\"\n              >\n                <Box mr={2}>\n                  <Typography\n                    align=\"right\"\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    {record.empty || !record.rate? \" \":formatBalance(record.rate,2,4)}\n                    %\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    {t(\"stats.tbtc.rebase.adjustRate\")}\n                  </Typography>\n                </Box>\n                <CircularProgress value={record.empty || !record.rate ?0: \n                  record.rate.gt(0)?\n                  Number(formatBalance(record.rate,2,4)):\n                  100+Number(formatBalance(record.rate,2,4)) }/>\n              </Box>\n            </TableCell>\n            </TableRow> \n              )   \n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        {/* <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button> */}\n      </Box>\n    </Card>\n  );\n}\n\nTauBTCRebaseRecord.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TauBTCRebaseRecord;\n","import React from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\nimport LoadingBox from 'src/components/LoadingBox';\nimport currency from 'currency.js';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { formatBalance, formatMoney } from 'src/utils/format';\nimport { useTranslation } from 'react-i18next';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceLoadingAtom } from 'src/atoms';\nimport { BTCST } from 'src/constants/token';\nimport isEmpty from 'lodash/isEmpty'; \nimport { getPriceBySymbol } from 'src/utils/price';\n\ninterface OverviewProps {\n  className?: string;\n  tvl: any;\n  txInfo: any;\n  tokenPrice: any;\n  tbtcTotalSupply?:any;\n  btcstTotalSupply?:any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst Overview: FC<OverviewProps> = ({ tvl, tokenPrice,tbtcTotalSupply,btcstTotalSupply, txInfo,className, ...rest }) => {\n  const classes = useStyles();\n  const overview = {\n    tvl: '64,456,281,245.00',\n    price: '1000.23',\n    btcstMarketcap: '4,023,452,233.00',\n    tTokenMarketcap: '56,281,245.00'\n  };\n  const { t } = useTranslation();\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  //const LOCKED_Supply = BigNumber.from(4778006+500000).mul(1e17+\"\");\n  const LOCKED_Supply = BigNumber.from(0).mul(1e17+\"\");\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.tvl')}\n          </Typography>\n          \n          <div className={classes.valueContainer}>\n            <LoadingBox loading={tvl.loading} p={0} size={'25px'}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n                {tvl.result && tvl.result.data ? currency(tvl.result.data.tvl).format() : '-'}\n              </Typography>\n            </LoadingBox> \n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.btcst.price')}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={tokenPriceLoading} p={0} size={'25px'}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n               {!isEmpty(tokenPrice) ? currency(getPriceBySymbol(tokenPrice, BTCST.symbol)).format() : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t('stats.dapp.activeAddress')}\n          </Typography>\n          <div className={classes.valueContainer}>\n          <LoadingBox loading={txInfo.loading} p={0} size={'25px'}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n               {txInfo?.result?.data?.active_address_count ? formatMoney(txInfo.result.data.active_address_count) : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            {t(\"stats.dapp.txCount\")}\n          </Typography>\n          <div className={classes.valueContainer}>\n            <LoadingBox loading={txInfo.loading} p={0} size={'25px'}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n              {txInfo?.result?.data?.bsc_tx_count ? formatMoney(txInfo.result.data.bsc_tx_count) : '-'}\n              </Typography>\n            </LoadingBox>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React from 'react';\nimport type { FC } from 'react';\nimport {\n  Container,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport Header from 'src/components/Header';\nimport DailyMineRecord from './DailyMineRecord';\nimport TauBTCPrice2 from './TauBTCPrice2';\nimport BTCPrice from './BTCPrice';\nimport TauBTCInitMiningProgress from './TauBTCInitMiningProgress';\nimport TauBTCRebaseCountdown from './TauBTCRebaseCountdown';\nimport TauBTCTotalSupply from './TauBTCTotalSupply';\nimport OverviewMineDaily from './OverviewMineDaily';\nimport TauBTCRebaseRecord from './TauBTCRebaseRecord';\nimport Overview from './OverviewDApp';\nimport Overview2 from './Overview2';\nimport BTCSTMineBTCBRecord from './BTCSTMineBTCBRecord';\nimport TauBTCBasicMintRecord from './TauBTCBasicMintRecord';\nimport TauBTCAirdropSegmentation from './TauBTCAirdropSegmentation';\nimport { useStatsState } from 'src/hooks/useStatsState';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useTranslation } from 'react-i18next';\nimport { BTCB, TBTC, BTCST } from 'src/constants/token';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    // paddingTop: theme.spacing(3),\n    paddingBottom: '80px'\n  },\n  title:{\n    display:'block',\n    '@media (min-width: 1280px)':{\n      display:'none'\n    }\n  },\n  tau:{\n    'text-transform': 'initial'\n  }\n}));\n\nconst DashboardView: FC = () => {\n  const classes = useStyles();\n  const state = useStatsState();\n  const { t } = useTranslation();\n  return (\n    <Page\n      className={classes.root}\n      title={t(\"global.title\")}\n    >\n      <Container maxWidth={false}>\n        <Header title={t(\"stats.tittle\")} />\n        <Grid container spacing={3}>\n          <Grid item xs={12} className={classes.title}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.tittle')}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Overview tvl={state.tvl} txInfo={state.txInfo} tokenPrice={state.tokenPrice}\n              tbtcTotalSupply={state.tbtcTotalSupply}\n              btcstTotalSupply={state.btcstTotalSupply}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.tbtc.title')}\n            </Typography>\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <BTCPrice title={<><i className={classes.tau}>&tau;</i>{t(\"stats.tbtc.price\")}</>} tokenPrice={state.tokenPrice} token={TBTC} />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <BTCPrice title={t(\"stats.tbtc.price\")} tokenPrice={state.tokenPrice} token={BTCB} />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TauBTCTotalSupply totalSupply={state.tbtcTotalSupply} chefStats={state.chefStats} />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TauBTCRebaseCountdown />\n          </Grid>\n          <Grid item xs={12}>\n            <TauBTCInitMiningProgress\n              totalSupply={state.tbtcTotalSupply}\n              chefStats={state.chefStats}\n              initialMinted={BigNumber.from(21).mul(1e9)}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TauBTCRebaseRecord rebaseRecords={state.rebaseRecords} />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.btcst-btc.title')}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <OverviewMineDaily \n              btcstTotalSupply={state.btcstTotalSupply}  \n              totalMined={state.totalMinedBTC}\n              totalInPoolReward={state.totalInPoolBTC} \n              staked={state.BTCBPoolStakeAmount} \n              BTCBPoolStakeAmount={state.BTCBPoolStakeAmount} \n              BTCSTPoolStakeAmount={state.BTCSTPoolStakeAmount} \n              apy={state.apy}\n              targetToken={BTCB}\n            />\n            </Grid>\n          <Grid item xs={12}>\n            <DailyMineRecord \n              title={t(\"stats.earnBTCDaily\")} \n              apy={state.apy} \n              loading={state.farmBTCBasicInfo.loading || state.btcDailyRecords.loading} \n              records={state.btcDailyRecords.result} \n              stake={state.BTCBPoolStakeAmount} \n              targetToken={BTCB}/>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {t('stats.btcst-btcst.title')}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <OverviewMineDaily \n              btcstTotalSupply={state.btcstTotalSupply} \n              totalMined={state.totalMinedBTC}\n              totalInPoolReward={state.totalInPoolBTC} \n              staked={state.BTCSTPoolStakeAmount} \n              BTCBPoolStakeAmount={state.BTCBPoolStakeAmount} \n              BTCSTPoolStakeAmount={state.BTCSTPoolStakeAmount}\n              apy={state.apy}\n              targetToken={BTCST} />\n          </Grid>\n          <Grid item xs={12}>\n            <DailyMineRecord \n            title={t(\"stats.earnBTCSTDaily\")} \n            apy={state.apy} \n            loading={state.farmBTCSTBasicInfo.loading || state.btcstDailyRecords.loading} \n            records={state.btcstDailyRecords.result} \n            stake={state.BTCSTPoolStakeAmount} \n            targetToken={BTCST}/>\n          </Grid>\n\n\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardView;\n","import { BigNumber } from 'ethers';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAsync } from 'react-async-hook';\nimport {\n  useFarmBTCSTContract,\n  useTBTCContract,\n  useTBTCESTPolicyContract\n} from './useContract';\nimport { contractConfig } from 'src/config';\nimport {\n  getTotalStakedBTCST,\n  totalSupply,\n  getNextRebaseDate,\n  viewFarmBasicInfo,\n  getDailyRecords,\n  getTVL,\n  getTokenPrice,\n  TARGET_INITIAL_SUPPLY,\n  alreadyMinedReward,\n  merkleTotalAlreadyClaimed,\n  getPoolInfo,\n  getTXInfo\n} from 'src/service';\nimport { useEffect, useMemo } from 'react';\nimport {\n  getERC20Contract,\n  getFarmBTCSTContract,\n  getTBTCChefContract,\n  getTBTCESTPolicyContract\n} from 'src/utils/contract';\nimport { formatBalance } from 'src/utils/format';\nimport { useDailyPool } from './useDailyPool';\nimport { BTCB, BTCST } from 'src/constants/token';\nimport { tokenPriceListAtom } from 'src/atoms';\nimport { useRecoilValue } from 'recoil';\n\nconst BATCH_LOAD_RECORD_LIMIT = 5;\nconst RAMOUNT_DIVIDER = BigNumber.from(1e8).pow(BigNumber.from(4));\n\n\nexport const useStatsState = () => {\n  const { account, library } = useWeb3React();\n\n  const { apy } = useDailyPool(BTCST, BTCB);\n\n  const TBTCContract = useMemo(() => {\n    return getERC20Contract(contractConfig.TBTC, library, account);\n  }, [account, library]);\n\n  const BTCSTContract = useMemo(() => {\n    return getERC20Contract(contractConfig.STOKEN, library, account);\n  }, [library, account]);\n\n  const BTCBContract = useMemo(() => {\n    return getERC20Contract(contractConfig.RTOKEN, library, account);\n  }, [library, account]);\n\n  const FarmBTCContract = useMemo(() => {\n    return getFarmBTCSTContract(contractConfig.FARM, library, account);\n  }, [library, account]);\n\n  const FarmBTCSTContract = useMemo(() => {\n    return getFarmBTCSTContract(contractConfig.FARM_BTCST, library, account);\n  }, [library, account]);\n\n  const TBTCChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TBTC_CHEF, library, account);\n  }, [account, library]);\n\n  const TBTCESTPolicyContract = useMemo(() => {\n    return getTBTCESTPolicyContract(\n      contractConfig.TBTC_POLICY,\n      library,\n      account\n    );\n  }, [account, library]);\n\n  const BTCBPoolStakeAmount = useAsync<BigNumber>(() => {\n    return BTCSTContract.balanceOf(contractConfig.FARM);\n  }, [BTCSTContract]);\n\n  const BTCSTPoolStakeAmount = useAsync<BigNumber>(() => {\n    return BTCSTContract.balanceOf(contractConfig.FARM_BTCST);\n  }, [BTCSTContract]);\n\n  const totalMinedBTC = useAsync<BigNumber>(() => {\n    return FarmBTCContract.viewAllTimeTotalMined();\n  }, [FarmBTCContract]);\n\n  const totalInPoolBTC = useAsync<BigNumber>(() => {\n    return BTCBContract.balanceOf(contractConfig.FARM);\n  }, [BTCBContract]);\n\n  const tvl = useAsync(getTVL, []);\n  const txInfo = useAsync(getTXInfo, []);\n  \n  const tbtcTotalSupply = useAsync<BigNumber>(\n    ()=>totalSupply(TBTCContract),\n  [TBTCContract]);\n\n  const btcstTotalSupply = useAsync<BigNumber>(\n    ()=> {\n      return totalSupply(BTCSTContract)\n    },\n  [BTCSTContract]);\n\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n\n  const totalMinted = useAsync<BigNumber>(\n    () => TBTCChefContract.totalMinted(),\n    [TBTCChefContract]\n  );\n\n  const farmBTCBasicInfo = useAsync<any>(\n    () => viewFarmBasicInfo(FarmBTCContract),\n    [FarmBTCContract]\n  );\n\n  const farmBTCSTBasicInfo = useAsync<any>(\n    () => viewFarmBasicInfo(FarmBTCSTContract),\n    [FarmBTCSTContract]\n  );\n\n  const chefStats =  useAsync<any>(async () => {\n    const target = await TARGET_INITIAL_SUPPLY(TBTCChefContract);\n    const mined = await alreadyMinedReward(TBTCChefContract);\n    const airdropClaimed = await merkleTotalAlreadyClaimed(TBTCChefContract);\n    const balanceForChef = await TBTCContract.balanceOf(contractConfig.TBTC_CHEF);\n    const poolInfo = await getPoolInfo(TBTCChefContract,2);\n    const totalDepositTBTCAmount = poolInfo.totalDepositAmount;\n    let stakedTBTC = totalDepositTBTCAmount;\n    const stakedTokenShrinkFactor = poolInfo.stakedTokenShrinkFactor;\n    if (stakedTokenShrinkFactor>0){\n      stakedTBTC = stakedTBTC.mul(stakedTokenShrinkFactor).div(BigNumber.from(1e12+\"\"));\n    }\n    return {\n      target:target,\n      mined:mined,\n      airdropClaimed:airdropClaimed,\n      balanceForChef:balanceForChef,\n      totalDepositTBTCAmount:totalDepositTBTCAmount,\n      stakedTBTC:stakedTBTC,\n      stakedTokenShrinkFactor:stakedTokenShrinkFactor\n    }\n  },[TBTCChefContract,TBTCContract])\n\n  const rebaseRecords = useAsync<any>(async () => {\n    const len = Number(\n      BigNumber.from((await TBTCESTPolicyContract.getRebaseRecordsLen())).toNumber() \n    );\n    const promiseArray = [];\n    for (\n      let index = len-1;\n      index >= 0 && len - index <= BATCH_LOAD_RECORD_LIMIT;\n      index--\n    ) {\n      promiseArray.push(TBTCESTPolicyContract.rebaseRecords(index));\n    }\n\n    const list = await Promise.all(promiseArray);\n    console.log('rebaseRecords', list);\n    return list;\n  }, [TBTCESTPolicyContract, account]);\n\n  const btcDailyRecords = useAsync<any>(() => {\n    return getDailyRecords(FarmBTCContract, farmBTCBasicInfo.result, contractConfig.RTOKEN);\n  }, [FarmBTCContract, farmBTCBasicInfo.result]);\n\n  const btcstDailyRecords = useAsync<any>(async () => {\n    return getDailyRecords(\n      FarmBTCSTContract,\n      farmBTCSTBasicInfo.result,\n      contractConfig.STOKEN\n    );\n  }, [FarmBTCSTContract, farmBTCSTBasicInfo.result]);\n\n  // useEffect(() => {\n  //   console.log(\n  //     'btcstTotalSupply',\n  //     btcstTotalSupply.result,\n  //     btcstTotalSupply.loading\n  //   );\n  // }, [btcstTotalSupply]);\n\n  return {\n    tvl,\n    txInfo,\n    tokenPrice,\n    totalMinted,\n    btcDailyRecords,\n    btcstDailyRecords,\n    farmBTCBasicInfo,\n    farmBTCSTBasicInfo,\n    tbtcTotalSupply,\n    btcstTotalSupply,\n    rebaseRecords,\n    chefStats,\n    BTCBPoolStakeAmount,\n    BTCSTPoolStakeAmount,\n    totalMinedBTC,\n    totalInPoolBTC,\n    apy\n  };\n};\n"],"sourceRoot":""}