{"version":3,"sources":["service/index.ts","utils/contract.ts","hooks/useActiveWeb3React.ts","utils/index.ts","utils/format.ts","hooks/useLatestExpandAmount.ts","utils/price.ts","components/LoadingBox.tsx","utils/analytics.ts","components/Footer.tsx","components/Page.tsx","hooks/useFetchTokenPrice.ts","components/Header.tsx","components/LoadingButton.tsx","hooks/useIsMountedRef.ts","views/airdrop/ClaimButton.tsx","components/MarketMake/index.tsx","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","utils/airdrop.ts","views/airdrop/Airdrops/index.tsx","hooks/useAirdropState.ts","views/airdrop/TDogeAirdrops/index.tsx","hooks/useTDOGEAirdropState.ts","views/airdrop/MineCard/index.tsx","views/airdrop/index.tsx"],"names":["RAMOUNT_DIVIDER","BigNumber","from","pow","getAirdrops","account","a","axios","get","toLowerCase","response","data","isEmpty","airdrop","token","TBTC","index","fullAmount","amount","proof","flags","details","getTDOGEAirdrops","TDOGE","getTokensInfo","getNFTInfo","blockchain","contract","nftId","getTokenPrice","BTCB","max_supply","name","price","BTC","symbol","total_supply","DOGE","getMineStatus","totalSupply","undefined","getTotalPendingReward","address","claimAllReward","estimateGas","gasLimit","mul","div","claimOneReward","claimReward","TARGET_INITIAL_SUPPLY","getPoolInfo","poolInfo","alreadyMinedReward","merkleTotalAlreadyClaimed","viewFarmBasicInfo","Promise","all","map","field","callStatic","e","console","log","started","stakePeriod","desc","getDailyRecords","FarmContract","farmInfo","tokenAddress","arr","now","Date","go","k","getTimeKey","push","viewRoundSlot","length","Object","assign","timeKey","_roundSlotsReward","rewardInfo","rAmount","rAccum","rAccumulateAmount","rewardLastSubmiter","rewardAmount","rewardAccumulateAmount","totalStaked","stakedLowestWaterMark","totalStakedInSlot","stakedAddresses","getLatestRebaseRecord","Number","getRebaseRecordsLen","toNumber","recordLength","rebaseRecords","record","getNewExpandRate","_getNewExpandBase","base","teamRebaseSplit","team","result","FixedNumber","subUnsafe","divUnsafe","toString","getLatestExpandAmount","chefContract","policyContract","rate","requestedSupplyAdjustment","isZero","rs","mulUnsafe","dotIndex","split","findIndex","s","parseFixed","slice","getContract","ABI","library","value","getAddress","isAddress","AddressZero","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","getERC20Contract","IBEP20","abi","getNFTContract","NFT","getFarmBTCSTContract","FARMBTCST","getTBTCChefContract","TBTCChef","getTBTCESTPolicyContract","TBTCESTPolicy","getMCContract","MasterCollector","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","NetworkContextName","active","isEmptyValue","text","isBigNumber","replace","time","baseTime","passed","Math","round","end","calculateDailyReward","hashrate","dailyBtcPerHash","btcPrice","dailyEstimated","powerPrice","powerPerHashUnitDay","dailyBTCNetreward","dailyEstimatedUSD","btc","usd","WEEEK_REWARD_MAP","TOTAL_REWARD_MAP","btcst","btcb","tbtc","getDailyRewardsByBlock","sourceToken","targetToken","latestExpandAmount","utils","formatUnits","decimals","START_TIME","floor","total","before","MiningRewardTotal","after","addUnsafe","isNegative","DOGE_WEEEK_REWARD_MAP","DOGE_TOTAL_REWARD_MAP","doge","tdoge","getDOGEDailyRewardsByBlock","DOGE_START_TIME","DOGE_MiningRewardTotal","formatBalance","maxFraction","formatted","substr","parseBalance","parseUnits","getRoiAndApy","roi","daily","apy","formatApy","afterValue","afterRoi","afterApy","afterDaily","res","useRoi","percent","formatPercentage","beforePercent","diff","String","getRemainTime","totalSeconds","remainSeconds","hours","padStart","minutes","seconds","progress","useFetchLatestExpandAmount","setTDogeLatestExpandAmount","useSetRecoilState","tDogeLatestExpandAmountAtom","setTBTCLatestExpandAmount","tBTCLatestExpandAmountAtom","TBTCSTPolicyContract","useMemo","contractConfig","TBTC_POLICY","TBTCChefContract","TBTC_CHEF","TDOGEESTPolicyContract","TDOGE_POLICY","TDOGEChefContract","TDOGE_CHEF","useEffect","then","useGetLatestExpandAmount","tdogeAmount","useRecoilValue","tbtcAmount","getPriceBySymbol","list","item","values","find","p","getTwapBySymbol","twap","useStyles","makeStyles","theme","colorSecondary","color","LoadingBox","children","loading","loadingAlign","showNoData","showNoDataContent","size","classes","textAlign","track","window","gtag","props","process","REACT_APP_GA_MEASUREMENT_ID","footer","position","bottom","left","right","backgroundColor","palette","background","paper","boxShadow","paddingTop","paddingBottom","Footer","className","useWeb3React","actionRef","useRef","setWalletModalStatus","walletModalStatusAtom","setAccountModalStatus","accountModalStatusAtom","connectWallet","useCallback","openAccountModal","React","useState","anchorEl","setAnchorEl","Hidden","lgUp","Container","maxWidth","Box","display","alignItems","justifyContent","flexGrow","ml","Button","variant","onClick","ref","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","i18n","changeLanguage","selected","language","Page","forwardRef","title","rest","location","useLocation","setTokenPriceList","tokenPriceListAtom","setTokenPriceLoading","tokenPriceLoadingAtom","localStorage","getItem","JSON","parse","setItem","stringify","finally","useFetchTokenPrice","sendPageViewEvent","page_path","pathname","Helmet","root","padding","width","toolbar","minHeight","Header","setMobileNavOpen","mobileNavOpenAtom","showNav","clsx","pt","pb","fontSize","mdDown","pending","pendingIndicator","visibility","pendingIndicatorCenter","transform","pendingIndicatorStart","pendingIndicatorEnd","endIconPendingEnd","startIconPendingStart","labelPendingCenter","PendingIndicator","LoadingButton","disabled","pendingPosition","other","startIcon","capitalize","endIcon","label","useIsMountedRef","isMounted","current","height","breakpoints","down","borderRadius","memo","t","useTranslation","tokenPairs","to","addLiquidity","bullet","margin","pos","marginBottom","currentTokenPairIndex","setCurrentTokenPairIndex","handleSelectChange","target","component","gutterBottom","onChange","tokenPair","key","container","spacing","xl","md","href","tablelvl2","TableHead","_props$component","Component","_objectWithoutProperties","Tablelvl2Context","Provider","_extends","role","withStyles","CardActions","_props$disableSpacing","disableSpacing","marginLeft","AirdropReason","claim","avatar","marginRight","Airdrops","txHappend","setTxHappend","refetchKey","setRefetchKey","airdropInfoData","useAsync","airdropInfo","pendingAirdrops","pendingAirdrop","setLoading","state","alreadyClaimed","merkleAlreadyClaimed","asyncClaimClick","useAsyncCallback","tx","wait","useInterval","c","useAirDropState","tokenPriceLoading","tokenPrice","airdropTokenPrice","reduce","add","Card","minWidth","Table","TableRow","TableCell","TableBody","entries","type","rewardValue","gt","fromString","hover","logoURI","Avatar","src","currency","format","Grid","justify","xs","sm","Typography","align","sub","ClaimButton","execute","CardContent","MineIcon","RouterLink","dark","marginTop","wordBreak","DashboardView","useTheme","lg","MarketMake"],"mappings":"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","file":"static/js/13.01d5c27a.chunk.js","sourcesContent":["import { BigNumber, FixedNumber, parseFixed } from '@ethersproject/bignumber';\nimport axios from 'axios';\nimport { contractConfig } from 'src/config';\nimport { parseBalance } from 'src/utils/format';\nimport { AirdropInfo } from 'src/utils/airdrop';\nimport { getTimeKey } from 'src/utils';\nimport { PriceItem } from 'src/types/token';\nimport { TBTC, TDOGE } from 'src/constants/token';\nimport isEmpty from 'lodash/isEmpty';\n\nconst BATCH_LOAD_RECORD_LIMIT = 5;\nconst RAMOUNT_DIVIDER = BigNumber.from(1e8).pow(BigNumber.from(4));\nconst TBTC_RATE = 1.0;\n\ntype Response<T> = {\n  code: number;\n  data: T;\n  msg?: any;\n};\n\nexport type TokenPriceList = {\n  [key: string]: PriceItem;\n};\n\nexport async function getAirdrops(account: string) {\n  try {\n    const response = await axios.get(\n      `https://api.1-b.tc/api/airdrop/${account.toLowerCase()}`\n    );\n\n    const data = response.data?.data;\n    if (!data || isEmpty(data)) {\n      return null;\n    }\n\n    const airdrop: AirdropInfo = {\n      token: TBTC,\n      index: BigNumber.from(data.index),\n      fullAmount: BigNumber.from(data.amount),\n      proof: data.proof,\n      flags: data.flags,\n      details: data.details\n    };\n\n    return airdrop;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getTDOGEAirdrops(account: string) {\n  try {\n    const response = await axios.get(\n      `https://api.1-b.tc/api/dogeairdrop/${account.toLowerCase()}`\n    );\n\n    const data = response.data?.data;\n    if (!data || isEmpty(data)) {\n      return null;\n    }\n\n    const airdrop: AirdropInfo = {\n      token: TDOGE,\n      index: BigNumber.from(data.index),\n      fullAmount: BigNumber.from(data.amount),\n      proof: data.proof,\n      flags: data.flags,\n      details: data.details\n    };\n\n    return airdrop;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getTVL() {\n  const response = await axios.get('https://api.1-b.tc/api/tvl/');\n\n  return response.data;\n}\n\nexport async function getTXInfo() {\n  const response = await axios.get('https://api.1-b.tc/api/btcstInfo');\n\n  return response.data;\n}\n\nexport async function getTokensInfo() {\n  const response = await axios.get('https://api.1-b.tc/api/tokensInfo');\n\n  return response.data;\n}\n\nexport async function getNFTInfo(\n  blockchain: string,\n  contract: string,\n  nftId: string\n) {\n  const response = await axios.get(\n    `https://api.1-b.tc/api/nft/find?blockchain=${blockchain}&contract=${contract}&nftId=${nftId}`\n  );\n\n  return response.data;\n}\n\nexport async function getTokenPrice() {\n  try {\n    const response = await axios.get<Response<TokenPriceList>>(\n      'https://api.1-b.tc/api/token/price'\n    );\n    const data = response.data.data;\n\n    if (!data.BTCB) {\n      data.BTCB = {\n        max_supply: null,\n        name: 'BTCB',\n        price: data.BTC.price,\n        symbol: 'BTCB',\n        total_supply: null\n      };\n    }\n\n    if (!data.TBTC) {\n      data.TBTC = {\n        max_supply: 2100,\n        name: '𝜏Bitcoin',\n        price: data.BTC.price * TBTC_RATE,\n        symbol: 'TBTC',\n        total_supply: null\n      };\n    }\n\n    if (!data.DOGE) {\n      data.DOGE = {\n        max_supply: null,\n        name: 'Doge',\n        price: data.TDOGE.price,\n        symbol: 'DOGE',\n        total_supply: null\n      };\n    }\n\n    return data;\n  } catch (e) {\n    return {};\n  }\n}\n\nexport async function getMineStatus() {\n  const response = await axios.get(\n    'https://584xqc7ik2.execute-api.us-east-2.amazonaws.com/beta/bp-relay'\n  );\n\n  return response.data.data;\n}\n\nexport async function getTotalStakedBTCST(contract: any, account: any) {\n  if (contract && account) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getTotalMinedRTokenInpool(contract: any) {\n  if (contract) {\n    return contract.viewAllTimeTotalMined();\n  }\n\n  return undefined;\n}\n\nexport async function getBTCInPool(contract: any) {\n  if (contract) {\n    return contract.balanceOf(contractConfig.FARM);\n  }\n\n  return undefined;\n}\n\nexport async function totalSupply(contract: any) {\n  if (contract) {\n    return contract.totalSupply();\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseDate(estPolicyContract: any) {\n  if (estPolicyContract) {\n    let nextTime = await getNextRebaseTimeInSeconds(estPolicyContract);\n    let ms = nextTime.mul(1000).toNumber();\n    if (ms < Date.now()) {\n      return undefined;\n    }\n    console.log('nextTime', ms);\n    return new Date(ms);\n  }\n  return undefined;\n}\n\nexport async function getNextRebaseTimeInSeconds(estPolicyContract: any) {\n  if (estPolicyContract) {\n    const lastRebaseTime = await estPolicyContract.lastRebaseTimestampSec();\n    const interval = await estPolicyContract.minRebaseTimeIntervalSec();\n    return lastRebaseTime.add(interval);\n  }\n}\n\nexport async function getTotalRemainingSupplyLocked(contract: any) {\n  if (contract) {\n    return contract.getTotalRemainingSupplyLocked();\n  }\n  return undefined;\n}\n\nexport async function getTimeWeightedPrice(contract: any) {\n  if (contract) {\n    const dataAll = await contract.gettTokenIntermediaRate();\n    let data = BigNumber.from(0);\n    if (dataAll && dataAll[3]) {\n      data = dataAll[3];\n    }\n    if (BigNumber.from(0).eq(data)) {\n      // console.log(\"datdatdatdadta\",data+\"\");\n      //0 indicates that swap didn't inited, we make it default 1e18/1e18 means one\n      return BigNumber.from(10 ** 18 + '');\n    }\n    console.log('datdatdatdadta', data + '');\n    return data;\n  }\n  return undefined;\n}\n\nexport async function startBlock(contract: any) {\n  if (contract) {\n    return contract.startBlock();\n  }\n  return undefined;\n}\nexport async function getTokenAllowance(\n  contract: any,\n  account: string,\n  spender: string\n) {\n  if (contract && account) {\n    return contract.allowance(account, spender);\n  }\n  return undefined;\n}\n\nexport async function viewUserInfo(contract: any, account: string) {\n  if (contract && account) {\n    return contract.viewUserInfo(account);\n  }\n}\n\n// TODO: remove mock here\nexport async function getBalance(contract: any, account: string) {\n  if (contract && account) {\n    return contract.balanceOf(account);\n  }\n\n  return undefined;\n}\n\nexport async function getTotalPendingReward(\n  contract: any,\n  address: string,\n  account: string\n) {\n  if (contract && account && address) {\n    return contract.getTotalPendingReward(address, account);\n  }\n\n  return undefined;\n}\n\nexport async function claimAllReward(contract: any, account: string) {\n  if (contract && account) {\n    const gasLimit = await contract.estimateGas.claimAllReward(account);\n\n    return contract.claimAllReward(account, {\n      gasLimit: gasLimit.mul(150).div(100)\n    });\n  }\n\n  return undefined;\n}\n\nexport async function claimOneReward(\n  contract: any,\n  account: string,\n  address: string\n) {\n  if (contract && account) {\n    const gasLimit = await contract.estimateGas.claimReward(address, account);\n\n    return contract.claimReward(address, account, {\n      gasLimit: gasLimit.mul(150).div(100)\n    });\n  }\n\n  return undefined;\n}\n\nexport async function TARGET_INITIAL_SUPPLY(contract: any) {\n  if (contract) {\n    return contract.TARGET_INITIAL_SUPPLY();\n  }\n  return undefined;\n}\n\nexport async function getPoolInfo(contract: any, index: number) {\n  if (contract) {\n    return contract.poolInfo(index);\n  }\n  return undefined;\n}\nexport async function alreadyMinedReward(contract: any) {\n  if (contract) {\n    return contract.alreadyMinedReward();\n  }\n  return undefined;\n}\n\nexport async function merkleTotalAlreadyClaimed(contract: any) {\n  if (contract) {\n    return contract.merkleTotalAlreadyClaimed();\n  }\n  return undefined;\n}\n\nexport async function viewFarmBasicInfo(contract: any) {\n  const data = await Promise.all(\n    ['_farmStartedTime', '_miniStakePeriodInSeconds', '_farmDescription'].map(\n      field => {\n        try {\n          return contract.callStatic[field]();\n        } catch (e) {\n          console.log(e);\n          return '';\n        }\n      }\n    )\n  );\n  return {\n    started: data[0],\n    stakePeriod: data[1],\n    desc: data[2]\n  };\n}\n\nexport async function getDailyRecords(\n  FarmContract: any,\n  farmInfo: any,\n  tokenAddress: string\n) {\n  let arr: number[] = [];\n  let now = Date.now() / 1000;\n\n  if (!farmInfo) {\n    return undefined;\n  }\n\n  for (let index = 0; index < BATCH_LOAD_RECORD_LIMIT; index++) {\n    let go = now - index * farmInfo.stakePeriod;\n    if (go <= farmInfo.started) {\n      break;\n    }\n    let k = getTimeKey(go, farmInfo.started, farmInfo.stakePeriod);\n    arr.push(k);\n  }\n  let data = await Promise.all(\n    arr.map(field => {\n      try {\n        return FarmContract.viewRoundSlot(field);\n      } catch (e) {\n        return '';\n      }\n    })\n  );\n  for (let index = 0; index < arr.length; index++) {\n    data[index] = Object.assign({}, data[index], {\n      timeKey: arr[index]\n    });\n    let rewardInfo = await FarmContract._roundSlotsReward(\n      arr[index],\n      tokenAddress\n    );\n\n    let rAmount = rewardInfo.rAmount;\n    let rAccum = rewardInfo.rAccumulateAmount;\n    if (rewardInfo.rAmount) {\n      rAmount = rewardInfo.rAmount.div(RAMOUNT_DIVIDER);\n    }\n    if (rewardInfo.rAccumulateAmount) {\n      rAccum = rewardInfo.rAccumulateAmount.div(RAMOUNT_DIVIDER);\n    }\n    data[index] = {\n      rewardLastSubmiter: data[index]['rewardLastSubmiter'],\n      rewardAmount: rAmount,\n      rewardAccumulateAmount: rAccum,\n      totalStaked: data[index]['totalStaked'],\n      stakedLowestWaterMark: data[index]['stakedLowestWaterMark'],\n      totalStakedInSlot: data[index]['totalStakedInSlot'],\n      stakedAddresses: data[index]['stakedAddresses'],\n      timeKey: arr[index]\n    };\n  }\n\n  return data;\n}\n\nexport async function getLatestRebaseRecord(contract: any) {\n  try {\n    if (!contract) {\n      return {};\n    }\n\n    const recordLength = Number(\n      BigNumber.from(await contract.getRebaseRecordsLen()).toNumber()\n    );\n\n    const record = await contract.rebaseRecords(recordLength - 1);\n\n    return record;\n  } catch (e) {\n    console.log(e);\n    return {};\n  }\n}\n\nexport async function getNewExpandRate(contract: any) {\n  try {\n    const base = await contract._getNewExpandBase();\n    const team = await contract.teamRebaseSplit();\n\n    const result = FixedNumber.from('1').subUnsafe(\n      FixedNumber.from(team).divUnsafe(FixedNumber.from(base))\n    );\n    console.log('expand rate:', result.toString());\n    return result;\n  } catch (e) {\n    console.log(e);\n    return FixedNumber.from('0.6');\n  }\n}\n\nexport async function getLatestExpandAmount(\n  chefContract: any,\n  policyContract: any\n) {\n  if (!chefContract || !policyContract) {\n    return '0';\n  }\n\n  const record = await getLatestRebaseRecord(policyContract);\n  const rate = await getNewExpandRate(chefContract);\n\n  if (FixedNumber.from(record.requestedSupplyAdjustment).isZero()) {\n    return '0';\n  }\n  const rs = FixedNumber.from(record.requestedSupplyAdjustment)\n    .mulUnsafe(rate)\n    .toString();\n  const dotIndex = rs.split('').findIndex(s => s === '.');\n\n  const result = parseFixed(dotIndex > 0 ? rs.slice(0, dotIndex) : rs);\n  return result.toString();\n}\n","import { getAddress } from '@ethersproject/address';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Web3Provider, JsonRpcSigner } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\n\nimport IBEP20 from 'src/constants/abis/IBEP20.json';\nimport NFT from 'src/constants/abis/ntf.json';\nimport FARMBTCST from 'src/constants/abis/FarmBTCST.json';\nimport TBTCChef from 'src/constants/abis/tBTCChef.json';\nimport TBTCESTPolicy from 'src/constants/abis/tBTCESTPolicy.json';\nimport MasterCollector from 'src/constants/abis/MasterCollector.json';\n\nexport function getSigner(\n  library: Web3Provider,\n  account: string\n): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(\n  library: Web3Provider,\n  account?: string\n): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n\nexport function getContract(\n  address: string,\n  ABI: any,\n  library: Web3Provider,\n  account?: string\n): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n\nexport function getERC20Contract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, IBEP20.abi, library, account);\n}\n\nexport function getNFTContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, NFT.abi, library, account);\n}\n\nexport function getFarmBTCSTContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, FARMBTCST.abi, library, account);\n}\n\nexport function getTBTCChefContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCChef.abi, library, account);\n}\n\nexport function getTBTCESTPolicyContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, TBTCESTPolicy.abi, library, account);\n}\n\nexport function getMCContract(\n  address: string,\n  library: Web3Provider,\n  account?: string\n) {\n  return getContract(address, MasterCollector.abi, library, account);\n}\n\n","import { Web3Provider } from '@ethersproject/providers'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { NetworkContextName  } from 'src/constants/index';\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<\n  Web3Provider\n> & { chainId?: number } {\n  const context = useWeb3ReactCore<Web3Provider>();\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\n  return context.active ? context : contextNetwork;\n}\n","import { BigNumber, FixedNumber, utils } from 'ethers';\nimport { JSBI, Percent } from '@pancakeswap-libs/sdk';\nimport { TBTC, TDOGE } from 'src/constants/token';\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value\n    .mul(BigNumber.from(10000).add(BigNumber.from(1000)))\n    .div(BigNumber.from(10000));\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000));\n}\n\nexport const isEmptyValue = (text: string) =>\n  BigNumber.isBigNumber(text)\n    ? BigNumber.from(text).isZero()\n    : text === '' || text.replace(/0/g, '').replace(/\\./, '') === '';\n\nexport const formatTimeKey2 = (value: number) => {\n  const date = new Date(value * 1000);\n  return date.toLocaleDateString('zh-cn');\n};\n\nexport function getTimeKey(time, baseTime, stakePeriod) {\n  baseTime = baseTime.toNumber();\n  stakePeriod = stakePeriod.toNumber();\n  if (time < baseTime) {\n    throw new Error('time < farm started time');\n  }\n  let passed = Math.round(time - baseTime);\n  let round = Math.round(passed / stakePeriod);\n  let end = baseTime + round * stakePeriod;\n  if (end < time) {\n    return end + stakePeriod;\n  }\n  return end;\n}\n\nexport const calculateDailyReward = (\n  hashrate: FixedNumber,\n  dailyBtcPerHash: FixedNumber,\n  btcPrice: FixedNumber\n) => {\n  const dailyEstimated = hashrate.mulUnsafe(dailyBtcPerHash);\n  const powerPrice = FixedNumber.from(5846)\n    .divUnsafe(FixedNumber.from(1000 * 1000 * 100))\n    .mulUnsafe(FixedNumber.from(103))\n    .divUnsafe(FixedNumber.from(100));\n  const powerPerHashUnitDay = FixedNumber.from(60).mulUnsafe(\n    FixedNumber.from(24)\n  );\n  let dailyBTCNetreward = dailyEstimated.subUnsafe(\n    powerPerHashUnitDay\n      .mulUnsafe(powerPrice)\n      .mulUnsafe(hashrate)\n      .divUnsafe(btcPrice)\n  );\n  let dailyEstimatedUSD = dailyBTCNetreward.mulUnsafe(btcPrice).round(6);\n  dailyBTCNetreward = dailyBTCNetreward.round(6);\n  return { btc: dailyBTCNetreward, usd: dailyEstimatedUSD };\n};\nconst WEEEK_REWARD_MAP = [\n  82.823529216,\n  41.411764608,\n  20.705882304,\n  10.352941152,\n  5.176470576,\n  2.588235288,\n  1.294117644,\n  0.647058822,\n  0\n];\nconst TOTAL_REWARD_MAP = {\n  btcst: 1050,\n  btcb: 21,\n  tbtc: 84\n};\nconst MiningRewardTotal = 1155;\n\nconst START_TIME = 1617379200000;\n\nexport function getDailyRewardsByBlock(\n  sourceToken: string,\n  targetToken: string,\n  latestExpandAmount?: string\n) {\n  console.log(\n    `get ${sourceToken}-${targetToken} rewards, expand: ${latestExpandAmount}`\n  );\n  const amount = FixedNumber.from(\n    utils.formatUnits(latestExpandAmount || '0', TBTC.decimals)\n  );\n  let now = Date.now();\n  if (now < START_TIME) {\n    now = START_TIME + 1000;\n  }\n  let index = Math.floor((now - START_TIME) / (7 * 86400 * 1000));\n  if (now >= 1622294525000) {\n    index = 8\n  } else {\n    index = 7\n  }\n  console.log('index:', index);\n  const total = TOTAL_REWARD_MAP[sourceToken.toLowerCase()];\n\n  return {\n    before: FixedNumber.from(WEEEK_REWARD_MAP[index] + '')\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(MiningRewardTotal + '')),\n    after: FixedNumber.from(WEEEK_REWARD_MAP[index] + '')\n      .addUnsafe(amount.isNegative() ? FixedNumber.from(0) : amount)\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(MiningRewardTotal + ''))\n  };\n}\n\n// DOGE\nconst DOGE_WEEEK_REWARD_MAP = [\n  5808403.36134328,\n  2904201.68067163,\n  1452100.84033583,\n  726050.42016791,\n  363025.21008395,\n  181512.60504197,\n  90756.30252098,\n  45378.15126049,\n  0\n];\n\nconst DOGE_TOTAL_REWARD_MAP = {\n  btcst: 75000000,\n  tbtc: 750000,\n  doge: 750000,\n  tdoge: 4500000\n};\nconst DOGE_MiningRewardTotal = 81000000;\n\nconst DOGE_START_TIME = 1621000800000;\n\nexport function getDOGEDailyRewardsByBlock(\n  sourceToken: string,\n  targetToken: string,\n  latestExpandAmount?: string\n) {\n  console.log(\n    `get ${sourceToken}-${targetToken} rewards, expand: ${latestExpandAmount}`\n  );\n  const amount = FixedNumber.from(\n    utils.formatUnits(latestExpandAmount || '0', TDOGE.decimals)\n  );\n  let now = Date.now();\n  if (now < DOGE_START_TIME) {\n    now = DOGE_START_TIME + 1000;\n  }\n  let index = Math.floor((now - DOGE_START_TIME) / (7 * 86400 * 1000));\n  if (index >= 8) {\n    index = 8;\n  }\n  const total = DOGE_TOTAL_REWARD_MAP[sourceToken.toLowerCase()];\n\n  return {\n    before: FixedNumber.from(DOGE_WEEEK_REWARD_MAP[index] + '')\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(DOGE_MiningRewardTotal + '')),\n    after: FixedNumber.from(DOGE_WEEEK_REWARD_MAP[index] + '')\n      .addUnsafe(amount.isNegative() ? FixedNumber.from(0) : amount)\n      .mulUnsafe(FixedNumber.from(total + ''))\n      .divUnsafe(FixedNumber.from(DOGE_MiningRewardTotal + ''))\n  };\n}\n","import { BigNumberish, utils, FixedNumber } from 'ethers';\nimport { BTCB, BTCST, TBTC, TDOGE } from 'src/constants/token';\nimport { Token } from 'src/types/token';\n\nconst baseTime = 1616760000000;\n\nexport const formatBalance = (\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) => {\n  const formatted = utils.formatUnits(value, decimals);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function formatFixedBalance(\n  value: BigNumberish,\n  decimals = 18,\n  maxFraction = 0\n) {}\n\nexport function commonFormatBalance(value: BigNumberish, decimals = 18) {\n  return formatBalance(value, decimals, 8);\n}\n\nexport const parseBalance = (value: string = '0', decimals = 18) => {\n  return utils.parseUnits(value, decimals);\n};\n\nexport function getRoiAndApy(\n  value: FixedNumber,\n  price: FixedNumber,\n) {\n  const roi = Number(\n    value\n      .mulUnsafe(FixedNumber.from(365))\n      .divUnsafe(price)\n      .toString()\n  );\n\n  // const apy = (1+apr/365)^365-1;\n  const daily = value.divUnsafe(price).addUnsafe(FixedNumber.from('1.0'));\n\n  let apy = Math.pow(Number(daily.toString()), 365) - 1;\n\n  return {\n    roi,\n    apy,\n    daily\n  };\n}\n\nexport function formatApy(\n  sourceToken: Token,\n  value: FixedNumber,\n  afterValue: FixedNumber,\n  price: FixedNumber,\n  targetToken?: Token\n) {\n  const { roi, apy } = getRoiAndApy(value, price);\n  const { roi: afterRoi, apy: afterApy, daily: afterDaily } = getRoiAndApy(\n    afterValue,\n    price\n  );\n\n  let res = afterApy;\n  let useRoi = false;\n  if (targetToken && targetToken.symbol === TDOGE.symbol) {\n    res = afterRoi;\n    useRoi = true;\n  }\n  if (afterApy < 10000) {\n    res = afterApy;\n    useRoi = false;\n  }\n  console.log(\n    `daily:${afterDaily},source:${sourceToken.symbol.toLowerCase()},targte:${\n      targetToken ? targetToken.symbol : ''\n    },value:${value},price:${price} res:${res} roi:${afterRoi} apy:${afterApy}`\n  );\n\n  const percent = formatPercentage(res, 2);\n  const beforePercent = formatPercentage(useRoi ? roi : apy, 2) \n  const diff = FixedNumber.from(percent).subUnsafe(FixedNumber.from(beforePercent));\n\n  return {\n    data: `${percent}% ${useRoi ? '(ROI)': ''}`,\n    diff,\n  };\n}\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n  const formatted = String(value * 100);\n  if (maxFraction > 0) {\n    const split = formatted.split('.');\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction);\n    }\n  }\n  return formatted;\n};\n\nexport function getRemainTime() {\n  const now = Date.now();\n  const secondsPerDay = 24 * 60 * 60;\n  const totalSeconds = Math.floor(((now - baseTime) / 1000) % secondsPerDay);\n  const remainSeconds = secondsPerDay - totalSeconds;\n\n  const hours = String(Math.floor((remainSeconds / (60 * 60)) % 24)).padStart(\n    2,\n    '0'\n  );\n  const minutes = String(Math.floor((remainSeconds / 60) % 60)).padStart(\n    2,\n    '0'\n  );\n  const seconds = String(Math.floor(remainSeconds % 60)).padStart(2, '0');\n  const progress = Math.floor((totalSeconds * 100) / secondsPerDay);\n\n  return {\n    hours,\n    minutes,\n    seconds,\n    progress\n  };\n}\n\nexport function formatMoney(num: Number) {\n  return num.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n}\n","import { useEffect, useMemo } from 'react';\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\nimport {\n  tDogeLatestExpandAmountAtom,\n  tBTCLatestExpandAmountAtom\n} from 'src/atoms';\nimport { getLatestExpandAmount } from 'src/service';\nimport {\n  getTBTCESTPolicyContract,\n  getTBTCChefContract\n} from 'src/utils/contract';\nimport { contractConfig } from 'src/config';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { TDOGE, TBTC } from 'src/constants/token';\nimport { BigNumber } from 'ethers';\n\nexport function useFetchLatestExpandAmount() {\n  const { library } = useActiveWeb3React();\n  const setTDogeLatestExpandAmount = useSetRecoilState(\n    tDogeLatestExpandAmountAtom\n  );\n\n  const setTBTCLatestExpandAmount = useSetRecoilState(\n    tBTCLatestExpandAmountAtom\n  );\n\n  const TBTCSTPolicyContract = useMemo(() => {\n    return getTBTCESTPolicyContract(contractConfig.TBTC_POLICY, library);\n  }, [library]);\n\n  const TBTCChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TBTC_CHEF, library);\n  }, [library]);\n\n  const TDOGEESTPolicyContract = useMemo(() => {\n    return getTBTCESTPolicyContract(contractConfig.TDOGE_POLICY, library);\n  }, [library]);\n\n  const TDOGEChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TDOGE_CHEF, library);\n  }, [library]);\n\n  useEffect(() => {\n    getLatestExpandAmount(TDOGEChefContract, TDOGEESTPolicyContract).then(\n      data => {\n        setTDogeLatestExpandAmount(data);\n      }\n    );\n  }, [TDOGEESTPolicyContract, TDOGEChefContract]);\n\n\n  useEffect(() => {\n    getLatestExpandAmount(TBTCChefContract, TBTCSTPolicyContract).then(data => {\n      setTBTCLatestExpandAmount(data);\n    });\n  }, [TBTCSTPolicyContract, TBTCChefContract]);\n}\n\nexport function useGetLatestExpandAmount(symbol: string) {\n  const tdogeAmount = useRecoilValue(tDogeLatestExpandAmountAtom);\n  const tbtcAmount = useRecoilValue(tBTCLatestExpandAmountAtom);\n\n  const result = useMemo(() => {\n    if (symbol === TDOGE.symbol) {\n      return tdogeAmount;\n    }\n\n    if (symbol === TBTC.symbol) {\n      return tbtcAmount;\n    }\n\n    return '0';\n  }, [symbol, tdogeAmount, tbtcAmount]);\n\n  return result;\n}\n","import { TokenPriceList } from 'src/service';\n\nexport function getPriceBySymbol(list: TokenPriceList, symbol: string) {\n  const item = Object.values(list).find(p => p.symbol.toLowerCase() === symbol);\n\n  if (!item) {\n    return undefined;\n  }\n\n  return item.price;\n}\n\nexport function getTwapBySymbol(list: TokenPriceList, symbol: string) {\n  const item = Object.values(list).find(p => p.symbol.toLowerCase() === symbol);\n\n  if (!item) {\n    return undefined;\n  }\n\n  return item.twap;\n}\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, CircularProgress, makeStyles, Theme } from '@material-ui/core';\n\ninterface LoadingBoxProps {\n  children: any;\n  loading?: boolean;\n  loadingAlign?: string;\n  showNoData?: boolean;\n  showNoDataContent?: any;\n  p?: number;\n  size?: string;\n  color?: \"primary\" | \"secondary\" | \"inherit\";\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  colorSecondary: {\n    color: '#000000'\n  }\n}));\n\nconst LoadingBox: FC<LoadingBoxProps> = ({\n  children,\n  loading = false,\n  loadingAlign = \"center\",\n  showNoData = false,\n  showNoDataContent = 'No data',\n  color = 'primary',\n  p = 5,\n  size = '40px'\n}) => {\n  const classes = useStyles();\n  if (loading) {\n    return (\n      <Box p={p} textAlign={loadingAlign}>\n        <CircularProgress color={color} size={size} classes={classes} />\n      </Box>\n    );\n  }\n\n  if (showNoData) {\n    return (\n      <Box p={p} textAlign=\"center\">\n        {showNoDataContent}\n      </Box>\n    );\n  }\n\n  return children;\n};\n\nLoadingBox.propTypes = {\n  children: PropTypes.any,\n  loading: PropTypes.bool,\n  showNoData: PropTypes.bool,\n  showNoDataContent: PropTypes.any\n};\n\nexport default LoadingBox;\n","declare const window: any;\n\nconst track = (...args: any[]): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n};\n\nconst pageview = (props: any): void => {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n};\n\nconst event = (type: string, props: Record<string, any>) => {\n  track('event', type, props);\n};\n\nexport default {\n  pageview,\n  event\n};\n","import React, { useCallback, useRef } from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton,\n  Container,\n  ButtonGroup,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\nimport i18n from 'src/i18n';\n\ninterface FooterProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: '0px 5px 10px 0px rgb(255 255 255 / 70%)',\n    paddingTop: 16,\n    paddingBottom: 16\n  }\n}));\n\nconst Footer: FC<FooterProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Hidden lgUp>\n      <Container maxWidth={false}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexGrow={1}\n          className={classes.footer}\n        >\n          <Box ml={2}>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button>\n                : <Button variant=\"contained\" color=\"primary\" ref={actionRef} onClick={connectWallet}>Connect Wallet</Button>\n            }\n          </Box>\n          <Box p={0}>\n            <Button onClick={(event) => setAnchorEl(event.currentTarget)}>\n              <LanguageIcon />\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n            >\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('en');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'en'}\n              >EN</MenuItem>\n              <MenuItem\n                onClick={() => {\n                  i18n.changeLanguage('zh');\n                  setAnchorEl(null);\n                }}\n                selected={i18n.language === 'zh'}\n              >中文</MenuItem>\n            </Menu>\n          </Box>\n        </Box>\n      </Container>\n    </Hidden>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React, {\n  forwardRef,\n  useEffect,\n  useCallback\n} from 'react';\nimport type {\n  HTMLProps,\n  ReactNode\n} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport track from 'src/utils/analytics';\nimport Footer from './Footer';\nimport { useFetchTokenPrice } from 'src/hooks/useFetchTokenPrice';\nimport { useFetchLatestExpandAmount } from 'src/hooks/useLatestExpandAmount';\n\ninterface PageProps extends HTMLProps<HTMLDivElement> {\n  children?: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  const location = useLocation();\n  useFetchTokenPrice();\n  useFetchLatestExpandAmount();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div\n      ref={ref as any}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n      <Footer />\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useEffect } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { tokenPriceListAtom, tokenPriceLoadingAtom } from 'src/atoms';\nimport { getTokenPrice, TokenPriceList } from 'src/service';\nimport isEmpty from 'lodash/isEmpty';\n\nconst PRICE_CACHE_KEY = 'TOKEN_PRICE_LIST';\n\nexport function useFetchTokenPrice() {\n  const setTokenPriceList = useSetRecoilState(tokenPriceListAtom);\n  const setTokenPriceLoading = useSetRecoilState(tokenPriceLoadingAtom);\n\n  useEffect(() => {\n    setTokenPriceLoading(true);\n    if (localStorage.getItem(PRICE_CACHE_KEY)) {\n      try {\n        const list = JSON.parse(localStorage.getItem(PRICE_CACHE_KEY));\n        console.log('...', list);\n        if (!isEmpty(list)) {\n          setTokenPriceList(list);\n          setTokenPriceLoading(false);\n        }\n      } catch (e) {\n      }\n    }\n    getTokenPrice()\n      .then(list => {\n        if (!isEmpty(list)) {\n          localStorage.setItem(PRICE_CACHE_KEY, JSON.stringify(list));\n          setTokenPriceList(list);\n        }\n      })\n      .finally(() => {\n        setTokenPriceLoading(false);\n      });\n  }, []);\n}\n","import React, {\n  useCallback,\n  useRef,\n} from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  SvgIcon,\n  Typography,\n  makeStyles,\n  Box,\n  Toolbar,\n  Hidden,\n  IconButton\n} from '@material-ui/core';\n// import { Send as SendIcon } from 'react-feather';\nimport { Menu as MenuIcon } from 'react-feather';\nimport { useWeb3React } from '@web3-react/core';\nimport { useSetRecoilState } from 'recoil';\nimport { mobileNavOpenAtom, walletModalStatusAtom, accountModalStatusAtom } from 'src/atoms';\n// import { useActiveWeb3React} from 'src/hooks/useActiveWeb3React';\nimport Logo from 'src/components/Logo';\n\ninterface HeaderProps {\n  className?: string;\n  title: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // zIndex: theme.zIndex.drawer + 100,\n    // backgroundColor: theme.palette.background.default\n    padding: 0\n  },\n  account: {\n    width: 80,\n  },\n  toolbar: {\n    minHeight: 64\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, title, ...rest }) => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const actionRef = useRef<any>(null);\n  const setWalletModalStatus = useSetRecoilState(walletModalStatusAtom);\n  const setAccountModalStatus = useSetRecoilState(accountModalStatusAtom);\n  const setMobileNavOpen = useSetRecoilState(mobileNavOpenAtom);\n\n  const showNav = useCallback(() => {\n    setMobileNavOpen(true);\n  }, [setMobileNavOpen])\n\n  const connectWallet = useCallback(() => {\n    setWalletModalStatus(true);\n  }, [setWalletModalStatus]);\n\n  const openAccountModal = useCallback(() => {\n    setAccountModalStatus(true);\n  }, [setAccountModalStatus]);\n\n  return (\n    <Toolbar className={clsx(classes.root, className)} {...rest}>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexGrow={1}\n        pt={3}\n        pb={3}\n      >\n        <Hidden lgUp>\n          <Logo />\n          <IconButton\n            color=\"inherit\"\n            onClick={showNav}\n          >\n            <SvgIcon fontSize=\"small\" color=\"primary\">\n              <MenuIcon />\n            </SvgIcon>\n          </IconButton>\n        </Hidden>\n        <Hidden mdDown>\n          <Box flexGrow={1}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {\n                /* <SvgIcon fontSize=\"small\">\n                  <SendIcon />\n                </SvgIcon> */\n              }\n              {title}\n            </Typography>\n          </Box>\n          {/* <Box ml={2} flexGrow={1} /> */}\n          <Box>\n            {\n              account\n                ? <Button variant=\"contained\" onClick={openAccountModal}>{`${account.slice(0, 4)}...${account.slice(-4)}`}</Button> \n                : <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    ref={actionRef}\n                    onClick={connectWallet}\n                  >\n                    Connect Wallet\n                  </Button>\n            }\n          </Box>\n        </Hidden>\n      </Box>\n    </Toolbar >\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, ButtonProps } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  /* Styles applied to the root element. */\n  root: {},\n  /* Styles applied to the root element if `pending={true}`. */\n  pending: {},\n  /* Styles applied to the pendingIndicator element. */\n  pendingIndicator: {\n    position: 'absolute',\n    visibility: 'visible',\n    display: 'flex'\n  },\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"center\"`. */\n  pendingIndicatorCenter: {\n    left: '50%',\n    transform: 'translate(-50%)'\n  },\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"start\"`. */\n  pendingIndicatorStart: {\n    left: 14\n  },\n  /* Styles applied to the pendingIndicator element if `pendingPosition=\"end\"`. */\n  pendingIndicatorEnd: {\n    right: 14\n  },\n  /* Styles applied to the endIcon element if `pending={true}` and `pendingPosition=\"end\"`. */\n  endIconPendingEnd: {\n    visibility: 'hidden'\n  },\n  /* Styles applied to the startIcon element if `pending={true}` and `pendingPosition=\"start\"`. */\n  startIconPendingStart: {\n    visibility: 'hidden'\n  },\n  /* Styles applied to the label element if `pending={true}` and `pendingPosition=\"center\"`. */\n  labelPendingCenter: {\n    visibility: 'hidden'\n  }\n}))\n\nconst PendingIndicator = <CircularProgress color=\"inherit\" size={16} />;\n\n\nexport interface LoadingButtonProps extends ButtonProps {\n  pending?: boolean;\n  pendingIndicator?: React.ReactNode;\n  pendingPosition?: 'start' | 'end' | 'center'\n}\n\nconst LoadingButton: FC<LoadingButtonProps> = (props) => {\n  const {\n    children,\n    className,\n    disabled = false,\n    pending = false,\n    pendingIndicator = PendingIndicator,\n    pendingPosition = 'center',\n    ...other\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={clsx(\n        classes.root,\n        {\n          [classes.pending]: pending\n        },\n        className\n      )}\n      disabled={disabled || pending}\n      classes={{\n        startIcon:\n          classes[\n            `startIcon${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`\n          ],\n        endIcon:\n          classes[\n            `endIcon${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`\n          ],\n        label:\n          classes[\n            `label${pending ? 'Pending' : ''}${capitalize(pendingPosition)}`\n          ]\n      }}\n      {...other}\n    >\n      {pending && (\n        <div\n          className={clsx(\n            classes.pendingIndicator,\n            classes[`pendingIndicator${capitalize(pendingPosition)}`]\n          )}\n        >\n          {pendingIndicator}\n        </div>\n      )}\n\n      {children}\n    </Button>\n  );\n};\n\nexport default LoadingButton;\n","import {useRef, useEffect } from 'react';\nimport type { MutableRefObject } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import React, { FC, memo } from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport LoadingButton, { LoadingButtonProps } from 'src/components/LoadingButton';\nimport { useTranslation } from 'react-i18next';\ninterface ClaimButtonProps extends LoadingButtonProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '65px',\n    background: '#222222',\n    boxShadow: '0px 2px 4px 0px #000000',\n    color: '#fff',\n    [theme.breakpoints.down('xs')]: {\n      borderRadius: '0px 0px 6px 6px',\n    }\n  }\n}));\n\nconst ClaimButton: FC<ClaimButtonProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <LoadingButton\n      color=\"primary\"\n      variant=\"contained\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {t(\"airdrop.claimAll\")}\n    </LoadingButton>\n  );\n}\n\nexport default memo(ClaimButton);\n","import React, { FC, memo, useCallback, useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n  makeStyles,\n  Select,\n  MenuItem,\n  Box,\n  Grid\n} from '@material-ui/core';\nimport { TokenPair } from 'src/types/airdrop';\nimport { MARKETS } from 'src/constants';\nimport MarketMakeIcon from 'src/constants/navIcon/MarketMakeIcon'\nimport { TBTC, BTCB } from 'src/constants/token';\nimport { useTranslation } from 'react-i18next';\n\ninterface MarketMakeProps {\n  className?: string;\n}\n\nconst tokenPairs: TokenPair[] = [\n  {\n    from: TBTC,\n    to: BTCB,\n    addLiquidity:\"https://exchange.pancakeswap.finance/#/add/0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c/0x2cd1075682b0fccaadd0ca629e138e64015ba11c\"\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 20\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nconst MarketMake: FC<MarketMakeProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [currentTokenPairIndex, setCurrentTokenPairIndex] = useState<number>(0);\n\n  const handleSelectChange = useCallback((e) => {\n    setCurrentTokenPairIndex(e.target.value)\n  }, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Box>\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              gutterBottom\n              className={classes.title}\n            >\n              {t(\"mine.card.mm\")}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {t(\"mine.card.mmDetails\")}\n            </Typography>\n          </Box>\n          <MarketMakeIcon />\n        </Box>\n        <Select variant=\"outlined\" value={currentTokenPairIndex} onChange={handleSelectChange}>\n          {tokenPairs.map((tokenPair, index) => (\n            <MenuItem\n              key={`${tokenPair.from.name}${tokenPair.to.name}`}\n              value={index}\n            >\n              {tokenPair.from.name}-{tokenPair.to.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </CardContent>\n      <CardActions>\n        <Grid container spacing={2}>\n        {tokenPairs.map((tokenPair, index) => (\n          <Grid item xl={3} md={6} key={`${tokenPair.from.name}${tokenPair.to.name}`}>\n            <Button component=\"a\" href={tokenPair.addLiquidity} target=\"_blank\">\n              {\"Pancakeswap\"}\n            </Button>\n          </Grid>\n        ))}\n          {/* {MARKETS.map(market => (\n            <Grid item xl={3} md={6} key={market.name}>\n              <Button component=\"a\" href={market.href} target=\"_blank\">\n                {market.name}\n              </Button>\n            </Grid>\n          ))} */}\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default memo(MarketMake);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import { utils, BigNumber } from 'ethers';\nimport { parseBalance } from 'src/utils/format';\nimport { Token } from 'src/types/token';\nimport { TBTC } from 'src/constants/token';\nimport airdrops from 'src/constants/airdrop.json';\n\nexport type AirdropType = 'BTCSTHolder' | 'BTCSTBNBLPHolder' | 'BTCSTFound';\n\nexport enum AirdropReason {\n  BTCSTHolder = 'BTCSTHolder',\n  BTCSTBNBLPHolder = 'BTCSTBNBLPHolder',\n  TBTCBTCBLPHolder = 'TBTCBTCBLPHolder',\n  BTCSTFound = 'BTCSTFound',\n  BTCSTTreasury = 'BTCSTFound'\n}\n\nexport type AirdropInfo = {\n  token: Token;\n  index: BigNumber;\n  fullAmount: BigNumber;\n  proof: string[];\n  flags: {\n    [key: string]: boolean;\n  };\n  details: {\n    [key in AirdropType]: string;\n  };\n};\n\n// TODO: get from json\n// const airdrops: {\n//   [key: string]: AirdropInfo[];\n// } = {\n//   '0xcA1eE166B097B85645504Beb883AE8C417B2A1ef': [\n//     {\n//       token: TBTC,\n//       index: parseBalance('1'),\n//       fullAmount: parseBalance('100'),\n//       reason: 'xxxx',\n//       calldata: {\n//         merkleProof: ['123', '123']\n//       }\n//     },\n//     {\n//       token: TBTC,\n//       index: parseBalance('2'),\n//       fullAmount: parseBalance('200'),\n//       reason: 'xx11xx',\n//       calldata: {\n//         merkleProof: ['123', '123']\n//       }\n//     }\n//   ]\n// };\n\n\nexport function getAirdrops(account: string) {\n  const data = airdrops.claims[account];\n  if (!data) {\n    return null;\n  }\n\n  const airdrop: AirdropInfo = { \n    token: TBTC,\n    index: BigNumber.from(data.index),\n    fullAmount: BigNumber.from(data.amount),\n    proof: data.proof,\n    flags: data.flags,\n    details: data.details\n  }\n\n  return airdrop;\n}\n","import React, { useCallback, useState, useEffect, FC, useMemo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardActions,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  Avatar,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport currency from 'currency.js';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ClaimButton from '../ClaimButton';\nimport { useAirDropState } from 'src/hooks/useAirdropState';\nimport { commonFormatBalance, formatBalance } from 'src/utils/format';\nimport { BigNumber, FixedNumber, utils } from 'ethers';\nimport { AirdropReason } from 'src/utils/airdrop';\nimport { useTranslation } from 'react-i18next';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceLoadingAtom, tokenPriceListAtom } from 'src/atoms';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { TBTC } from 'src/constants/token';\ninterface AirdropProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  claim: {\n    [theme.breakpoints.down('xs')]: {\n      padding: '0 !important'\n    }\n  },\n  avatar: {\n    height: 32,\n    width: 32,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Airdrops: FC<AirdropProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const isMountedRef = useIsMountedRef();\n  const {\n    airdropInfo,\n    pendingAirdrops,\n    asyncClaimClick,\n    alreadyClaimed\n  } = useAirDropState();\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n\n  const airdropTokenPrice = useMemo(() => {\n    if (airdropInfo && airdropInfo.token) {\n      return getPriceBySymbol(tokenPrice, airdropInfo.token.symbol);\n    }\n    return null;\n  }, [airdropInfo, tokenPrice]);\n\n  const total = useMemo(() => {\n    if (!pendingAirdrops.result || !airdropInfo) {\n      return BigNumber.from(0);\n    }\n\n    return Object.values(airdropInfo.details).reduce((current, item) => {\n      return current.add(BigNumber.from(item));\n    }, BigNumber.from(0));\n  }, [pendingAirdrops.result, airdropInfo]);\n  // let pendingAmount;\n  // let total = BigNumber.from(0);\n  // if (!pendingAirdrops.loading && pendingAirdrops.result && airdropInfo){\n  //   pendingAmount = pendingAirdrops.result;\n  //   Object.entries(airdropInfo.details).map(([type, amount]) =>{total = total.add(BigNumber.from(amount))});\n  // }\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          {airdropInfo && pendingAirdrops.result && (\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>{t('airdrop.name')}</TableCell>\n                  <TableCell>{t('airdrop.amount')}</TableCell>\n                  <TableCell>{t('airdrop.approxUsd')}</TableCell>\n                  <TableCell>{t('airdrop.reason')}</TableCell>\n                  <TableCell>{t('airdrop.amount.total')}</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.entries(airdropInfo.details).map(([type, amount]) => {\n                  let rewardAmount = BigNumber.from(0);\n                  let rewardValue = '0';\n                  if (total && total.gt(0)) {\n                    if (BigNumber.from(amount).gt(0)) {\n                      rewardAmount = BigNumber.from(amount)\n                        .mul(pendingAirdrops.result)\n                        .div(total);\n                    }\n                  }\n\n                  try {\n                    rewardValue = FixedNumber.fromString(\n                      utils.formatUnits(\n                        rewardAmount,\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(\n                        FixedNumber.fromString(\n                          '' + getPriceBySymbol(tokenPrice, TBTC.symbol)\n                        )\n                      )\n                      .toString();\n                  } catch (e) {}\n\n                  return (\n                    <TableRow hover key={`${airdropInfo.index}-${type}`}>\n                      <TableCell>\n                        <Box display=\"flex\" alignItems=\"center\">\n                          {airdropInfo.token.logoURI && (\n                            <Avatar\n                              className={classes.avatar}\n                              src={airdropInfo.token.logoURI}\n                            />\n                          )}\n                          <div>{airdropInfo.token.name}</div>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        {formatBalance(\n                          rewardAmount,\n                          airdropInfo.token.decimals\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <LoadingBox\n                          loading={tokenPriceLoading}\n                          p={0}\n                          size={'25px'}\n                        >\n                          {currency(rewardValue).format()}\n                        </LoadingBox>\n                      </TableCell>\n                      <TableCell>\n                        {t('airdrop.program.' + AirdropReason[type])}\n                      </TableCell>\n                      <TableCell>\n                        {formatBalance(\n                          BigNumber.from(amount),\n                          airdropInfo.token.decimals\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          )}\n        </Box>\n      </PerfectScrollbar>\n      <CardActions>\n        <Grid container spacing={2} justify=\"space-between\" alignItems=\"center\">\n          <Grid item xs={12} sm={6}>\n            <Typography align=\"left\" variant=\"h5\" color=\"textPrimary\">\n              {t('airdrop.penddingClaimable')}{' '}\n              {pendingAirdrops.result &&\n              pendingAirdrops.result.gt(0) &&\n              airdropInfo &&\n              airdropTokenPrice\n                ? formatBalance(\n                    pendingAirdrops.result,\n                    airdropInfo.token.decimals\n                  ) +\n                  ' ( ' +\n                  currency(\n                    FixedNumber.fromString(\n                      utils.formatUnits(\n                        pendingAirdrops.result,\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(FixedNumber.fromString('' + airdropTokenPrice))\n                      .toString()\n                  ).format() +\n                  ' )'\n                : '-'}\n            </Typography>\n            <Typography align=\"left\" variant=\"h5\" color=\"textPrimary\">\n              {t('airdrop.alreadyClaimed')}{' '}\n              {alreadyClaimed.result &&\n              alreadyClaimed.result.gt(0) &&\n              airdropInfo &&\n              airdropTokenPrice\n                ? formatBalance(\n                    alreadyClaimed.result,\n                    airdropInfo.token.decimals\n                  ) +\n                  ' ( ' +\n                  currency(\n                    FixedNumber.fromString(\n                      utils.formatUnits(\n                        alreadyClaimed.result,\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(FixedNumber.fromString('' + airdropTokenPrice))\n                      .toString()\n                  ).format() +\n                  ' )'\n                : '-'}\n            </Typography>\n            <Typography align=\"left\" variant=\"h5\" color=\"textPrimary\">\n              {t('airdrop.ontheway')}{' '}\n              {alreadyClaimed.result &&\n              alreadyClaimed.result.gt(0) &&\n              total &&\n              total.gt(0) &&\n              airdropInfo &&\n              airdropTokenPrice\n                ? formatBalance(\n                    total.sub(alreadyClaimed.result).gt(0)\n                      ? total.sub(alreadyClaimed.result)\n                      : BigNumber.from(0),\n                    airdropInfo.token.decimals\n                  ) +\n                  ' ( ' +\n                  currency(\n                    FixedNumber.fromString(\n                      utils.formatUnits(\n                        total.sub(alreadyClaimed.result).gt(0)\n                          ? total.sub(alreadyClaimed.result)\n                          : BigNumber.from(0),\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(FixedNumber.fromString('' + airdropTokenPrice))\n                      .toString()\n                  ).format() +\n                  ' )'\n                : '-'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={3} className={classes.claim}>\n            <ClaimButton\n              disabled={\n                pendingAirdrops.loading ||\n                !pendingAirdrops.result ||\n                pendingAirdrops.result.isZero()\n              }\n              pending={asyncClaimClick.loading}\n              onClick={asyncClaimClick.execute}\n            />\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nAirdrops.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Airdrops;\n","import { useMemo, useEffect, useState } from 'react';\n// import { AirdropInfo } from 'src/utils/airdrop';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { contractConfig } from 'src/config';\nimport { getTBTCChefContract } from 'src/utils/contract';\nimport { useAsync, useAsyncCallback } from 'react-async-hook';\nimport { BigNumber } from 'ethers';\nimport { getAirdrops } from 'src/service';\nimport useInterval from '@use-it/interval';\n\n// TODO: mock here\n\nexport function useAirDropState() {\n  const { account, library } = useActiveWeb3React();\n  const [txHappend, setTxHappend] = useState(0);\n  const [refetchKey, setRefetchKey] = useState(0);\n\n\n  const airdropInfoData = useAsync(() => {\n    if (!account) {\n      return undefined;\n    }\n    return getAirdrops(account);\n  }, [account]);\n\n  const airdropInfo = useMemo(() => {\n    if (!airdropInfoData.result) {\n      return undefined;\n    }\n\n    return airdropInfoData.result;\n  }, [airdropInfoData.result]);\n\n  const TBTCChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TBTC_CHEF, library, account);\n  }, [account, library]);\n\n  const pendingAirdrops = useAsync<BigNumber>(\n    () => {\n      if (!airdropInfo) {\n        return undefined;\n      }\n      return TBTCChefContract.pendingAirdrop(\n        airdropInfo.index,\n        account,\n        airdropInfo.fullAmount,\n        airdropInfo.proof\n      );\n    },\n    [airdropInfo, TBTCChefContract, account, txHappend, refetchKey],\n    {\n      setLoading: state => ({ ...state, loading: true })\n    }\n  );\n\n  const alreadyClaimed = useAsync<BigNumber>(() => {\n    if (!account || !TBTCChefContract) {\n      return;\n    }\n\n    return TBTCChefContract.merkleAlreadyClaimed(account);\n  }, [TBTCChefContract, account]);\n\n  const asyncClaimClick = useAsyncCallback(async () => {\n    if (!airdropInfo) {\n      return;\n    }\n    const gasLimit = await TBTCChefContract.estimateGas.claim(\n      airdropInfo.index,\n      account,\n      airdropInfo.fullAmount,\n      pendingAirdrops.result,\n      airdropInfo.proof\n    );\n\n    const tx = await TBTCChefContract.claim(\n      airdropInfo.index,\n      account,\n      airdropInfo.fullAmount,\n      pendingAirdrops.result,\n      airdropInfo.proof,\n      { gasLimit: gasLimit.mul(150).div(100) }\n    );\n\n    if (tx) {\n      await tx.wait();\n      setTxHappend(t => t + 1);\n    }\n  });\n\n  useInterval(() => {\n    if (account) {\n      setRefetchKey(c => c + 1);\n    }\n  }, 30000);\n\n  return {\n    airdropInfo,\n    pendingAirdrops,\n    asyncClaimClick,\n    alreadyClaimed\n  };\n}\n","import React, { useCallback, useState, useEffect, FC, useMemo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardActions,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  Avatar,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport currency from 'currency.js';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ClaimButton from '../ClaimButton';\nimport { useAirDropState } from 'src/hooks/useTDOGEAirdropState';\nimport { commonFormatBalance, formatBalance } from 'src/utils/format';\nimport { BigNumber, FixedNumber, utils } from 'ethers';\nimport { AirdropReason } from 'src/utils/airdrop';\nimport { useTranslation } from 'react-i18next';\nimport { useRecoilValue } from 'recoil';\nimport { tokenPriceLoadingAtom, tokenPriceListAtom } from 'src/atoms';\nimport LoadingBox from 'src/components/LoadingBox';\nimport { getPriceBySymbol } from 'src/utils/price';\nimport { TDOGE } from 'src/constants/token';\ninterface AirdropProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  claim: {\n    [theme.breakpoints.down('xs')]: {\n      padding: '0 !important'\n    }\n  },\n  avatar: {\n    height: 32,\n    width: 32,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Airdrops: FC<AirdropProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const isMountedRef = useIsMountedRef();\n  const { airdropInfo, pendingAirdrops, asyncClaimClick, alreadyClaimed } = useAirDropState();\n  const tokenPriceLoading = useRecoilValue(tokenPriceLoadingAtom);\n  const tokenPrice = useRecoilValue(tokenPriceListAtom);\n\n  const airdropTokenPrice = useMemo(() => {\n    if (airdropInfo && airdropInfo.token) {\n      return getPriceBySymbol(tokenPrice, airdropInfo.token.symbol);\n    }\n    return null;\n  }, [airdropInfo, tokenPrice]);\n\n  const total = useMemo(() => {\n    if (!pendingAirdrops.result || !airdropInfo) {\n      return BigNumber.from(0);\n    }\n\n    return Object.values(airdropInfo.details).reduce((current, item) => {\n      return current.add(BigNumber.from(item));\n    }, BigNumber.from(0));\n  }, [pendingAirdrops.result, airdropInfo]);\n  // let pendingAmount;\n  // let total = BigNumber.from(0);\n  // if (!pendingAirdrops.loading && pendingAirdrops.result && airdropInfo){\n  //   pendingAmount = pendingAirdrops.result;\n  //   Object.entries(airdropInfo.details).map(([type, amount]) =>{total = total.add(BigNumber.from(amount))});\n  // }\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          {airdropInfo && pendingAirdrops.result && (\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>{t('airdrop.name')}</TableCell>\n                  <TableCell>{t('airdrop.amount')}</TableCell>\n                  <TableCell>{t('airdrop.approxUsd')}</TableCell>\n                  <TableCell>{t('airdrop.reason')}</TableCell>\n                  <TableCell>{t('airdrop.amount.total')}</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.entries(airdropInfo.details).map(([type, amount]) => {\n                  let rewardAmount = BigNumber.from(0);\n                  let rewardValue = '0';\n                  if (total && total.gt(0)) {\n                    if (BigNumber.from(amount).gt(0)) {\n                      rewardAmount = BigNumber.from(amount)\n                        .mul(pendingAirdrops.result)\n                        .div(total);\n                    }\n                  }\n\n                  try {\n                    rewardValue = FixedNumber.fromString(\n                      utils.formatUnits(\n                        rewardAmount,\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(\n                        FixedNumber.fromString(\n                          '' + getPriceBySymbol(tokenPrice, TDOGE.symbol)\n                        )\n                      )\n                      .toString();\n                  } catch (e) {}\n\n                  return (\n                    <TableRow hover key={`${airdropInfo.index}-${type}`}>\n                      <TableCell>\n                        <Box display=\"flex\" alignItems=\"center\">\n                          {airdropInfo.token.logoURI && (\n                            <Avatar\n                              className={classes.avatar}\n                              src={airdropInfo.token.logoURI}\n                            />\n                          )}\n                          <div>{airdropInfo.token.name}</div>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        {formatBalance(\n                          rewardAmount,\n                          airdropInfo.token.decimals\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <LoadingBox\n                          loading={tokenPriceLoading}\n                          p={0}\n                          size={'25px'}\n                        >\n                          {currency(rewardValue).format()}\n                        </LoadingBox>\n                      </TableCell>\n                      <TableCell>\n                        {t('airdrop.program.' + AirdropReason[type])}\n                      </TableCell>\n                      <TableCell>\n                        {formatBalance(\n                          BigNumber.from(amount),\n                          airdropInfo.token.decimals\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          )}\n        </Box>\n      </PerfectScrollbar>\n      <CardActions>\n        <Grid container spacing={2} justify=\"space-between\" alignItems=\"center\">\n          <Grid item xs={12} sm={6}>\n            <Typography align=\"left\" variant=\"h5\" color=\"textPrimary\">\n              {t('airdrop.penddingClaimable')}{' '}\n              {pendingAirdrops.result &&\n              pendingAirdrops.result.gt(0) &&\n              airdropInfo &&\n              airdropTokenPrice\n                ? formatBalance(\n                    pendingAirdrops.result,\n                    airdropInfo.token.decimals\n                  ) +\n                  ' ( ' +\n                  currency(\n                    FixedNumber.fromString(\n                      utils.formatUnits(\n                        pendingAirdrops.result,\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(FixedNumber.fromString('' + airdropTokenPrice))\n                      .toString()\n                  ).format() +\n                  ' )'\n                : '-'}\n            </Typography>\n            <Typography align=\"left\" variant=\"h5\" color=\"textPrimary\">\n              {t('airdrop.alreadyClaimed')}{' '}\n              {alreadyClaimed.result &&\n              alreadyClaimed.result.gt(0) &&\n              airdropInfo &&\n              airdropTokenPrice\n                ? formatBalance(\n                    alreadyClaimed.result,\n                    airdropInfo.token.decimals\n                  ) +\n                  ' ( ' +\n                  currency(\n                    FixedNumber.fromString(\n                      utils.formatUnits(\n                        alreadyClaimed.result,\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(FixedNumber.fromString('' + airdropTokenPrice))\n                      .toString()\n                  ).format() +\n                  ' )'\n                : '-'}\n            </Typography>\n            <Typography align=\"left\" variant=\"h5\" color=\"textPrimary\">\n              {t('airdrop.ontheway')}{' '}\n              {alreadyClaimed.result &&\n              alreadyClaimed.result.gt(0) &&\n              total &&\n              total.gt(0) &&\n              airdropInfo &&\n              airdropTokenPrice\n                ? formatBalance(\n                    total.sub(alreadyClaimed.result).gt(0)\n                      ? total.sub(alreadyClaimed.result)\n                      : BigNumber.from(0),\n                    airdropInfo.token.decimals\n                  ) +\n                  ' ( ' +\n                  currency(\n                    FixedNumber.fromString(\n                      utils.formatUnits(\n                        total.sub(alreadyClaimed.result).gt(0)\n                          ? total.sub(alreadyClaimed.result)\n                          : BigNumber.from(0),\n                        airdropInfo.token.decimals\n                      )\n                    )\n                      .mulUnsafe(FixedNumber.fromString('' + airdropTokenPrice))\n                      .toString()\n                  ).format() +\n                  ' )'\n                : '-'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={3} className={classes.claim}>\n            <ClaimButton\n              disabled={\n                pendingAirdrops.loading ||\n                !pendingAirdrops.result ||\n                pendingAirdrops.result.isZero()\n              }\n              pending={asyncClaimClick.loading}\n              onClick={asyncClaimClick.execute}\n            />\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nAirdrops.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Airdrops;\n","import { useMemo, useEffect, useState } from 'react';\n// import { AirdropInfo } from 'src/utils/airdrop';\nimport { useActiveWeb3React } from './useActiveWeb3React';\nimport { contractConfig } from 'src/config';\nimport { getTBTCChefContract } from 'src/utils/contract';\nimport { useAsync, useAsyncCallback } from 'react-async-hook';\nimport { BigNumber } from 'ethers';\nimport { getTDOGEAirdrops } from 'src/service';\nimport useInterval from '@use-it/interval';\n\n// TODO: mock here\n\nexport function useAirDropState() {\n  const { account, library } = useActiveWeb3React();\n  const [txHappend, setTxHappend] = useState(0);\n  const [refetchKey, setRefetchKey] = useState(0);\n\n  const airdropInfoData = useAsync(() => {\n    if (!account) {\n      return undefined;\n    }\n    return getTDOGEAirdrops(account);\n  }, [account]);\n\n  const airdropInfo = useMemo(() => {\n    if (!airdropInfoData.result) {\n      return undefined;\n    }\n\n    return airdropInfoData.result;\n  }, [airdropInfoData.result]);\n\n  const TBTCChefContract = useMemo(() => {\n    return getTBTCChefContract(contractConfig.TDOGE_CHEF, library, account);\n  }, [account, library]);\n\n  const pendingAirdrops = useAsync<BigNumber>(\n    () => {\n      if (!airdropInfo) {\n        return undefined;\n      }\n      return TBTCChefContract.pendingAirdrop(\n        airdropInfo.index,\n        account,\n        airdropInfo.fullAmount,\n        airdropInfo.proof\n      );\n    },\n    [airdropInfo, TBTCChefContract, account, txHappend, refetchKey],\n    {\n      setLoading: state => ({ ...state, loading: true })\n    }\n  );\n\n  const alreadyClaimed = useAsync<BigNumber>(() => {\n    if (!account || !TBTCChefContract) {\n      return;\n    }\n\n    return TBTCChefContract.merkleAlreadyClaimed(account);\n  }, [TBTCChefContract, account]);\n\n  const asyncClaimClick = useAsyncCallback(async () => {\n    if (!airdropInfo) {\n      return;\n    }\n    const gasLimit = await TBTCChefContract.estimateGas.claim(\n      airdropInfo.index,\n      account,\n      airdropInfo.fullAmount,\n      pendingAirdrops.result,\n      airdropInfo.proof\n    );\n\n    const tx = await TBTCChefContract.claim(\n      airdropInfo.index,\n      account,\n      airdropInfo.fullAmount,\n      pendingAirdrops.result,\n      airdropInfo.proof,\n      { gasLimit: gasLimit.mul(150).div(100) }\n    );\n\n    if (tx) {\n      await tx.wait();\n      setTxHappend(t => t + 1);\n    }\n  });\n\n  useInterval(() => {\n    if (account) {\n      setRefetchKey(c => c + 1);\n    }\n  }, 30000);\n\n  return {\n    airdropInfo,\n    pendingAirdrops,\n    asyncClaimClick,\n    alreadyClaimed\n  };\n}\n","import React, { FC, memo } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n  makeStyles,\n  Box\n} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MineIcon from 'src/constants/navIcon/MineIcon';\nimport { useTranslation } from 'react-i18next';\n\ninterface MineCardProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 20\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nconst MineCard: FC<MineCardProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const {t} = useTranslation();\n  return (\n    <Card>\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Box>\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              gutterBottom\n              className={classes.title}\n            >\n              {t(\"airdrop.mine\")}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {t(\"airdrop.mineMoreByStaking\")}\n            </Typography>\n          </Box>\n          <MineIcon />\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Box p={1}>\n          <Button color=\"default\" variant=\"contained\" component={RouterLink} size=\"small\" to=\"/mine\">\n            {t(\"airdrop.mine\")}\n          </Button>\n        </Box>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default memo(MineCard);\n","import React, { FC } from 'react';\nimport {\n  Container,\n  Grid,\n  Hidden,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useWeb3React } from '@web3-react/core';\nimport Page from 'src/components/Page';\nimport Header from 'src/components/Header';\nimport { Theme } from 'src/theme';\nimport Airdrops from './Airdrops';\nimport TDogeAirdrop from './TDogeAirdrops';\nimport MineCard from './MineCard';\nimport MarketMake from 'src/components/MarketMake';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    paddingBottom: 80,\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n    // paddingTop: theme.spacing(3),\n    // paddingBottom: theme.spacing(3)\n  },\n\n  title: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    wordBreak: 'break-word'\n  }\n}));\n\nconst DashboardView: FC = () => {\n  const classes = useStyles();\n  const { account } = useWeb3React();\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const title = t('airdrop.title');\n\n  return (\n    <Page className={classes.root} title={t('global.title')}>\n      <Container maxWidth={false}>\n        <Header title={title} />\n        <Hidden lgUp>\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {/* <SvgIcon fontSize=\"small\">\n                <SendIcon />\n              </SvgIcon> */}\n            {title}\n          </Typography>\n        </Hidden>\n        <Typography\n          className={classes.title}\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          {t('airdrop.avaliableFor').replace('#', account)}\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item lg={12} xl={12} xs={12}>\n            <Airdrops />\n          </Grid>\n        </Grid>\n        {account && (\n          <Grid container spacing={3}>\n            <Grid item lg={12} xl={12} xs={12}>\n              <TDogeAirdrop />\n            </Grid>\n          </Grid>\n        )}\n\n        <Typography className={classes.title} variant=\"h4\" color=\"textPrimary\">\n          {t('airdrop.getMore')}\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item lg={6} xl={6} xs={12}>\n            <MineCard />\n          </Grid>\n          <Grid item lg={6} xl={6} xs={12}>\n            <MarketMake />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardView;\n"],"sourceRoot":""}